{
	"id": "c38ae7c10f38dbcfbb74d507a9972d70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.12",
	"solcLongVersion": "0.5.12+commit.7709ece9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/BNum.sol": {
				"content": "// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.5.12;\r\n\r\nimport \"./BConst.sol\";\r\n\r\ncontract BNum is BConst {\r\n\r\n    function btoi(uint a)\r\n        internal pure \r\n        returns (uint)\r\n    {\r\n        return a / BONE;\r\n    }\r\n\r\n    function bfloor(uint a)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        return btoi(a) * BONE;\r\n    }\r\n\r\n    function badd(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c = a + b;\r\n        require(c >= a, \"ERR_ADD_OVERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsub(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        (uint c, bool flag) = bsubSign(a, b);\r\n        require(!flag, \"ERR_SUB_UNDERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsubSign(uint a, uint b)\r\n        internal pure\r\n        returns (uint, bool)\r\n    {\r\n        if (a >= b) {\r\n            return (a - b, false);\r\n        } else {\r\n            return (b - a, true);\r\n        }\r\n    }\r\n\r\n    function bmul(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c0 = a * b;\r\n        require(a == 0 || c0 / a == b, \"ERR_MUL_OVERFLOW\");\r\n        uint c1 = c0 + (BONE / 2);\r\n        require(c1 >= c0, \"ERR_MUL_OVERFLOW\");\r\n        uint c2 = c1 / BONE;\r\n        return c2;\r\n    }\r\n\r\n    function bdiv(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(b != 0, \"ERR_DIV_ZERO\");\r\n        uint c0 = a * BONE;\r\n        require(a == 0 || c0 / a == BONE, \"ERR_DIV_INTERNAL\"); // bmul overflow\r\n        uint c1 = c0 + (b / 2);\r\n        require(c1 >= c0, \"ERR_DIV_INTERNAL\"); //  badd require\r\n        uint c2 = c1 / b;\r\n        return c2;\r\n    }\r\n\r\n    // DSMath.wpow\r\n    function bpowi(uint a, uint n)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint z = n % 2 != 0 ? a : BONE;\r\n\r\n        for (n /= 2; n != 0; n /= 2) {\r\n            a = bmul(a, a);\r\n\r\n            if (n % 2 != 0) {\r\n                z = bmul(z, a);\r\n            }\r\n        }\r\n        return z;\r\n    }\r\n\r\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\r\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\r\n    // of approximation of b^0.w\r\n    function bpow(uint base, uint exp)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(base >= MIN_BPOW_BASE, \"ERR_BPOW_BASE_TOO_LOW\");\r\n        require(base <= MAX_BPOW_BASE, \"ERR_BPOW_BASE_TOO_HIGH\");\r\n\r\n        uint whole  = bfloor(exp);   \r\n        uint remain = bsub(exp, whole);\r\n\r\n        uint wholePow = bpowi(base, btoi(whole));\r\n\r\n        if (remain == 0) {\r\n            return wholePow;\r\n        }\r\n\r\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\r\n        return bmul(wholePow, partialResult);\r\n    }\r\n\r\n    function bpowApprox(uint base, uint exp, uint precision)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        // term 0:\r\n        uint a     = exp;\r\n        (uint x, bool xneg)  = bsubSign(base, BONE);\r\n        uint term = BONE;\r\n        uint sum   = term;\r\n        bool negative = false;\r\n\r\n\r\n        // term(k) = numer / denom \r\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\r\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\r\n        // continue until term is less than precision\r\n        for (uint i = 1; term >= precision; i++) {\r\n            uint bigK = i * BONE;\r\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\r\n            term = bmul(term, bmul(c, x));\r\n            term = bdiv(term, bigK);\r\n            if (term == 0) break;\r\n\r\n            if (xneg) negative = !negative;\r\n            if (cneg) negative = !negative;\r\n            if (negative) {\r\n                sum = bsub(sum, term);\r\n            } else {\r\n                sum = badd(sum, term);\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n}\r\n"
			},
			"Contracts/BConst.sol": {
				"content": "\r\n\r\npragma solidity 0.5.12;\r\n\r\nimport \"./BColor.sol\";\r\n\r\ncontract BConst is BBronze {\r\n    uint public constant BONE              = 10**18;\r\n\r\n    uint public constant MIN_BOUND_TOKENS  = 2;\r\n    uint public constant MAX_BOUND_TOKENS  = 8;\r\n\r\n    uint public constant MIN_FEE           = BONE / 10**6;\r\n    uint public constant MAX_FEE           = BONE / 10;\r\n    uint public constant EXIT_FEE          = 0;\r\n\r\n    uint public constant MIN_WEIGHT        = BONE;\r\n    uint public constant MAX_WEIGHT        = BONE * 50;\r\n    uint public constant MAX_TOTAL_WEIGHT  = BONE * 50;\r\n    uint public constant MIN_BALANCE       = BONE / 10**12;\r\n\r\n    uint public constant INIT_POOL_SUPPLY  = BONE * 100;\r\n\r\n    uint public constant MIN_BPOW_BASE     = 1 wei;\r\n    uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei;\r\n    uint public constant BPOW_PRECISION    = BONE / 10**10;\r\n\r\n    uint public constant MAX_IN_RATIO      = BONE / 2;\r\n    uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei;\r\n}\r\n"
			},
			"Contracts/BColor.sol": {
				"content": "\r\npragma solidity 0.5.12;\r\n\r\ncontract BColor {\r\n    function getColor()\r\n        external view\r\n        returns (bytes32);\r\n}\r\n\r\ncontract BBronze is BColor {\r\n    function getColor()\r\n        external view\r\n        returns (bytes32) {\r\n            return bytes32(\"BRONZE\");\r\n        }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/BColor.sol": {
				"BBronze": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a86139b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060a68061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b60007f42524f4e5a45000000000000000000000000000000000000000000000000000090509056fea265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA6 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A86139B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xd1 BALANCE EXTCODESIZE 0xf9 LOG2 0xdc 0xc2 0xad ADDRESS 0xd2 0x1f 0xe1 0xe9 CALL SHR 0xb4 CALL LOG4 0xc7 DUP4 ADDRESS DUP8 SWAP14 SWAP15 0xc0 PUSH7 0x99197BB2CF0564 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "129:158:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:158:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b60007f42524f4e5a45000000000000000000000000000000000000000000000000000090509056fea265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A86139B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xd1 BALANCE EXTCODESIZE 0xf9 LOG2 0xdc 0xc2 0xad ADDRESS 0xd2 0x1f 0xe1 0xe9 CALL SHR 0xb4 CALL LOG4 0xc7 DUP4 ADDRESS DUP8 SWAP14 SWAP15 0xc0 PUSH7 0x99197BB2CF0564 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "129:158:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:158:0;;;;;;;;;;;;;;;;;;;163:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;224:7;255:17;248:24;;163:121;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33200",
								"executionCost": "87",
								"totalCost": "33287"
							},
							"external": {
								"getColor()": "191"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "MSTORE"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "CODECOPY"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
									".code": [
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "POP"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "LT"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "SHR"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "REVERT"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BColor.sol\":\"BBronze\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"BColor": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BColor.sol\":\"BColor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Contracts/BConst.sol": {
				"BConst": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BONE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BPOW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EXIT_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_POOL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_IN_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_OUT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_TOTAL_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0e0d136\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbc694ea2\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbc694ea2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc36596a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6580d12\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4a28a52\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec093021\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xb0e0d136\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb7b800a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xba019dab\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x867378c5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x867378c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9381cd2b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x992e2a92\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a86139b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x09a3bbe4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x189d00ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x218b5382\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x76c7a3c7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_11:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_12:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_13:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_14:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_15:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_16:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_17:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_18:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_19:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_24:\n        /* \"Contracts/BConst.sol\":572:574  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":565:574  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_26:\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      div\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_28:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_30:\n        /* \"Contracts/BConst.sol\":295:300  10**6 */\n      0x0f4240\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":288:300  BONE / 10**6 */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_32:\n        /* \"Contracts/BConst.sol\":629:635  10**12 */\n      0xe8d4a51000\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":622:635  BONE / 10**12 */\n      dup2\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      div\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_34:\n        /* \"Contracts/BConst.sol\":692:695  100 */\n      0x64\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":685:695  BONE * 100 */\n      mul\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_36:\n        /* \"Contracts/BConst.sol\":996:1001  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":991:992  3 */\n      0x03\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":984:992  BONE / 3 */\n      dup2\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      div\n        /* \"Contracts/BConst.sol\":983:1001  (BONE / 3) + 1 wei */\n      add\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_38:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_40:\n        /* \"Contracts/BConst.sol\":237:238  8 */\n      0x08\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_42:\n        /* \"Contracts/BConst.sol\":188:189  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_44:\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_46:\n        /* \"Contracts/BConst.sol\":355:357  10 */\n      0x0a\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":348:357  BONE / 10 */\n      dup2\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_48:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_50:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_52:\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_54:\n        /* \"Contracts/BConst.sol\":515:517  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":508:517  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_56:\n        /* \"Contracts/BConst.sol\":934:935  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":927:935  BONE / 2 */\n      dup2\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      div\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610467806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 0x4b DUP11 PUSH27 0xAE352ECB490DC0117AD90800C835B8B89034BB834742883FDC6044 ISZERO PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "57:948:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:948:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 0x4b DUP11 PUSH27 0xAE352ECB490DC0117AD90800C835B8B89034BB834742883FDC6044 ISZERO PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "57:948:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:948:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;823:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;415:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;942:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;163:121:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;196:42:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;307:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;91:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:50;572:2;132:6;565:9;524:50;:::o;823:54::-;871:6;132;864:13;;;;;;823:54;:::o;415:45::-;132:6;415:45;:::o;247:53::-;295:5;132:6;288:12;;;;;;247:53;:::o;581:54::-;629:6;132;622:13;;;;;;581:54;:::o;644:51::-;692:3;132:6;685:10;644:51;:::o;942:59::-;996:5;991:1;132:6;984:8;;;;;;983:18;942:59;:::o;163:121:0:-;224:7;255:17;248:24;;163:121;:::o;196:42:1:-;237:1;196:42;:::o;147:::-;188:1;147:42;:::o;704:46::-;745:5;704:46;:::o;307:50::-;355:2;132:6;348:9;;;;;;307:50;:::o;757:59::-;811:5;132:6;799:1;:8;798:18;757:59;:::o;91:47::-;132:6;91:47;:::o;364:42::-;405:1;364:42;:::o;467:50::-;515:2;132:6;508:9;467:50;:::o;886:49::-;934:1;132:6;927:8;;;;;;886:49;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225400",
								"executionCost": "269",
								"totalCost": "225669"
							},
							"external": {
								"BONE()": "249",
								"BPOW_PRECISION()": "276",
								"EXIT_FEE()": "271",
								"INIT_POOL_SUPPLY()": "258",
								"MAX_BOUND_TOKENS()": "228",
								"MAX_BPOW_BASE()": "241",
								"MAX_FEE()": "319",
								"MAX_IN_RATIO()": "340",
								"MAX_OUT_RATIO()": "303",
								"MAX_TOTAL_WEIGHT()": "237",
								"MAX_WEIGHT()": "301",
								"MIN_BALANCE()": "253",
								"MIN_BOUND_TOKENS()": "250",
								"MIN_BPOW_BASE()": "272",
								"MIN_FEE()": "320",
								"MIN_WEIGHT()": "273",
								"getColor()": "302"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "MSTORE"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "CODECOPY"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
									".code": [
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "LT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "SHR"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "C36596A6"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "C6580D12"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "E4A28A52"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "EC093021"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B7B800A4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BA019DAB"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC063E1A"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9381CD2B"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "992E2A92"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9A3BBE4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "189D00CA"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "218B5382"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "76C7A3C7"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP3"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SUB"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "RETURN"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SUB"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "RETURN"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP3"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MSTORE"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "RETURN"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "RETURN"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP3"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SUB"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "RETURN"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "MUL"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPI"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "INVALID"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DIV"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"value": "E8D4A51000"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "INVALID"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "INVALID"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DIV"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 188,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "MUL"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "INVALID"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONE()": "c36596a6",
							"BPOW_PRECISION()": "189d00ca",
							"EXIT_FEE()": "c6580d12",
							"INIT_POOL_SUPPLY()": "9381cd2b",
							"MAX_BOUND_TOKENS()": "b0e0d136",
							"MAX_BPOW_BASE()": "bc694ea2",
							"MAX_FEE()": "bc063e1a",
							"MAX_IN_RATIO()": "ec093021",
							"MAX_OUT_RATIO()": "992e2a92",
							"MAX_TOTAL_WEIGHT()": "09a3bbe4",
							"MAX_WEIGHT()": "e4a28a52",
							"MIN_BALANCE()": "867378c5",
							"MIN_BOUND_TOKENS()": "b7b800a4",
							"MIN_BPOW_BASE()": "ba019dab",
							"MIN_FEE()": "76c7a3c7",
							"MIN_WEIGHT()": "218b5382",
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BConst.sol\":\"BConst\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]},\"Contracts/BConst.sol\":{\"keccak256\":\"0xc09e1b6426216e6fc1246376f2796ff3e176036bc7639e584cf365aedebd0083\",\"urls\":[\"bzz-raw://d813f692c759a83e62614caf0bde6ce976dd1614af0197739ff4183621284b32\",\"dweb:/ipfs/QmdMoeU8gQ1RYk5XDhbpatzFKbqUHNSkCt5KyhBQVWHhcv\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Contracts/BNum.sol": {
				"BNum": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BONE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BPOW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EXIT_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_POOL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_IN_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_OUT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_TOTAL_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BNum.sol\":709:4469  contract BNum is BConst {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BNum.sol\":709:4469  contract BNum is BConst {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BNum.sol\":709:4469  contract BNum is BConst {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BNum.sol\":709:4469  contract BNum is BConst {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0e0d136\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbc694ea2\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbc694ea2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc36596a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6580d12\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4a28a52\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec093021\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xb0e0d136\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb7b800a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xba019dab\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x867378c5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x867378c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9381cd2b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x992e2a92\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a86139b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x09a3bbe4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x189d00ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x218b5382\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x76c7a3c7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_11:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_12:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_13:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_14:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_15:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_16:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_17:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_18:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_19:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_24:\n        /* \"Contracts/BConst.sol\":572:574  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":565:574  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_26:\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      div\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_28:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_30:\n        /* \"Contracts/BConst.sol\":295:300  10**6 */\n      0x0f4240\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":288:300  BONE / 10**6 */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_32:\n        /* \"Contracts/BConst.sol\":629:635  10**12 */\n      0xe8d4a51000\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":622:635  BONE / 10**12 */\n      dup2\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      div\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_34:\n        /* \"Contracts/BConst.sol\":692:695  100 */\n      0x64\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":685:695  BONE * 100 */\n      mul\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_36:\n        /* \"Contracts/BConst.sol\":996:1001  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":991:992  3 */\n      0x03\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":984:992  BONE / 3 */\n      dup2\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      div\n        /* \"Contracts/BConst.sol\":983:1001  (BONE / 3) + 1 wei */\n      add\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_38:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_40:\n        /* \"Contracts/BConst.sol\":237:238  8 */\n      0x08\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_42:\n        /* \"Contracts/BConst.sol\":188:189  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_44:\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_46:\n        /* \"Contracts/BConst.sol\":355:357  10 */\n      0x0a\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":348:357  BONE / 10 */\n      dup2\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_48:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_50:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_52:\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_54:\n        /* \"Contracts/BConst.sol\":515:517  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":508:517  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_56:\n        /* \"Contracts/BConst.sol\":934:935  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":927:935  BONE / 2 */\n      dup2\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      div\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820a0817ced012e77d38179c88b109fba5c3e36489e61f757b5d1a2c1f9a14924cf64736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610467806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820a0817ced012e77d38179c88b109fba5c3e36489e61f757b5d1a2c1f9a14924cf64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG0 DUP2 PUSH29 0xED012E77D38179C88B109FBA5C3E36489E61F757B5D1A2C1F9A14924CF PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "709:3760:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;709:3760:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820a0817ced012e77d38179c88b109fba5c3e36489e61f757b5d1a2c1f9a14924cf64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG0 DUP2 PUSH29 0xED012E77D38179C88B109FBA5C3E36489E61F757B5D1A2C1F9A14924CF PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "709:3760:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;709:3760:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:50:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;823:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;415:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;942:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;163:121:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;196:42:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;307:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;91:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:50;572:2;132:6;565:9;524:50;:::o;823:54::-;871:6;132;864:13;;;;;;823:54;:::o;415:45::-;132:6;415:45;:::o;247:53::-;295:5;132:6;288:12;;;;;;247:53;:::o;581:54::-;629:6;132;622:13;;;;;;581:54;:::o;644:51::-;692:3;132:6;685:10;644:51;:::o;942:59::-;996:5;991:1;132:6;984:8;;;;;;983:18;942:59;:::o;163:121:0:-;224:7;255:17;248:24;;163:121;:::o;196:42:1:-;237:1;196:42;:::o;147:::-;188:1;147:42;:::o;704:46::-;745:5;704:46;:::o;307:50::-;355:2;132:6;348:9;;;;;;307:50;:::o;757:59::-;811:5;132:6;799:1;:8;798:18;757:59;:::o;91:47::-;132:6;91:47;:::o;364:42::-;405:1;364:42;:::o;467:50::-;515:2;132:6;508:9;467:50;:::o;886:49::-;934:1;132:6;927:8;;;;;;886:49;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225400",
								"executionCost": "269",
								"totalCost": "225669"
							},
							"external": {
								"BONE()": "249",
								"BPOW_PRECISION()": "276",
								"EXIT_FEE()": "271",
								"INIT_POOL_SUPPLY()": "258",
								"MAX_BOUND_TOKENS()": "228",
								"MAX_BPOW_BASE()": "241",
								"MAX_FEE()": "319",
								"MAX_IN_RATIO()": "340",
								"MAX_OUT_RATIO()": "303",
								"MAX_TOTAL_WEIGHT()": "237",
								"MAX_WEIGHT()": "301",
								"MIN_BALANCE()": "253",
								"MIN_BOUND_TOKENS()": "250",
								"MIN_BPOW_BASE()": "272",
								"MIN_FEE()": "320",
								"MIN_WEIGHT()": "273",
								"getColor()": "302"
							},
							"internal": {
								"badd(uint256,uint256)": "infinite",
								"bdiv(uint256,uint256)": "infinite",
								"bfloor(uint256)": "infinite",
								"bmul(uint256,uint256)": "infinite",
								"bpow(uint256,uint256)": "infinite",
								"bpowApprox(uint256,uint256,uint256)": "infinite",
								"bpowi(uint256,uint256)": "infinite",
								"bsub(uint256,uint256)": "infinite",
								"bsubSign(uint256,uint256)": "infinite",
								"btoi(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "MSTORE"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "POP"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "DUP1"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "CODECOPY"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 4469,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a0817ced012e77d38179c88b109fba5c3e36489e61f757b5d1a2c1f9a14924cf64736f6c634300050c0032",
									".code": [
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "MSTORE"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "POP"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "LT"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "SHR"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "GT"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "GT"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "C36596A6"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "C6580D12"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "E4A28A52"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "EC093021"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMP"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPDEST"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "B7B800A4"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "BA019DAB"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "BC063E1A"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMP"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPDEST"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "GT"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "9381CD2B"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "992E2A92"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMP"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPDEST"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "9A3BBE4"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "189D00CA"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "218B5382"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "76C7A3C7"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "EQ"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPI"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "JUMPDEST"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "DUP1"
										},
										{
											"begin": 709,
											"end": 4469,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP3"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SUB"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "RETURN"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SUB"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "RETURN"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP3"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MSTORE"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "RETURN"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "RETURN"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP3"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SUB"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "RETURN"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "MUL"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPI"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "INVALID"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DIV"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"value": "E8D4A51000"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "INVALID"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "INVALID"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DIV"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 188,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "MUL"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "INVALID"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONE()": "c36596a6",
							"BPOW_PRECISION()": "189d00ca",
							"EXIT_FEE()": "c6580d12",
							"INIT_POOL_SUPPLY()": "9381cd2b",
							"MAX_BOUND_TOKENS()": "b0e0d136",
							"MAX_BPOW_BASE()": "bc694ea2",
							"MAX_FEE()": "bc063e1a",
							"MAX_IN_RATIO()": "ec093021",
							"MAX_OUT_RATIO()": "992e2a92",
							"MAX_TOTAL_WEIGHT()": "09a3bbe4",
							"MAX_WEIGHT()": "e4a28a52",
							"MIN_BALANCE()": "867378c5",
							"MIN_BOUND_TOKENS()": "b7b800a4",
							"MIN_BPOW_BASE()": "ba019dab",
							"MIN_FEE()": "76c7a3c7",
							"MIN_WEIGHT()": "218b5382",
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BNum.sol\":\"BNum\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]},\"Contracts/BConst.sol\":{\"keccak256\":\"0xc09e1b6426216e6fc1246376f2796ff3e176036bc7639e584cf365aedebd0083\",\"urls\":[\"bzz-raw://d813f692c759a83e62614caf0bde6ce976dd1614af0197739ff4183621284b32\",\"dweb:/ipfs/QmdMoeU8gQ1RYk5XDhbpatzFKbqUHNSkCt5KyhBQVWHhcv\"]},\"Contracts/BNum.sol\":{\"keccak256\":\"0x6eb672c585a84af7634d623d45faf02bcd46568ce344dd212247ce4282cdc489\",\"urls\":[\"bzz-raw://52fe12a2de6160164fd060564eb666582ad43f91fc7d49438bfc527a004fdd32\",\"dweb:/ipfs/QmVzmRQDmDkBBa6kjjYv6bYaC8pUb4RtDSZcZY6g3NFTTv\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Contracts/BColor.sol": {
				"ast": {
					"absolutePath": "Contracts/BColor.sol",
					"exportedSymbols": {
						"BBronze": [
							20
						],
						"BColor": [
							7
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "BColor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getColor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "113:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:9:0"
									},
									"scope": 7,
									"src": "52:70:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "29:96:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "BColor",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 7,
										"src": "149:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BColor_$7",
											"typeString": "contract BColor"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "149:6:0"
								}
							],
							"contractDependencies": [
								7
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20,
								7
							],
							"name": "BBronze",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "233:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "42524f4e5a45",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "263:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
																"typeString": "literal_string \"BRONZE\""
															},
															"value": "BRONZE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
																"typeString": "literal_string \"BRONZE\""
															}
														],
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "255:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "255:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 13,
												"id": 17,
												"nodeType": "Return",
												"src": "248:24:0"
											}
										]
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getColor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:9:0"
									},
									"scope": 20,
									"src": "163:121:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "129:158:0"
						}
					],
					"src": "2:287:0"
				},
				"id": 0
			},
			"Contracts/BConst.sol": {
				"ast": {
					"absolutePath": "Contracts/BConst.sol",
					"exportedSymbols": {
						"BConst": [
							108
						]
					},
					"id": 109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "4:23:1"
						},
						{
							"absolutePath": "Contracts/BColor.sol",
							"file": "./BColor.sol",
							"id": 23,
							"nodeType": "ImportDirective",
							"scope": 109,
							"sourceUnit": 21,
							"src": "31:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 24,
										"name": "BBronze",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 20,
										"src": "76:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BBronze_$20",
											"typeString": "contract BBronze"
										}
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "76:7:1"
								}
							],
							"contractDependencies": [
								7,
								20
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								20,
								7
							],
							"name": "BConst",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 30,
									"name": "BONE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "91:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "91:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 27,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "132:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "136:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "132:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 33,
									"name": "MIN_BOUND_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "147:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "147:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "188:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 36,
									"name": "MAX_BOUND_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "196:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "196:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "38",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "237:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 43,
									"name": "MIN_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "247:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "247:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 42,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 38,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "288:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 39,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "295:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "36",
												"id": 40,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "299:1:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "295:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "288:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 48,
									"name": "MAX_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "307:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "307:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 45,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "348:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "355:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "348:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 51,
									"name": "EXIT_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "364:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "364:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "405:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 54,
									"name": "MIN_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "415:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "415:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 53,
										"name": "BONE",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 30,
										"src": "456:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 59,
									"name": "MAX_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "467:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "467:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 56,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "508:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "515:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"src": "508:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 64,
									"name": "MAX_TOTAL_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "524:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "524:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 61,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "565:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "572:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"src": "565:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 71,
									"name": "MIN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "581:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "581:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 66,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "622:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											},
											"id": 69,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3132",
												"id": 68,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "633:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12_by_1",
													"typeString": "int_const 12"
												},
												"value": "12"
											},
											"src": "629:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											}
										},
										"src": "622:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 76,
									"name": "INIT_POOL_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "644:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "644:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 73,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "685:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313030",
											"id": 74,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "692:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "685:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 79,
									"name": "MIN_BPOW_BASE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "704:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "704:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "745:5:1",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 87,
									"name": "MAX_BPOW_BASE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "757:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "757:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "799:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "803:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 84,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "798:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "811:5:1",
											"subdenomination": "wei",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "798:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 94,
									"name": "BPOW_PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "823:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "823:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 89,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "864:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"id": 92,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 90,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "871:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 91,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "875:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "871:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											}
										},
										"src": "864:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 99,
									"name": "MAX_IN_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "886:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "886:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 96,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "927:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 97,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "934:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "927:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 107,
									"name": "MAX_OUT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "942:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 100,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "942:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "984:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "984:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 104,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "983:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 105,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "996:5:1",
											"subdenomination": "wei",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "983:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 109,
							"src": "57:948:1"
						}
					],
					"src": "4:1003:1"
				},
				"id": 1
			},
			"Contracts/BNum.sol": {
				"ast": {
					"absolutePath": "Contracts/BNum.sol",
					"exportedSymbols": {
						"BNum": [
							581
						]
					},
					"id": 582,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "656:23:2"
						},
						{
							"absolutePath": "Contracts/BConst.sol",
							"file": "./BConst.sol",
							"id": 111,
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 109,
							"src": "683:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 112,
										"name": "BConst",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 108,
										"src": "726:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BConst_$108",
											"typeString": "contract BConst"
										}
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "726:6:2"
								}
							],
							"contractDependencies": [
								7,
								20,
								108
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581,
								108,
								20,
								7
							],
							"name": "BNum",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "817:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "835:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "839:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "835:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 123,
												"nodeType": "Return",
												"src": "828:15:2"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "btoi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "756:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "756:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "755:8:2"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "806:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:6:2"
									},
									"scope": 581,
									"src": "742:109:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "935:40:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "958:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 132,
															"name": "btoi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "953:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "953:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 135,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "963:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "953:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 137,
												"nodeType": "Return",
												"src": "946:21:2"
											}
										]
									},
									"documentation": null,
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bfloor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "875:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:8:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "924:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "923:6:2"
									},
									"scope": 581,
									"src": "859:116:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1065:98:2",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "1076:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1076:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1085:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1089:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1085:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1076:14:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "1109:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "1114:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1109:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4144445f4f564552464c4f57",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1117:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c",
																"typeString": "literal_string \"ERR_ADD_OVERFLOW\""
															},
															"value": "ERR_ADD_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c",
																"typeString": "literal_string \"ERR_ADD_OVERFLOW\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "1101:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1101:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1101:35:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "1154:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 162,
												"nodeType": "Return",
												"src": "1147:8:2"
											}
										]
									},
									"documentation": null,
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "badd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "997:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1005:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1005:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "996:16:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1054:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1053:6:2"
									},
									"scope": 581,
									"src": "983:180:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1253:120:2",
										"statements": [
											{
												"assignments": [
													174,
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1265:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1265:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 176,
														"name": "flag",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "1273:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 175,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1273:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 178,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "1295:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1298:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "bsubSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1286:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1264:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1319:5:2",
															"subExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "1320:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f5355425f554e444552464c4f57",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1326:19:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687",
																"typeString": "literal_string \"ERR_SUB_UNDERFLOW\""
															},
															"value": "ERR_SUB_UNDERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687",
																"typeString": "literal_string \"ERR_SUB_UNDERFLOW\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "1311:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1311:35:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1364:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 189,
												"nodeType": "Return",
												"src": "1357:8:2"
											}
										]
									},
									"documentation": null,
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bsub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1185:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1193:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1193:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:16:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1242:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1242:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1241:6:2"
									},
									"scope": 581,
									"src": "1171:202:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "1473:131:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 202,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1488:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 203,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1493:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1488:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "1550:47:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 212,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "1573:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 213,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "1577:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1573:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "74727565",
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1580:4:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1572:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"functionReturnParameters": 201,
															"id": 217,
															"nodeType": "Return",
															"src": "1565:20:2"
														}
													]
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "1484:113:2",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "1496:48:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 205,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "1519:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 206,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "1523:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1519:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1526:5:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"id": 209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1518:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"functionReturnParameters": 201,
															"id": 210,
															"nodeType": "Return",
															"src": "1511:21:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bsubSign",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1399:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1399:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1407:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1398:16:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1456:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1462:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1455:12:2"
									},
									"scope": 581,
									"src": "1381:223:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1694:229:2",
										"statements": [
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"name": "c0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "1705:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 230,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1705:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 232,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1715:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1719:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1715:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1705:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 237,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "1739:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1744:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1739:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 240,
																		"name": "c0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "1749:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 241,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "1754:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1749:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1759:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1749:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1739:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4d554c5f4f564552464c4f57",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1762:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															},
															"value": "ERR_MUL_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "1731:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1731:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1731:50:2"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c1",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "1792:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1792:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "c0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1802:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1808:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1815:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1808:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1807:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1802:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1792:25:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 259,
																"name": "c1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1836:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "c0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "1842:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4d554c5f4f564552464c4f57",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1846:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															},
															"value": "ERR_MUL_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1828:37:2"
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"name": "c2",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "1876:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1876:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "c1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "1886:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 268,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1891:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1886:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:19:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"name": "c2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "1913:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 272,
												"nodeType": "Return",
												"src": "1906:9:2"
											}
										]
									},
									"documentation": null,
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1626:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1626:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1634:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1634:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1625:16:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1683:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1683:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:6:2"
									},
									"scope": 581,
									"src": "1612:311:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "2013:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "2032:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2037:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2032:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f5a45524f",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11",
																"typeString": "literal_string \"ERR_DIV_ZERO\""
															},
															"value": "ERR_DIV_ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11",
																"typeString": "literal_string \"ERR_DIV_ZERO\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "2024:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "2024:31:2"
											},
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"name": "c0",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "2066:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 290,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2066:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "2076:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2080:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2076:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2066:18:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 297,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "2103:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2108:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2103:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 300,
																		"name": "c0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "2113:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 301,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2113:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2123:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2113:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2103:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f494e5445524e414c",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2129:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															},
															"value": "ERR_DIV_INTERNAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "2095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2095:53:2"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"name": "c1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "2176:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 309,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2176:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "c0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "2186:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "2192:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2192:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 315,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2191:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2186:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2176:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 319,
																"name": "c1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2217:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 320,
																"name": "c0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "2223:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2217:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f494e5445524e414c",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2227:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															},
															"value": "ERR_DIV_INTERNAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "2209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2209:37:2"
											},
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"name": "c2",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "2274:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 325,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2274:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 327,
														"name": "c1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "2284:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2289:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2284:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2274:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 331,
													"name": "c2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 326,
													"src": "2308:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 332,
												"nodeType": "Return",
												"src": "2301:9:2"
											}
										]
									},
									"documentation": null,
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1945:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1945:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1953:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1944:16:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2002:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2001:6:2"
									},
									"scope": 581,
									"src": "1931:387:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2429:231:2",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"name": "z",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "2440:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2440:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 345,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2449:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2458:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2449:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 351,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2466:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2449:21:2",
													"trueExpression": {
														"argumentTypes": null,
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2462:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2440:30:2"
											},
											{
												"body": {
													"id": 386,
													"nodeType": "Block",
													"src": "2512:122:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 365,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "2527:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 367,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2536:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 368,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2539:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 366,
																		"name": "bmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "2531:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2531:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2527:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 371,
															"nodeType": "ExpressionStatement",
															"src": "2527:14:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 372,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "2562:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2566:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2562:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2571:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2562:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 385,
															"nodeType": "IfStatement",
															"src": "2558:65:2",
															"trueBody": {
																"id": 384,
																"nodeType": "Block",
																"src": "2574:49:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 377,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "2593:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 379,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 344,
																						"src": "2602:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 380,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 336,
																						"src": "2605:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 378,
																					"name": "bmul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 274,
																					"src": "2597:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2597:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2593:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 383,
																		"nodeType": "ExpressionStatement",
																		"src": "2593:14:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 358,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2496:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2496:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 354,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2488:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2493:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2488:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 357,
													"nodeType": "ExpressionStatement",
													"src": "2488:6:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 361,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2504:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2509:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2504:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 364,
													"nodeType": "ExpressionStatement",
													"src": "2504:6:2"
												},
												"nodeType": "ForStatement",
												"src": "2483:151:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"name": "z",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "2651:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 389,
												"nodeType": "Return",
												"src": "2644:8:2"
											}
										]
									},
									"documentation": null,
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpowi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2361:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2361:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2369:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2369:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2360:16:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2418:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2418:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2417:6:2"
									},
									"scope": 581,
									"src": "2346:314:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2908:468:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 401,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2927:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 402,
																"name": "MIN_BPOW_BASE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "2935:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2927:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f42504f575f424153455f544f4f5f4c4f57",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2950:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_LOW\""
															},
															"value": "ERR_BPOW_BASE_TOO_LOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_LOW\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "2919:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2919:55:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2993:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 409,
																"name": "MAX_BPOW_BASE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "3001:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2993:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f42504f575f424153455f544f4f5f48494748",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:24:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_HIGH\""
															},
															"value": "ERR_BPOW_BASE_TOO_HIGH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_HIGH\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															600
														],
														"referencedDeclaration": 600,
														"src": "2985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2985:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "2985:56:2"
											},
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"name": "whole",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3054:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 414,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3054:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 419,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 417,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "3075:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 416,
														"name": "bfloor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3068:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3054:25:2"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"name": "remain",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3093:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3093:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 423,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "3112:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 424,
															"name": "whole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3117:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3107:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3107:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3093:30:2"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"name": "wholePow",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3136:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 427,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3136:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 430,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3158:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 432,
																	"name": "whole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "3169:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 431,
																"name": "btoi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "3164:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3164:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "bpowi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3152:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3136:40:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 436,
														"name": "remain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3193:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3203:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3193:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 442,
												"nodeType": "IfStatement",
												"src": "3189:59:2",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "3206:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "wholePow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "3228:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 399,
															"id": 440,
															"nodeType": "Return",
															"src": "3221:15:2"
														}
													]
												}
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"name": "partialResult",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "3260:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3260:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3292:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "remain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3298:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 448,
															"name": "BPOW_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "3306:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "bpowApprox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3281:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3281:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3260:61:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 452,
															"name": "wholePow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "3344:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "partialResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3354:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3339:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 455,
												"nodeType": "Return",
												"src": "3332:36:2"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"name": "base",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2835:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2835:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"name": "exp",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2846:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2834:21:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2897:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2896:6:2"
									},
									"scope": 581,
									"src": "2821:555:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3493:971:2",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3524:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 468,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"argumentTypes": null,
													"id": 470,
													"name": "exp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "3537:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3524:16:2"
											},
											{
												"assignments": [
													473,
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3552:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3552:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 475,
														"name": "xneg",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3560:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 474,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3560:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 477,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3583:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 478,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "3589:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "bsubSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "3574:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3551:43:2"
											},
											{
												"assignments": [
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"name": "term",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3605:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 481,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3605:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"argumentTypes": null,
													"id": 483,
													"name": "BONE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "3617:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:16:2"
											},
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"name": "sum",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3632:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"argumentTypes": null,
													"id": 487,
													"name": "term",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 482,
													"src": "3645:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3632:17:2"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"name": "negative",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "3660:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 489,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3660:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3676:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3660:21:2"
											},
											{
												"body": {
													"id": 575,
													"nodeType": "Block",
													"src": "3966:468:2",
													"statements": [
														{
															"assignments": [
																504
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 504,
																	"name": "bigK",
																	"nodeType": "VariableDeclaration",
																	"scope": 575,
																	"src": "3981:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 503,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3981:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 508,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 505,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "3993:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 506,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "3997:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3993:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3981:20:2"
														},
														{
															"assignments": [
																510,
																512
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 510,
																	"name": "c",
																	"nodeType": "VariableDeclaration",
																	"scope": 575,
																	"src": "4017:6:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 509,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4017:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 512,
																	"name": "cneg",
																	"nodeType": "VariableDeclaration",
																	"scope": 575,
																	"src": "4025:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 511,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4025:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 520,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 514,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "4047:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 516,
																				"name": "bigK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "4055:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 517,
																				"name": "BONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "4061:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 515,
																			"name": "bsub",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "4050:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4050:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 513,
																	"name": "bsubSign",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "4038:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4038:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4016:51:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "4082:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 523,
																			"name": "term",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "4094:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 525,
																					"name": "c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "4105:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 526,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 473,
																					"src": "4108:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 524,
																				"name": "bmul",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "4100:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4100:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 522,
																		"name": "bmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "4089:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4089:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4082:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"nodeType": "ExpressionStatement",
															"src": "4082:29:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 531,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "4126:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 533,
																			"name": "term",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "4138:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 534,
																			"name": "bigK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "4144:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 532,
																		"name": "bdiv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "4133:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4133:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4126:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 537,
															"nodeType": "ExpressionStatement",
															"src": "4126:23:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 538,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "4168:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4176:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4168:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 542,
															"nodeType": "IfStatement",
															"src": "4164:20:2",
															"trueBody": {
																"id": 541,
																"nodeType": "Break",
																"src": "4179:5:2"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 543,
																"name": "xneg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "4205:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 549,
															"nodeType": "IfStatement",
															"src": "4201:30:2",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 544,
																		"name": "negative",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "4211:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4222:9:2",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 545,
																			"name": "negative",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "4223:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4211:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 548,
																"nodeType": "ExpressionStatement",
																"src": "4211:20:2"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 550,
																"name": "cneg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "4250:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 556,
															"nodeType": "IfStatement",
															"src": "4246:30:2",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 551,
																		"name": "negative",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "4256:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4267:9:2",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 552,
																			"name": "negative",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "4268:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4256:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 555,
																"nodeType": "ExpressionStatement",
																"src": "4256:20:2"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 557,
																"name": "negative",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "4295:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 573,
																"nodeType": "Block",
																"src": "4367:56:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 566,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 486,
																				"src": "4386:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 568,
																						"name": "sum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 486,
																						"src": "4397:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 569,
																						"name": "term",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 482,
																						"src": "4402:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 567,
																					"name": "badd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "4392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4392:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4386:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 572,
																		"nodeType": "ExpressionStatement",
																		"src": "4386:21:2"
																	}
																]
															},
															"id": 574,
															"nodeType": "IfStatement",
															"src": "4291:132:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "4305:56:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 558,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 486,
																				"src": "4324:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 560,
																						"name": "sum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 486,
																						"src": "4335:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 561,
																						"name": "term",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 482,
																						"src": "4340:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 559,
																					"name": "bsub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "4330:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4330:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4324:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 564,
																		"nodeType": "ExpressionStatement",
																		"src": "4324:21:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 497,
														"name": "term",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3942:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 498,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3950:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3942:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"initializationExpression": {
													"assignments": [
														494
													],
													"declarations": [
														{
															"constant": false,
															"id": 494,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 576,
															"src": "3930:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 493,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3930:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 496,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3939:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3930:10:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3961:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3961:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 502,
													"nodeType": "ExpressionStatement",
													"src": "3961:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3925:509:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 577,
													"name": "sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "4453:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 467,
												"id": 578,
												"nodeType": "Return",
												"src": "4446:10:2"
											}
										]
									},
									"documentation": null,
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpowApprox",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "base",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3404:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3404:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"name": "exp",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3415:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3415:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"name": "precision",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3425:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3425:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3403:37:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3481:6:2"
									},
									"scope": 581,
									"src": "3384:1080:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 582,
							"src": "709:3760:2"
						}
					],
					"src": "656:3815:2"
				},
				"id": 2
			}
		}
	}
}