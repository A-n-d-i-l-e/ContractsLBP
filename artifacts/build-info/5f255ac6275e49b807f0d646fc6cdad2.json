{
	"id": "5f255ac6275e49b807f0d646fc6cdad2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.12",
	"solcLongVersion": "0.5.12+commit.7709ece9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/BMath.sol": {
				"content": "\r\n\r\npragma solidity 0.5.12;\r\n\r\nimport \"./BNum.sol\";\r\n\r\ncontract BMath is BBronze, BConst, BNum {\r\n    /**********************************************************************************************\r\n    // calcSpotPrice                                                                             //\r\n    // sP = spotPrice                                                                            //\r\n    // bI = tokenBalanceIn                ( bI / wI )         1                                  //\r\n    // bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\r\n    // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\r\n    // wO = tokenWeightOut                                                                       //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcSpotPrice(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint spotPrice)\r\n    {\r\n        uint numer = bdiv(tokenBalanceIn, tokenWeightIn);\r\n        uint denom = bdiv(tokenBalanceOut, tokenWeightOut);\r\n        uint ratio = bdiv(numer, denom);\r\n        uint scale = bdiv(BONE, bsub(BONE, swapFee));\r\n        return  (spotPrice = bmul(ratio, scale));\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcOutGivenIn                                                                            //\r\n    // aO = tokenAmountOut                                                                       //\r\n    // bO = tokenBalanceOut                                                                      //\r\n    // bI = tokenBalanceIn              /      /            bI             \\    (wI / wO) \\      //\r\n    // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\r\n    // wI = tokenWeightIn               \\      \\ ( bI + ( aI * ( 1 - sF )) /              /      //\r\n    // wO = tokenWeightOut                                                                       //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcOutGivenIn(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint tokenAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountOut)\r\n    {\r\n        uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\r\n        uint adjustedIn = bsub(BONE, swapFee);\r\n        adjustedIn = bmul(tokenAmountIn, adjustedIn);\r\n        uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn));\r\n        uint foo = bpow(y, weightRatio);\r\n        uint bar = bsub(BONE, foo);\r\n        tokenAmountOut = bmul(tokenBalanceOut, bar);\r\n        return tokenAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcInGivenOut                                                                            //\r\n    // aI = tokenAmountIn                                                                        //\r\n    // bO = tokenBalanceOut               /  /     bO      \\    (wO / wI)      \\                 //\r\n    // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\r\n    // aO = tokenAmountOut    aI =        \\  \\ ( bO - aO ) /                   /                 //\r\n    // wI = tokenWeightIn           --------------------------------------------                 //\r\n    // wO = tokenWeightOut                          ( 1 - sF )                                   //\r\n    // sF = swapFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcInGivenOut(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint tokenAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountIn)\r\n    {\r\n        uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\r\n        uint diff = bsub(tokenBalanceOut, tokenAmountOut);\r\n        uint y = bdiv(tokenBalanceOut, diff);\r\n        uint foo = bpow(y, weightRatio);\r\n        foo = bsub(foo, BONE);\r\n        tokenAmountIn = bsub(BONE, swapFee);\r\n        tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\r\n        return tokenAmountIn;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcPoolOutGivenSingleIn                                                                  //\r\n    // pAo = poolAmountOut         /                                              \\              //\r\n    // tAi = tokenAmountIn        ///      /     //    wI \\      \\\\       \\     wI \\             //\r\n    // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\    --  \\            //\r\n    // tW = totalWeight     pAo=||  \\      \\     \\\\    tW /      //         | ^ tW   | * pS - pS //\r\n    // tBi = tokenBalanceIn      \\\\  ------------------------------------- /        /            //\r\n    // pS = poolSupply            \\\\                    tBi               /        /             //\r\n    // sF = swapFee                \\                                              /              //\r\n    **********************************************************************************************/\r\n    function calcPoolOutGivenSingleIn(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint tokenAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint poolAmountOut)\r\n    {\r\n        // Charge the trading fee for the proportion of tokenAi\r\n        ///  which is implicitly traded to the other pool tokens.\r\n        // That proportion is (1- weightTokenIn)\r\n        // tokenAiAfterFee = tAi * (1 - (1-weightTi) * poolFee);\r\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \r\n        uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz));\r\n\r\n        uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee);\r\n        uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\r\n\r\n        // uint newPoolSupply = (ratioTi ^ weightTi) * poolSupply;\r\n        uint poolRatio = bpow(tokenInRatio, normalizedWeight);\r\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\r\n        poolAmountOut = bsub(newPoolSupply, poolSupply);\r\n        return poolAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcSingleInGivenPoolOut                                                                  //\r\n    // tAi = tokenAmountIn              //(pS + pAo)\\     /    1    \\\\                           //\r\n    // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\r\n    // pAo = poolAmountOut              \\\\    pS    /     \\(wI / tW)//                           //\r\n    // bI = balanceIn          tAi =  --------------------------------------------               //\r\n    // wI = weightIn                              /      wI  \\                                   //\r\n    // tW = totalWeight                          |  1 - ----  |  * sF                            //\r\n    // sF = swapFee                               \\      tW  /                                   //\r\n    **********************************************************************************************/\r\n    function calcSingleInGivenPoolOut(\r\n        uint tokenBalanceIn,\r\n        uint tokenWeightIn,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint poolAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountIn)\r\n    {\r\n        uint normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n        uint newPoolSupply = badd(poolSupply, poolAmountOut);\r\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\r\n      \r\n        //uint newBalTi = poolRatio^(1/weightTi) * balTi;\r\n        uint boo = bdiv(BONE, normalizedWeight); \r\n        uint tokenInRatio = bpow(poolRatio, boo);\r\n        uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\r\n        uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn);\r\n        // Do reverse order of fees charged in joinswap_ExternAmountIn, this way \r\n        //     ``` pAo == joinswap_ExternAmountIn(Ti, joinswap_PoolAmountOut(pAo, Ti)) ```\r\n        //uint tAi = tAiAfterFee / (1 - (1-weightTi) * swapFee) ;\r\n        uint zar = bmul(bsub(BONE, normalizedWeight), swapFee);\r\n        tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar));\r\n        return tokenAmountIn;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcSingleOutGivenPoolIn                                                                  //\r\n    // tAo = tokenAmountOut            /      /                                             \\\\   //\r\n    // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\     /    1    \\      \\\\  //\r\n    // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\r\n    // ps = poolSupply                \\      \\\\          pS           /     \\(wO / tW)/      //  //\r\n    // wI = tokenWeightIn      tAo =   \\      \\                                             //   //\r\n    // tW = totalWeight                    /     /      wO \\       \\                             //\r\n    // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\r\n    // eF = exitFee                        \\     \\      tW /       /                             //\r\n    **********************************************************************************************/\r\n    function calcSingleOutGivenPoolIn(\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint poolAmountIn,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint tokenAmountOut)\r\n    {\r\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n        // charge exit fee on the pool token side\r\n        // pAiAfterExitFee = pAi*(1-exitFee)\r\n        uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE));\r\n        uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee);\r\n        uint poolRatio = bdiv(newPoolSupply, poolSupply);\r\n     \r\n        // newBalTo = poolRatio^(1/weightTo) * balTo;\r\n        uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\r\n        uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\r\n\r\n        uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut);\r\n\r\n        // charge swap fee on the output token side \r\n        //uint tAo = tAoBeforeSwapFee * (1 - (1-weightTo) * swapFee)\r\n        uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee); \r\n        tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz));\r\n        return tokenAmountOut;\r\n    }\r\n\r\n    /**********************************************************************************************\r\n    // calcPoolInGivenSingleOut                                                                  //\r\n    // pAi = poolAmountIn               // /               tAo             \\\\     / wO \\     \\   //\r\n    // bO = tokenBalanceOut            // | bO - -------------------------- |\\   | ---- |     \\  //\r\n    // tAo = tokenAmountOut      pS - ||   \\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\ tW /  * pS | //\r\n    // ps = poolSupply                 \\\\ -----------------------------------/                /  //\r\n    // wO = tokenWeightOut  pAi =       \\\\               bO                 /                /   //\r\n    // tW = totalWeight           -------------------------------------------------------------  //\r\n    // sF = swapFee                                        ( 1 - eF )                            //\r\n    // eF = exitFee                                                                              //\r\n    **********************************************************************************************/\r\n    function calcPoolInGivenSingleOut(\r\n        uint tokenBalanceOut,\r\n        uint tokenWeightOut,\r\n        uint poolSupply,\r\n        uint totalWeight,\r\n        uint tokenAmountOut,\r\n        uint swapFee\r\n    )\r\n        public pure\r\n        returns (uint poolAmountIn)\r\n    {\r\n\r\n        // charge swap fee on the output token side \r\n        uint normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n        //uint tAoBeforeSwapFee = tAo / (1 - (1-weightTo) * swapFee) ;\r\n        uint zoo = bsub(BONE, normalizedWeight);\r\n        uint zar = bmul(zoo, swapFee); \r\n        uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar));\r\n\r\n        uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee);\r\n        uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\r\n\r\n        //uint newPoolSupply = (ratioTo ^ weightTo) * poolSupply;\r\n        uint poolRatio = bpow(tokenOutRatio, normalizedWeight);\r\n        uint newPoolSupply = bmul(poolRatio, poolSupply);\r\n        uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply);\r\n\r\n        // charge exit fee on the pool token side\r\n        // pAi = pAiAfterExitFee/(1-exitFee)\r\n        poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE));\r\n        return poolAmountIn;\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"Contracts/BNum.sol": {
				"content": "\r\npragma solidity 0.5.12;\r\n\r\nimport \"./BConst.sol\";\r\n\r\ncontract BNum is BConst {\r\n\r\n    function btoi(uint a)\r\n        internal pure \r\n        returns (uint)\r\n    {\r\n        return a / BONE;\r\n    }\r\n\r\n    function bfloor(uint a)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        return btoi(a) * BONE;\r\n    }\r\n\r\n    function badd(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c = a + b;\r\n        require(c >= a, \"ERR_ADD_OVERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsub(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        (uint c, bool flag) = bsubSign(a, b);\r\n        require(!flag, \"ERR_SUB_UNDERFLOW\");\r\n        return c;\r\n    }\r\n\r\n    function bsubSign(uint a, uint b)\r\n        internal pure\r\n        returns (uint, bool)\r\n    {\r\n        if (a >= b) {\r\n            return (a - b, false);\r\n        } else {\r\n            return (b - a, true);\r\n        }\r\n    }\r\n\r\n    function bmul(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint c0 = a * b;\r\n        require(a == 0 || c0 / a == b, \"ERR_MUL_OVERFLOW\");\r\n        uint c1 = c0 + (BONE / 2);\r\n        require(c1 >= c0, \"ERR_MUL_OVERFLOW\");\r\n        uint c2 = c1 / BONE;\r\n        return c2;\r\n    }\r\n\r\n    function bdiv(uint a, uint b)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(b != 0, \"ERR_DIV_ZERO\");\r\n        uint c0 = a * BONE;\r\n        require(a == 0 || c0 / a == BONE, \"ERR_DIV_INTERNAL\"); // bmul overflow\r\n        uint c1 = c0 + (b / 2);\r\n        require(c1 >= c0, \"ERR_DIV_INTERNAL\"); //  badd require\r\n        uint c2 = c1 / b;\r\n        return c2;\r\n    }\r\n\r\n    // DSMath.wpow\r\n    function bpowi(uint a, uint n)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        uint z = n % 2 != 0 ? a : BONE;\r\n\r\n        for (n /= 2; n != 0; n /= 2) {\r\n            a = bmul(a, a);\r\n\r\n            if (n % 2 != 0) {\r\n                z = bmul(z, a);\r\n            }\r\n        }\r\n        return z;\r\n    }\r\n\r\n    // Compute b^(e.w) by splitting it into (b^e)*(b^0.w).\r\n    // Use `bpowi` for `b^e` and `bpowK` for k iterations\r\n    // of approximation of b^0.w\r\n    function bpow(uint base, uint exp)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        require(base >= MIN_BPOW_BASE, \"ERR_BPOW_BASE_TOO_LOW\");\r\n        require(base <= MAX_BPOW_BASE, \"ERR_BPOW_BASE_TOO_HIGH\");\r\n\r\n        uint whole  = bfloor(exp);   \r\n        uint remain = bsub(exp, whole);\r\n\r\n        uint wholePow = bpowi(base, btoi(whole));\r\n\r\n        if (remain == 0) {\r\n            return wholePow;\r\n        }\r\n\r\n        uint partialResult = bpowApprox(base, remain, BPOW_PRECISION);\r\n        return bmul(wholePow, partialResult);\r\n    }\r\n\r\n    function bpowApprox(uint base, uint exp, uint precision)\r\n        internal pure\r\n        returns (uint)\r\n    {\r\n        // term 0:\r\n        uint a     = exp;\r\n        (uint x, bool xneg)  = bsubSign(base, BONE);\r\n        uint term = BONE;\r\n        uint sum   = term;\r\n        bool negative = false;\r\n\r\n\r\n        // term(k) = numer / denom \r\n        //         = (product(a - i - 1, i=1-->k) * x^k) / (k!)\r\n        // each iteration, multiply previous term by (a-(k-1)) * x / k\r\n        // continue until term is less than precision\r\n        for (uint i = 1; term >= precision; i++) {\r\n            uint bigK = i * BONE;\r\n            (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE));\r\n            term = bmul(term, bmul(c, x));\r\n            term = bdiv(term, bigK);\r\n            if (term == 0) break;\r\n\r\n            if (xneg) negative = !negative;\r\n            if (cneg) negative = !negative;\r\n            if (negative) {\r\n                sum = bsub(sum, term);\r\n            } else {\r\n                sum = badd(sum, term);\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n}\r\n"
			},
			"Contracts/BConst.sol": {
				"content": "\r\n\r\npragma solidity 0.5.12;\r\n\r\nimport \"./BColor.sol\";\r\n\r\ncontract BConst is BBronze {\r\n    uint public constant BONE              = 10**18;\r\n\r\n    uint public constant MIN_BOUND_TOKENS  = 2;\r\n    uint public constant MAX_BOUND_TOKENS  = 8;\r\n\r\n    uint public constant MIN_FEE           = BONE / 10**6;\r\n    uint public constant MAX_FEE           = BONE / 10;\r\n    uint public constant EXIT_FEE          = 0;\r\n\r\n    uint public constant MIN_WEIGHT        = BONE;\r\n    uint public constant MAX_WEIGHT        = BONE * 50;\r\n    uint public constant MAX_TOTAL_WEIGHT  = BONE * 50;\r\n    uint public constant MIN_BALANCE       = BONE / 10**12;\r\n\r\n    uint public constant INIT_POOL_SUPPLY  = BONE * 100;\r\n\r\n    uint public constant MIN_BPOW_BASE     = 1 wei;\r\n    uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei;\r\n    uint public constant BPOW_PRECISION    = BONE / 10**10;\r\n\r\n    uint public constant MAX_IN_RATIO      = BONE / 2;\r\n    uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei;\r\n}\r\n"
			},
			"Contracts/BColor.sol": {
				"content": "\r\npragma solidity 0.5.12;\r\n\r\ncontract BColor {\r\n    function getColor()\r\n        external view\r\n        returns (bytes32);\r\n}\r\n\r\ncontract BBronze is BColor {\r\n    function getColor()\r\n        external view\r\n        returns (bytes32) {\r\n            return bytes32(\"BRONZE\");\r\n        }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/BColor.sol": {
				"BBronze": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BColor.sol\":129:287  contract BBronze is BColor {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a86139b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060a68061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b60007f42524f4e5a45000000000000000000000000000000000000000000000000000090509056fea265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA6 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A86139B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xd1 BALANCE EXTCODESIZE 0xf9 LOG2 0xdc 0xc2 0xad ADDRESS 0xd2 0x1f 0xe1 0xe9 CALL SHR 0xb4 CALL LOG4 0xc7 DUP4 ADDRESS DUP8 SWAP14 SWAP15 0xc0 PUSH7 0x99197BB2CF0564 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "129:158:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:158:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80639a86139b14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b60007f42524f4e5a45000000000000000000000000000000000000000000000000000090509056fea265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A86139B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xd1 BALANCE EXTCODESIZE 0xf9 LOG2 0xdc 0xc2 0xad ADDRESS 0xd2 0x1f 0xe1 0xe9 CALL SHR 0xb4 CALL LOG4 0xc7 DUP4 ADDRESS DUP8 SWAP14 SWAP15 0xc0 PUSH7 0x99197BB2CF0564 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "129:158:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:158:0;;;;;;;;;;;;;;;;;;;163:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;224:7;255:17;248:24;;163:121;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33200",
								"executionCost": "87",
								"totalCost": "33287"
							},
							"external": {
								"getColor()": "191"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "MSTORE"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "CODECOPY"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 287,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d1313bf9a2dcc2ad30d21fe1e9f11cb4f1a4c78330879d9ec06699197bb2cf0564736f6c634300050c0032",
									".code": [
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "POP"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "LT"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "SHR"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 287,
											"name": "REVERT"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BColor.sol\":\"BBronze\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"BColor": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BColor.sol\":\"BColor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Contracts/BConst.sol": {
				"BConst": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BONE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BPOW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EXIT_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_POOL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_IN_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_OUT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_TOTAL_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BConst.sol\":57:1005  contract BConst is BBronze {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0e0d136\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbc694ea2\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbc694ea2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc36596a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6580d12\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4a28a52\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec093021\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xb0e0d136\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb7b800a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xba019dab\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x867378c5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x867378c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9381cd2b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x992e2a92\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a86139b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x09a3bbe4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x189d00ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x218b5382\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x76c7a3c7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_11:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_12:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_13:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_14:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_15:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_16:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_17:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_18:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_19:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_24:\n        /* \"Contracts/BConst.sol\":572:574  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":565:574  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_26:\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      div\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_28:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_30:\n        /* \"Contracts/BConst.sol\":295:300  10**6 */\n      0x0f4240\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":288:300  BONE / 10**6 */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_32:\n        /* \"Contracts/BConst.sol\":629:635  10**12 */\n      0xe8d4a51000\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":622:635  BONE / 10**12 */\n      dup2\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      div\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_34:\n        /* \"Contracts/BConst.sol\":692:695  100 */\n      0x64\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":685:695  BONE * 100 */\n      mul\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_36:\n        /* \"Contracts/BConst.sol\":996:1001  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":991:992  3 */\n      0x03\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":984:992  BONE / 3 */\n      dup2\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      div\n        /* \"Contracts/BConst.sol\":983:1001  (BONE / 3) + 1 wei */\n      add\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_38:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_40:\n        /* \"Contracts/BConst.sol\":237:238  8 */\n      0x08\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_42:\n        /* \"Contracts/BConst.sol\":188:189  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_44:\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_46:\n        /* \"Contracts/BConst.sol\":355:357  10 */\n      0x0a\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":348:357  BONE / 10 */\n      dup2\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_48:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_50:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_52:\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_54:\n        /* \"Contracts/BConst.sol\":515:517  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":508:517  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_56:\n        /* \"Contracts/BConst.sol\":934:935  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":927:935  BONE / 2 */\n      dup2\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      div\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610467806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 0x4b DUP11 PUSH27 0xAE352ECB490DC0117AD90800C835B8B89034BB834742883FDC6044 ISZERO PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "57:948:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:948:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x29 0x4b DUP11 PUSH27 0xAE352ECB490DC0117AD90800C835B8B89034BB834742883FDC6044 ISZERO PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "57:948:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:948:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;823:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;415:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;942:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;163:121:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;196:42:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;307:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;91:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:50;572:2;132:6;565:9;524:50;:::o;823:54::-;871:6;132;864:13;;;;;;823:54;:::o;415:45::-;132:6;415:45;:::o;247:53::-;295:5;132:6;288:12;;;;;;247:53;:::o;581:54::-;629:6;132;622:13;;;;;;581:54;:::o;644:51::-;692:3;132:6;685:10;644:51;:::o;942:59::-;996:5;991:1;132:6;984:8;;;;;;983:18;942:59;:::o;163:121:0:-;224:7;255:17;248:24;;163:121;:::o;196:42:1:-;237:1;196:42;:::o;147:::-;188:1;147:42;:::o;704:46::-;745:5;704:46;:::o;307:50::-;355:2;132:6;348:9;;;;;;307:50;:::o;757:59::-;811:5;132:6;799:1;:8;798:18;757:59;:::o;91:47::-;132:6;91:47;:::o;364:42::-;405:1;364:42;:::o;467:50::-;515:2;132:6;508:9;467:50;:::o;886:49::-;934:1;132:6;927:8;;;;;;886:49;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225400",
								"executionCost": "269",
								"totalCost": "225669"
							},
							"external": {
								"BONE()": "249",
								"BPOW_PRECISION()": "276",
								"EXIT_FEE()": "271",
								"INIT_POOL_SUPPLY()": "258",
								"MAX_BOUND_TOKENS()": "228",
								"MAX_BPOW_BASE()": "241",
								"MAX_FEE()": "319",
								"MAX_IN_RATIO()": "340",
								"MAX_OUT_RATIO()": "303",
								"MAX_TOTAL_WEIGHT()": "237",
								"MAX_WEIGHT()": "301",
								"MIN_BALANCE()": "253",
								"MIN_BOUND_TOKENS()": "250",
								"MIN_BPOW_BASE()": "272",
								"MIN_FEE()": "320",
								"MIN_WEIGHT()": "273",
								"getColor()": "302"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "MSTORE"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "CODECOPY"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1005,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820294b8a7aae352ecb490dc0117ad90800c835b8b89034bb834742883fdc60441564736f6c634300050c0032",
									".code": [
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "LT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "SHR"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "C36596A6"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "C6580D12"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "E4A28A52"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "EC093021"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "B7B800A4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BA019DAB"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "BC063E1A"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "GT"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9381CD2B"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "992E2A92"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMP"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "9A3BBE4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "189D00CA"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "218B5382"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "76C7A3C7"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1005,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP3"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SUB"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "RETURN"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SUB"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "RETURN"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP3"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MSTORE"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "RETURN"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "RETURN"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP3"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SUB"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "RETURN"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "MUL"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPI"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "INVALID"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DIV"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"value": "E8D4A51000"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "INVALID"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "INVALID"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DIV"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 188,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "MUL"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "INVALID"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONE()": "c36596a6",
							"BPOW_PRECISION()": "189d00ca",
							"EXIT_FEE()": "c6580d12",
							"INIT_POOL_SUPPLY()": "9381cd2b",
							"MAX_BOUND_TOKENS()": "b0e0d136",
							"MAX_BPOW_BASE()": "bc694ea2",
							"MAX_FEE()": "bc063e1a",
							"MAX_IN_RATIO()": "ec093021",
							"MAX_OUT_RATIO()": "992e2a92",
							"MAX_TOTAL_WEIGHT()": "09a3bbe4",
							"MAX_WEIGHT()": "e4a28a52",
							"MIN_BALANCE()": "867378c5",
							"MIN_BOUND_TOKENS()": "b7b800a4",
							"MIN_BPOW_BASE()": "ba019dab",
							"MIN_FEE()": "76c7a3c7",
							"MIN_WEIGHT()": "218b5382",
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BConst.sol\":\"BConst\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]},\"Contracts/BConst.sol\":{\"keccak256\":\"0xc09e1b6426216e6fc1246376f2796ff3e176036bc7639e584cf365aedebd0083\",\"urls\":[\"bzz-raw://d813f692c759a83e62614caf0bde6ce976dd1614af0197739ff4183621284b32\",\"dweb:/ipfs/QmdMoeU8gQ1RYk5XDhbpatzFKbqUHNSkCt5KyhBQVWHhcv\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Contracts/BMath.sol": {
				"BMath": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BONE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BPOW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EXIT_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_POOL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_IN_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_OUT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_TOTAL_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenBalanceOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcInGivenOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenBalanceOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcOutGivenIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmountOut",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcPoolInGivenSingleOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolAmountIn",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcPoolOutGivenSingleIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolAmountOut",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolAmountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcSingleInGivenPoolOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmountIn",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalWeight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolAmountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcSingleOutGivenPoolIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmountOut",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenBalanceIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenBalanceOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenWeightOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "swapFee",
									"type": "uint256"
								}
							],
							"name": "calcSpotPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "spotPrice",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BMath.sol\":55:14100  contract BMath is BBronze, BConst, BNum {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BMath.sol\":55:14100  contract BMath is BBronze, BConst, BNum {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BMath.sol\":55:14100  contract BMath is BBronze, BConst, BNum {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BMath.sol\":55:14100  contract BMath is BBronze, BConst, BNum {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa221ee49\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbc694ea2\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xbc694ea2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc36596a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6580d12\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe4a28a52\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xec093021\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf8d6aed4\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0xa221ee49\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb0e0d136\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb7b800a4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xba019dab\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xba9530a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8656b653\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x8656b653\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x867378c5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x89298012\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9381cd2b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x992e2a92\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9a86139b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x09a3bbe4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x189d00ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x218b5382\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c1bbaf7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x76c7a3c7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x82f652ad\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":8114:9307  function calcSingleInGivenPoolOut(\r... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"Contracts/BMath.sol\":8114:9307  function calcSingleInGivenPoolOut(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":12808:14093  function calcPoolInGivenSingleOut(\r... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"Contracts/BMath.sol\":12808:14093  function calcPoolInGivenSingleOut(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":5929:7096  function calcPoolOutGivenSingleIn(\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"Contracts/BMath.sol\":5929:7096  function calcPoolOutGivenSingleIn(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":10426:11689  function calcSingleOutGivenPoolIn(\r... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"Contracts/BMath.sol\":10426:11689  function calcSingleOutGivenPoolIn(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":1011:1520  function calcSpotPrice(\r... */\n    tag_15:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"Contracts/BMath.sol\":1011:1520  function calcSpotPrice(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_16:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_17:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_18:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":2538:3221  function calcOutGivenIn(\r... */\n    tag_19:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"Contracts/BMath.sol\":2538:3221  function calcOutGivenIn(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_20:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_21:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_22:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_23:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_24:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_25:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BMath.sol\":4239:4911  function calcInGivenOut(\r... */\n    tag_26:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"Contracts/BMath.sol\":4239:4911  function calcInGivenOut(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_31:\n        /* \"Contracts/BConst.sol\":572:574  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":565:574  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_33:\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_85\n      jumpi\n      invalid\n    tag_85:\n      div\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_35:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n      dup2\n      jump\t// out\n        /* \"Contracts/BMath.sol\":8114:9307  function calcSingleInGivenPoolOut(\r... */\n    tag_38:\n        /* \"Contracts/BMath.sol\":8358:8376  uint tokenAmountIn */\n      0x00\n        /* \"Contracts/BMath.sol\":8394:8415  uint normalizedWeight */\n      dup1\n        /* \"Contracts/BMath.sol\":8418:8450  bdiv(tokenWeightIn, totalWeight) */\n      tag_87\n        /* \"Contracts/BMath.sol\":8423:8436  tokenWeightIn */\n      dup8\n        /* \"Contracts/BMath.sol\":8438:8449  totalWeight */\n      dup7\n        /* \"Contracts/BMath.sol\":8418:8422  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":8418:8450  bdiv(tokenWeightIn, totalWeight) */\n      jump\t// in\n    tag_87:\n        /* \"Contracts/BMath.sol\":8394:8450  uint normalizedWeight = bdiv(tokenWeightIn, totalWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8461:8479  uint newPoolSupply */\n      0x00\n        /* \"Contracts/BMath.sol\":8482:8513  badd(poolSupply, poolAmountOut) */\n      tag_89\n        /* \"Contracts/BMath.sol\":8487:8497  poolSupply */\n      dup8\n        /* \"Contracts/BMath.sol\":8499:8512  poolAmountOut */\n      dup7\n        /* \"Contracts/BMath.sol\":8482:8486  badd */\n      tag_90\n        /* \"Contracts/BMath.sol\":8482:8513  badd(poolSupply, poolAmountOut) */\n      jump\t// in\n    tag_89:\n        /* \"Contracts/BMath.sol\":8461:8513  uint newPoolSupply = badd(poolSupply, poolAmountOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8524:8538  uint poolRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":8541:8572  bdiv(newPoolSupply, poolSupply) */\n      tag_91\n        /* \"Contracts/BMath.sol\":8546:8559  newPoolSupply */\n      dup3\n        /* \"Contracts/BMath.sol\":8561:8571  poolSupply */\n      dup10\n        /* \"Contracts/BMath.sol\":8541:8545  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":8541:8572  bdiv(newPoolSupply, poolSupply) */\n      jump\t// in\n    tag_91:\n        /* \"Contracts/BMath.sol\":8524:8572  uint poolRatio = bdiv(newPoolSupply, poolSupply) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8650:8658  uint boo */\n      0x00\n        /* \"Contracts/BMath.sol\":8661:8689  bdiv(BONE, normalizedWeight) */\n      tag_92\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":8672:8688  normalizedWeight */\n      dup6\n        /* \"Contracts/BMath.sol\":8661:8665  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":8661:8689  bdiv(BONE, normalizedWeight) */\n      jump\t// in\n    tag_92:\n        /* \"Contracts/BMath.sol\":8650:8689  uint boo = bdiv(BONE, normalizedWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8701:8718  uint tokenInRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":8721:8741  bpow(poolRatio, boo) */\n      tag_93\n        /* \"Contracts/BMath.sol\":8726:8735  poolRatio */\n      dup4\n        /* \"Contracts/BMath.sol\":8737:8740  boo */\n      dup4\n        /* \"Contracts/BMath.sol\":8721:8725  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":8721:8741  bpow(poolRatio, boo) */\n      jump\t// in\n    tag_93:\n        /* \"Contracts/BMath.sol\":8701:8741  uint tokenInRatio = bpow(poolRatio, boo) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8752:8774  uint newTokenBalanceIn */\n      0x00\n        /* \"Contracts/BMath.sol\":8777:8811  bmul(tokenInRatio, tokenBalanceIn) */\n      tag_95\n        /* \"Contracts/BMath.sol\":8782:8794  tokenInRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":8796:8810  tokenBalanceIn */\n      dup15\n        /* \"Contracts/BMath.sol\":8777:8781  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":8777:8811  bmul(tokenInRatio, tokenBalanceIn) */\n      jump\t// in\n    tag_95:\n        /* \"Contracts/BMath.sol\":8752:8811  uint newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":8822:8848  uint tokenAmountInAfterFee */\n      0x00\n        /* \"Contracts/BMath.sol\":8851:8890  bsub(newTokenBalanceIn, tokenBalanceIn) */\n      tag_97\n        /* \"Contracts/BMath.sol\":8856:8873  newTokenBalanceIn */\n      dup3\n        /* \"Contracts/BMath.sol\":8875:8889  tokenBalanceIn */\n      dup16\n        /* \"Contracts/BMath.sol\":8851:8855  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":8851:8890  bsub(newTokenBalanceIn, tokenBalanceIn) */\n      jump\t// in\n    tag_97:\n        /* \"Contracts/BMath.sol\":8822:8890  uint tokenAmountInAfterFee = bsub(newTokenBalanceIn, tokenBalanceIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":9143:9151  uint zar */\n      0x00\n        /* \"Contracts/BMath.sol\":9154:9197  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      tag_99\n        /* \"Contracts/BMath.sol\":9159:9187  bsub(BONE, normalizedWeight) */\n      tag_100\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":9170:9186  normalizedWeight */\n      dup11\n        /* \"Contracts/BMath.sol\":9159:9163  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":9159:9187  bsub(BONE, normalizedWeight) */\n      jump\t// in\n    tag_100:\n        /* \"Contracts/BMath.sol\":9189:9196  swapFee */\n      dup12\n        /* \"Contracts/BMath.sol\":9154:9158  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":9154:9197  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      jump\t// in\n    tag_99:\n        /* \"Contracts/BMath.sol\":9143:9197  uint zar = bmul(bsub(BONE, normalizedWeight), swapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":9224:9268  bdiv(tokenAmountInAfterFee, bsub(BONE, zar)) */\n      tag_101\n        /* \"Contracts/BMath.sol\":9229:9250  tokenAmountInAfterFee */\n      dup3\n        /* \"Contracts/BMath.sol\":9252:9267  bsub(BONE, zar) */\n      tag_102\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":9263:9266  zar */\n      dup5\n        /* \"Contracts/BMath.sol\":9252:9256  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":9252:9267  bsub(BONE, zar) */\n      jump\t// in\n    tag_102:\n        /* \"Contracts/BMath.sol\":9224:9228  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":9224:9268  bdiv(tokenAmountInAfterFee, bsub(BONE, zar)) */\n      jump\t// in\n    tag_101:\n        /* \"Contracts/BMath.sol\":9208:9268  tokenAmountIn = bdiv(tokenAmountInAfterFee, bsub(BONE, zar)) */\n      swap9\n      pop\n        /* \"Contracts/BMath.sol\":9286:9299  tokenAmountIn */\n      dup9\n        /* \"Contracts/BMath.sol\":9279:9299  return tokenAmountIn */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":8114:9307  function calcSingleInGivenPoolOut(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_40:\n        /* \"Contracts/BConst.sol\":295:300  10**6 */\n      0x0f4240\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":288:300  BONE / 10**6 */\n      dup2\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n      div\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BMath.sol\":12808:14093  function calcPoolInGivenSingleOut(\r... */\n    tag_43:\n        /* \"Contracts/BMath.sol\":13055:13072  uint poolAmountIn */\n      0x00\n        /* \"Contracts/BMath.sol\":13146:13167  uint normalizedWeight */\n      dup1\n        /* \"Contracts/BMath.sol\":13170:13203  bdiv(tokenWeightOut, totalWeight) */\n      tag_105\n        /* \"Contracts/BMath.sol\":13175:13189  tokenWeightOut */\n      dup8\n        /* \"Contracts/BMath.sol\":13191:13202  totalWeight */\n      dup7\n        /* \"Contracts/BMath.sol\":13170:13174  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":13170:13203  bdiv(tokenWeightOut, totalWeight) */\n      jump\t// in\n    tag_105:\n        /* \"Contracts/BMath.sol\":13146:13203  uint normalizedWeight = bdiv(tokenWeightOut, totalWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13286:13294  uint zoo */\n      0x00\n        /* \"Contracts/BMath.sol\":13297:13325  bsub(BONE, normalizedWeight) */\n      tag_106\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":13308:13324  normalizedWeight */\n      dup4\n        /* \"Contracts/BMath.sol\":13297:13301  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":13297:13325  bsub(BONE, normalizedWeight) */\n      jump\t// in\n    tag_106:\n        /* \"Contracts/BMath.sol\":13286:13325  uint zoo = bsub(BONE, normalizedWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13336:13344  uint zar */\n      0x00\n        /* \"Contracts/BMath.sol\":13347:13365  bmul(zoo, swapFee) */\n      tag_107\n        /* \"Contracts/BMath.sol\":13352:13355  zoo */\n      dup3\n        /* \"Contracts/BMath.sol\":13357:13364  swapFee */\n      dup7\n        /* \"Contracts/BMath.sol\":13347:13351  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":13347:13365  bmul(zoo, swapFee) */\n      jump\t// in\n    tag_107:\n        /* \"Contracts/BMath.sol\":13336:13365  uint zar = bmul(zoo, swapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13377:13409  uint tokenAmountOutBeforeSwapFee */\n      0x00\n        /* \"Contracts/BMath.sol\":13412:13449  bdiv(tokenAmountOut, bsub(BONE, zar)) */\n      tag_108\n        /* \"Contracts/BMath.sol\":13417:13431  tokenAmountOut */\n      dup8\n        /* \"Contracts/BMath.sol\":13433:13448  bsub(BONE, zar) */\n      tag_109\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":13444:13447  zar */\n      dup6\n        /* \"Contracts/BMath.sol\":13433:13437  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":13433:13448  bsub(BONE, zar) */\n      jump\t// in\n    tag_109:\n        /* \"Contracts/BMath.sol\":13412:13416  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":13412:13449  bdiv(tokenAmountOut, bsub(BONE, zar)) */\n      jump\t// in\n    tag_108:\n        /* \"Contracts/BMath.sol\":13377:13449  uint tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, bsub(BONE, zar)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13462:13485  uint newTokenBalanceOut */\n      0x00\n        /* \"Contracts/BMath.sol\":13488:13538  bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee) */\n      tag_110\n        /* \"Contracts/BMath.sol\":13493:13508  tokenBalanceOut */\n      dup13\n        /* \"Contracts/BMath.sol\":13510:13537  tokenAmountOutBeforeSwapFee */\n      dup4\n        /* \"Contracts/BMath.sol\":13488:13492  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":13488:13538  bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee) */\n      jump\t// in\n    tag_110:\n        /* \"Contracts/BMath.sol\":13462:13538  uint newTokenBalanceOut = bsub(tokenBalanceOut, tokenAmountOutBeforeSwapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13549:13567  uint tokenOutRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":13570:13611  bdiv(newTokenBalanceOut, tokenBalanceOut) */\n      tag_111\n        /* \"Contracts/BMath.sol\":13575:13593  newTokenBalanceOut */\n      dup3\n        /* \"Contracts/BMath.sol\":13595:13610  tokenBalanceOut */\n      dup15\n        /* \"Contracts/BMath.sol\":13570:13574  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":13570:13611  bdiv(newTokenBalanceOut, tokenBalanceOut) */\n      jump\t// in\n    tag_111:\n        /* \"Contracts/BMath.sol\":13549:13611  uint tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13691:13705  uint poolRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":13708:13745  bpow(tokenOutRatio, normalizedWeight) */\n      tag_112\n        /* \"Contracts/BMath.sol\":13713:13726  tokenOutRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":13728:13744  normalizedWeight */\n      dup9\n        /* \"Contracts/BMath.sol\":13708:13712  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":13708:13745  bpow(tokenOutRatio, normalizedWeight) */\n      jump\t// in\n    tag_112:\n        /* \"Contracts/BMath.sol\":13691:13745  uint poolRatio = bpow(tokenOutRatio, normalizedWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13756:13774  uint newPoolSupply */\n      0x00\n        /* \"Contracts/BMath.sol\":13777:13804  bmul(poolRatio, poolSupply) */\n      tag_113\n        /* \"Contracts/BMath.sol\":13782:13791  poolRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":13793:13803  poolSupply */\n      dup15\n        /* \"Contracts/BMath.sol\":13777:13781  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":13777:13804  bmul(poolRatio, poolSupply) */\n      jump\t// in\n    tag_113:\n        /* \"Contracts/BMath.sol\":13756:13804  uint newPoolSupply = bmul(poolRatio, poolSupply) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":13815:13844  uint poolAmountInAfterExitFee */\n      0x00\n        /* \"Contracts/BMath.sol\":13847:13878  bsub(poolSupply, newPoolSupply) */\n      tag_114\n        /* \"Contracts/BMath.sol\":13852:13862  poolSupply */\n      dup15\n        /* \"Contracts/BMath.sol\":13864:13877  newPoolSupply */\n      dup4\n        /* \"Contracts/BMath.sol\":13847:13851  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":13847:13878  bsub(poolSupply, newPoolSupply) */\n      jump\t// in\n    tag_114:\n        /* \"Contracts/BMath.sol\":13815:13878  uint poolAmountInAfterExitFee = bsub(poolSupply, newPoolSupply) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":14003:14055  bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE)) */\n      tag_115\n        /* \"Contracts/BMath.sol\":14008:14032  poolAmountInAfterExitFee */\n      dup2\n        /* \"Contracts/BMath.sol\":14034:14054  bsub(BONE, EXIT_FEE) */\n      tag_116\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BMath.sol\":14034:14038  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":14034:14054  bsub(BONE, EXIT_FEE) */\n      jump\t// in\n    tag_116:\n        /* \"Contracts/BMath.sol\":14003:14007  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":14003:14055  bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE)) */\n      jump\t// in\n    tag_115:\n        /* \"Contracts/BMath.sol\":13988:14055  poolAmountIn = bdiv(poolAmountInAfterExitFee, bsub(BONE, EXIT_FEE)) */\n      swap10\n      pop\n        /* \"Contracts/BMath.sol\":14073:14085  poolAmountIn */\n      dup10\n        /* \"Contracts/BMath.sol\":14066:14085  return poolAmountIn */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":12808:14093  function calcPoolInGivenSingleOut(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BMath.sol\":5929:7096  function calcPoolOutGivenSingleIn(\r... */\n    tag_46:\n        /* \"Contracts/BMath.sol\":6173:6191  uint poolAmountOut */\n      0x00\n        /* \"Contracts/BMath.sol\":6457:6478  uint normalizedWeight */\n      dup1\n        /* \"Contracts/BMath.sol\":6481:6513  bdiv(tokenWeightIn, totalWeight) */\n      tag_118\n        /* \"Contracts/BMath.sol\":6486:6499  tokenWeightIn */\n      dup8\n        /* \"Contracts/BMath.sol\":6501:6512  totalWeight */\n      dup7\n        /* \"Contracts/BMath.sol\":6481:6485  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":6481:6513  bdiv(tokenWeightIn, totalWeight) */\n      jump\t// in\n    tag_118:\n        /* \"Contracts/BMath.sol\":6457:6513  uint normalizedWeight = bdiv(tokenWeightIn, totalWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6524:6532  uint zaz */\n      0x00\n        /* \"Contracts/BMath.sol\":6535:6578  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      tag_119\n        /* \"Contracts/BMath.sol\":6540:6568  bsub(BONE, normalizedWeight) */\n      tag_120\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":6551:6567  normalizedWeight */\n      dup5\n        /* \"Contracts/BMath.sol\":6540:6544  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":6540:6568  bsub(BONE, normalizedWeight) */\n      jump\t// in\n    tag_120:\n        /* \"Contracts/BMath.sol\":6570:6577  swapFee */\n      dup6\n        /* \"Contracts/BMath.sol\":6535:6539  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":6535:6578  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      jump\t// in\n    tag_119:\n        /* \"Contracts/BMath.sol\":6524:6578  uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6590:6616  uint tokenAmountInAfterFee */\n      0x00\n        /* \"Contracts/BMath.sol\":6619:6655  bmul(tokenAmountIn, bsub(BONE, zaz)) */\n      tag_121\n        /* \"Contracts/BMath.sol\":6624:6637  tokenAmountIn */\n      dup7\n        /* \"Contracts/BMath.sol\":6639:6654  bsub(BONE, zaz) */\n      tag_122\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":6650:6653  zaz */\n      dup6\n        /* \"Contracts/BMath.sol\":6639:6643  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":6639:6654  bsub(BONE, zaz) */\n      jump\t// in\n    tag_122:\n        /* \"Contracts/BMath.sol\":6619:6623  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":6619:6655  bmul(tokenAmountIn, bsub(BONE, zaz)) */\n      jump\t// in\n    tag_121:\n        /* \"Contracts/BMath.sol\":6590:6655  uint tokenAmountInAfterFee = bmul(tokenAmountIn, bsub(BONE, zaz)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6668:6690  uint newTokenBalanceIn */\n      0x00\n        /* \"Contracts/BMath.sol\":6693:6736  badd(tokenBalanceIn, tokenAmountInAfterFee) */\n      tag_123\n        /* \"Contracts/BMath.sol\":6698:6712  tokenBalanceIn */\n      dup12\n        /* \"Contracts/BMath.sol\":6714:6735  tokenAmountInAfterFee */\n      dup4\n        /* \"Contracts/BMath.sol\":6693:6697  badd */\n      tag_90\n        /* \"Contracts/BMath.sol\":6693:6736  badd(tokenBalanceIn, tokenAmountInAfterFee) */\n      jump\t// in\n    tag_123:\n        /* \"Contracts/BMath.sol\":6668:6736  uint newTokenBalanceIn = badd(tokenBalanceIn, tokenAmountInAfterFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6747:6764  uint tokenInRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":6767:6806  bdiv(newTokenBalanceIn, tokenBalanceIn) */\n      tag_124\n        /* \"Contracts/BMath.sol\":6772:6789  newTokenBalanceIn */\n      dup3\n        /* \"Contracts/BMath.sol\":6791:6805  tokenBalanceIn */\n      dup14\n        /* \"Contracts/BMath.sol\":6767:6771  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":6767:6806  bdiv(newTokenBalanceIn, tokenBalanceIn) */\n      jump\t// in\n    tag_124:\n        /* \"Contracts/BMath.sol\":6747:6806  uint tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6887:6901  uint poolRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":6904:6940  bpow(tokenInRatio, normalizedWeight) */\n      tag_125\n        /* \"Contracts/BMath.sol\":6909:6921  tokenInRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":6923:6939  normalizedWeight */\n      dup8\n        /* \"Contracts/BMath.sol\":6904:6908  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":6904:6940  bpow(tokenInRatio, normalizedWeight) */\n      jump\t// in\n    tag_125:\n        /* \"Contracts/BMath.sol\":6887:6940  uint poolRatio = bpow(tokenInRatio, normalizedWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":6951:6969  uint newPoolSupply */\n      0x00\n        /* \"Contracts/BMath.sol\":6972:6999  bmul(poolRatio, poolSupply) */\n      tag_126\n        /* \"Contracts/BMath.sol\":6977:6986  poolRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":6988:6998  poolSupply */\n      dup14\n        /* \"Contracts/BMath.sol\":6972:6976  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":6972:6999  bmul(poolRatio, poolSupply) */\n      jump\t// in\n    tag_126:\n        /* \"Contracts/BMath.sol\":6951:6999  uint newPoolSupply = bmul(poolRatio, poolSupply) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":7026:7057  bsub(newPoolSupply, poolSupply) */\n      tag_127\n        /* \"Contracts/BMath.sol\":7031:7044  newPoolSupply */\n      dup2\n        /* \"Contracts/BMath.sol\":7046:7056  poolSupply */\n      dup14\n        /* \"Contracts/BMath.sol\":7026:7030  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":7026:7057  bsub(newPoolSupply, poolSupply) */\n      jump\t// in\n    tag_127:\n        /* \"Contracts/BMath.sol\":7010:7057  poolAmountOut = bsub(newPoolSupply, poolSupply) */\n      swap8\n      pop\n        /* \"Contracts/BMath.sol\":7075:7088  poolAmountOut */\n      dup8\n        /* \"Contracts/BMath.sol\":7068:7088  return poolAmountOut */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":5929:7096  function calcPoolOutGivenSingleIn(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_48:\n        /* \"Contracts/BConst.sol\":629:635  10**12 */\n      0xe8d4a51000\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":622:635  BONE / 10**12 */\n      dup2\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      div\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BMath.sol\":10426:11689  function calcSingleOutGivenPoolIn(\r... */\n    tag_51:\n        /* \"Contracts/BMath.sol\":10671:10690  uint tokenAmountOut */\n      0x00\n        /* \"Contracts/BMath.sol\":10708:10729  uint normalizedWeight */\n      dup1\n        /* \"Contracts/BMath.sol\":10732:10765  bdiv(tokenWeightOut, totalWeight) */\n      tag_130\n        /* \"Contracts/BMath.sol\":10737:10751  tokenWeightOut */\n      dup8\n        /* \"Contracts/BMath.sol\":10753:10764  totalWeight */\n      dup7\n        /* \"Contracts/BMath.sol\":10732:10736  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":10732:10765  bdiv(tokenWeightOut, totalWeight) */\n      jump\t// in\n    tag_130:\n        /* \"Contracts/BMath.sol\":10708:10765  uint normalizedWeight = bdiv(tokenWeightOut, totalWeight) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":10873:10902  uint poolAmountInAfterExitFee */\n      0x00\n        /* \"Contracts/BMath.sol\":10905:10945  bmul(poolAmountIn, bsub(BONE, EXIT_FEE)) */\n      tag_131\n        /* \"Contracts/BMath.sol\":10910:10922  poolAmountIn */\n      dup6\n        /* \"Contracts/BMath.sol\":10924:10944  bsub(BONE, EXIT_FEE) */\n      tag_132\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BMath.sol\":10924:10928  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":10924:10944  bsub(BONE, EXIT_FEE) */\n      jump\t// in\n    tag_132:\n        /* \"Contracts/BMath.sol\":10905:10909  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":10905:10945  bmul(poolAmountIn, bsub(BONE, EXIT_FEE)) */\n      jump\t// in\n    tag_131:\n        /* \"Contracts/BMath.sol\":10873:10945  uint poolAmountInAfterExitFee = bmul(poolAmountIn, bsub(BONE, EXIT_FEE)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":10956:10974  uint newPoolSupply */\n      0x00\n        /* \"Contracts/BMath.sol\":10977:11019  bsub(poolSupply, poolAmountInAfterExitFee) */\n      tag_133\n        /* \"Contracts/BMath.sol\":10982:10992  poolSupply */\n      dup9\n        /* \"Contracts/BMath.sol\":10994:11018  poolAmountInAfterExitFee */\n      dup4\n        /* \"Contracts/BMath.sol\":10977:10981  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":10977:11019  bsub(poolSupply, poolAmountInAfterExitFee) */\n      jump\t// in\n    tag_133:\n        /* \"Contracts/BMath.sol\":10956:11019  uint newPoolSupply = bsub(poolSupply, poolAmountInAfterExitFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11030:11044  uint poolRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":11047:11078  bdiv(newPoolSupply, poolSupply) */\n      tag_134\n        /* \"Contracts/BMath.sol\":11052:11065  newPoolSupply */\n      dup3\n        /* \"Contracts/BMath.sol\":11067:11077  poolSupply */\n      dup11\n        /* \"Contracts/BMath.sol\":11047:11051  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":11047:11078  bdiv(newPoolSupply, poolSupply) */\n      jump\t// in\n    tag_134:\n        /* \"Contracts/BMath.sol\":11030:11078  uint poolRatio = bdiv(newPoolSupply, poolSupply) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11151:11169  uint tokenOutRatio */\n      0x00\n        /* \"Contracts/BMath.sol\":11172:11217  bpow(poolRatio, bdiv(BONE, normalizedWeight)) */\n      tag_135\n        /* \"Contracts/BMath.sol\":11177:11186  poolRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":11188:11216  bdiv(BONE, normalizedWeight) */\n      tag_136\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":11199:11215  normalizedWeight */\n      dup9\n        /* \"Contracts/BMath.sol\":11188:11192  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":11188:11216  bdiv(BONE, normalizedWeight) */\n      jump\t// in\n    tag_136:\n        /* \"Contracts/BMath.sol\":11172:11176  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":11172:11217  bpow(poolRatio, bdiv(BONE, normalizedWeight)) */\n      jump\t// in\n    tag_135:\n        /* \"Contracts/BMath.sol\":11151:11217  uint tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11228:11251  uint newTokenBalanceOut */\n      0x00\n        /* \"Contracts/BMath.sol\":11254:11290  bmul(tokenOutRatio, tokenBalanceOut) */\n      tag_137\n        /* \"Contracts/BMath.sol\":11259:11272  tokenOutRatio */\n      dup3\n        /* \"Contracts/BMath.sol\":11274:11289  tokenBalanceOut */\n      dup15\n        /* \"Contracts/BMath.sol\":11254:11258  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":11254:11290  bmul(tokenOutRatio, tokenBalanceOut) */\n      jump\t// in\n    tag_137:\n        /* \"Contracts/BMath.sol\":11228:11290  uint newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11303:11335  uint tokenAmountOutBeforeSwapFee */\n      0x00\n        /* \"Contracts/BMath.sol\":11338:11379  bsub(tokenBalanceOut, newTokenBalanceOut) */\n      tag_138\n        /* \"Contracts/BMath.sol\":11343:11358  tokenBalanceOut */\n      dup15\n        /* \"Contracts/BMath.sol\":11360:11378  newTokenBalanceOut */\n      dup4\n        /* \"Contracts/BMath.sol\":11338:11342  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":11338:11379  bsub(tokenBalanceOut, newTokenBalanceOut) */\n      jump\t// in\n    tag_138:\n        /* \"Contracts/BMath.sol\":11303:11379  uint tokenAmountOutBeforeSwapFee = bsub(tokenBalanceOut, newTokenBalanceOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11516:11524  uint zaz */\n      0x00\n        /* \"Contracts/BMath.sol\":11527:11570  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      tag_139\n        /* \"Contracts/BMath.sol\":11532:11560  bsub(BONE, normalizedWeight) */\n      tag_140\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":11543:11559  normalizedWeight */\n      dup11\n        /* \"Contracts/BMath.sol\":11532:11536  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":11532:11560  bsub(BONE, normalizedWeight) */\n      jump\t// in\n    tag_140:\n        /* \"Contracts/BMath.sol\":11562:11569  swapFee */\n      dup12\n        /* \"Contracts/BMath.sol\":11527:11531  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":11527:11570  bmul(bsub(BONE, normalizedWeight), swapFee) */\n      jump\t// in\n    tag_139:\n        /* \"Contracts/BMath.sol\":11516:11570  uint zaz = bmul(bsub(BONE, normalizedWeight), swapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":11599:11649  bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz)) */\n      tag_141\n        /* \"Contracts/BMath.sol\":11604:11631  tokenAmountOutBeforeSwapFee */\n      dup3\n        /* \"Contracts/BMath.sol\":11633:11648  bsub(BONE, zaz) */\n      tag_142\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":11644:11647  zaz */\n      dup5\n        /* \"Contracts/BMath.sol\":11633:11637  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":11633:11648  bsub(BONE, zaz) */\n      jump\t// in\n    tag_142:\n        /* \"Contracts/BMath.sol\":11599:11603  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":11599:11649  bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz)) */\n      jump\t// in\n    tag_141:\n        /* \"Contracts/BMath.sol\":11582:11649  tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, bsub(BONE, zaz)) */\n      swap9\n      pop\n        /* \"Contracts/BMath.sol\":11667:11681  tokenAmountOut */\n      dup9\n        /* \"Contracts/BMath.sol\":11660:11681  return tokenAmountOut */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":10426:11689  function calcSingleOutGivenPoolIn(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_53:\n        /* \"Contracts/BConst.sol\":692:695  100 */\n      0x64\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":685:695  BONE * 100 */\n      mul\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_55:\n        /* \"Contracts/BConst.sol\":996:1001  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":991:992  3 */\n      0x03\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":984:992  BONE / 3 */\n      dup2\n      tag_143\n      jumpi\n      invalid\n    tag_143:\n      div\n        /* \"Contracts/BConst.sol\":983:1001  (BONE / 3) + 1 wei */\n      add\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_57:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n        /* \"Contracts/BMath.sol\":1011:1520  function calcSpotPrice(\r... */\n    tag_60:\n        /* \"Contracts/BMath.sol\":1223:1237  uint spotPrice */\n      0x00\n        /* \"Contracts/BMath.sol\":1255:1265  uint numer */\n      dup1\n        /* \"Contracts/BMath.sol\":1268:1303  bdiv(tokenBalanceIn, tokenWeightIn) */\n      tag_146\n        /* \"Contracts/BMath.sol\":1273:1287  tokenBalanceIn */\n      dup8\n        /* \"Contracts/BMath.sol\":1289:1302  tokenWeightIn */\n      dup8\n        /* \"Contracts/BMath.sol\":1268:1272  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":1268:1303  bdiv(tokenBalanceIn, tokenWeightIn) */\n      jump\t// in\n    tag_146:\n        /* \"Contracts/BMath.sol\":1255:1303  uint numer = bdiv(tokenBalanceIn, tokenWeightIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":1314:1324  uint denom */\n      0x00\n        /* \"Contracts/BMath.sol\":1327:1364  bdiv(tokenBalanceOut, tokenWeightOut) */\n      tag_147\n        /* \"Contracts/BMath.sol\":1332:1347  tokenBalanceOut */\n      dup7\n        /* \"Contracts/BMath.sol\":1349:1363  tokenWeightOut */\n      dup7\n        /* \"Contracts/BMath.sol\":1327:1331  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":1327:1364  bdiv(tokenBalanceOut, tokenWeightOut) */\n      jump\t// in\n    tag_147:\n        /* \"Contracts/BMath.sol\":1314:1364  uint denom = bdiv(tokenBalanceOut, tokenWeightOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":1375:1385  uint ratio */\n      0x00\n        /* \"Contracts/BMath.sol\":1388:1406  bdiv(numer, denom) */\n      tag_148\n        /* \"Contracts/BMath.sol\":1393:1398  numer */\n      dup4\n        /* \"Contracts/BMath.sol\":1400:1405  denom */\n      dup4\n        /* \"Contracts/BMath.sol\":1388:1392  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":1388:1406  bdiv(numer, denom) */\n      jump\t// in\n    tag_148:\n        /* \"Contracts/BMath.sol\":1375:1406  uint ratio = bdiv(numer, denom) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":1417:1427  uint scale */\n      0x00\n        /* \"Contracts/BMath.sol\":1430:1461  bdiv(BONE, bsub(BONE, swapFee)) */\n      tag_149\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":1441:1460  bsub(BONE, swapFee) */\n      tag_150\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":1452:1459  swapFee */\n      dup10\n        /* \"Contracts/BMath.sol\":1441:1445  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":1441:1460  bsub(BONE, swapFee) */\n      jump\t// in\n    tag_150:\n        /* \"Contracts/BMath.sol\":1430:1434  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":1430:1461  bdiv(BONE, bsub(BONE, swapFee)) */\n      jump\t// in\n    tag_149:\n        /* \"Contracts/BMath.sol\":1417:1461  uint scale = bdiv(BONE, bsub(BONE, swapFee)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":1493:1511  bmul(ratio, scale) */\n      tag_151\n        /* \"Contracts/BMath.sol\":1498:1503  ratio */\n      dup3\n        /* \"Contracts/BMath.sol\":1505:1510  scale */\n      dup3\n        /* \"Contracts/BMath.sol\":1493:1497  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":1493:1511  bmul(ratio, scale) */\n      jump\t// in\n    tag_151:\n        /* \"Contracts/BMath.sol\":1481:1511  spotPrice = bmul(ratio, scale) */\n      swap5\n      pop\n      dup5\n        /* \"Contracts/BMath.sol\":1472:1512  return  (spotPrice = bmul(ratio, scale)) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":1011:1520  function calcSpotPrice(\r... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_62:\n        /* \"Contracts/BConst.sol\":237:238  8 */\n      0x08\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_64:\n        /* \"Contracts/BConst.sol\":188:189  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_66:\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BMath.sol\":2538:3221  function calcOutGivenIn(\r... */\n    tag_69:\n        /* \"Contracts/BMath.sol\":2780:2799  uint tokenAmountOut */\n      0x00\n        /* \"Contracts/BMath.sol\":2817:2833  uint weightRatio */\n      dup1\n        /* \"Contracts/BMath.sol\":2836:2871  bdiv(tokenWeightIn, tokenWeightOut) */\n      tag_153\n        /* \"Contracts/BMath.sol\":2841:2854  tokenWeightIn */\n      dup8\n        /* \"Contracts/BMath.sol\":2856:2870  tokenWeightOut */\n      dup7\n        /* \"Contracts/BMath.sol\":2836:2840  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":2836:2871  bdiv(tokenWeightIn, tokenWeightOut) */\n      jump\t// in\n    tag_153:\n        /* \"Contracts/BMath.sol\":2817:2871  uint weightRatio = bdiv(tokenWeightIn, tokenWeightOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":2882:2897  uint adjustedIn */\n      0x00\n        /* \"Contracts/BMath.sol\":2900:2919  bsub(BONE, swapFee) */\n      tag_154\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":2911:2918  swapFee */\n      dup6\n        /* \"Contracts/BMath.sol\":2900:2904  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":2900:2919  bsub(BONE, swapFee) */\n      jump\t// in\n    tag_154:\n        /* \"Contracts/BMath.sol\":2882:2919  uint adjustedIn = bsub(BONE, swapFee) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":2943:2974  bmul(tokenAmountIn, adjustedIn) */\n      tag_155\n        /* \"Contracts/BMath.sol\":2948:2961  tokenAmountIn */\n      dup6\n        /* \"Contracts/BMath.sol\":2963:2973  adjustedIn */\n      dup3\n        /* \"Contracts/BMath.sol\":2943:2947  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":2943:2974  bmul(tokenAmountIn, adjustedIn) */\n      jump\t// in\n    tag_155:\n        /* \"Contracts/BMath.sol\":2930:2974  adjustedIn = bmul(tokenAmountIn, adjustedIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":2985:2991  uint y */\n      0x00\n        /* \"Contracts/BMath.sol\":2994:3048  bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn)) */\n      tag_156\n        /* \"Contracts/BMath.sol\":2999:3013  tokenBalanceIn */\n      dup11\n        /* \"Contracts/BMath.sol\":3015:3047  badd(tokenBalanceIn, adjustedIn) */\n      tag_157\n        /* \"Contracts/BMath.sol\":3020:3034  tokenBalanceIn */\n      dup13\n        /* \"Contracts/BMath.sol\":3036:3046  adjustedIn */\n      dup6\n        /* \"Contracts/BMath.sol\":3015:3019  badd */\n      tag_90\n        /* \"Contracts/BMath.sol\":3015:3047  badd(tokenBalanceIn, adjustedIn) */\n      jump\t// in\n    tag_157:\n        /* \"Contracts/BMath.sol\":2994:2998  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":2994:3048  bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn)) */\n      jump\t// in\n    tag_156:\n        /* \"Contracts/BMath.sol\":2985:3048  uint y = bdiv(tokenBalanceIn, badd(tokenBalanceIn, adjustedIn)) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":3059:3067  uint foo */\n      0x00\n        /* \"Contracts/BMath.sol\":3070:3090  bpow(y, weightRatio) */\n      tag_158\n        /* \"Contracts/BMath.sol\":3075:3076  y */\n      dup3\n        /* \"Contracts/BMath.sol\":3078:3089  weightRatio */\n      dup6\n        /* \"Contracts/BMath.sol\":3070:3074  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":3070:3090  bpow(y, weightRatio) */\n      jump\t// in\n    tag_158:\n        /* \"Contracts/BMath.sol\":3059:3090  uint foo = bpow(y, weightRatio) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":3101:3109  uint bar */\n      0x00\n        /* \"Contracts/BMath.sol\":3112:3127  bsub(BONE, foo) */\n      tag_159\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":3123:3126  foo */\n      dup4\n        /* \"Contracts/BMath.sol\":3112:3116  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":3112:3127  bsub(BONE, foo) */\n      jump\t// in\n    tag_159:\n        /* \"Contracts/BMath.sol\":3101:3127  uint bar = bsub(BONE, foo) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":3155:3181  bmul(tokenBalanceOut, bar) */\n      tag_160\n        /* \"Contracts/BMath.sol\":3160:3175  tokenBalanceOut */\n      dup11\n        /* \"Contracts/BMath.sol\":3177:3180  bar */\n      dup3\n        /* \"Contracts/BMath.sol\":3155:3159  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":3155:3181  bmul(tokenBalanceOut, bar) */\n      jump\t// in\n    tag_160:\n        /* \"Contracts/BMath.sol\":3138:3181  tokenAmountOut = bmul(tokenBalanceOut, bar) */\n      swap6\n      pop\n        /* \"Contracts/BMath.sol\":3199:3213  tokenAmountOut */\n      dup6\n        /* \"Contracts/BMath.sol\":3192:3213  return tokenAmountOut */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":2538:3221  function calcOutGivenIn(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_71:\n        /* \"Contracts/BConst.sol\":355:357  10 */\n      0x0a\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":348:357  BONE / 10 */\n      dup2\n      tag_161\n      jumpi\n      invalid\n    tag_161:\n      div\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_73:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_75:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_77:\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_79:\n        /* \"Contracts/BConst.sol\":515:517  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":508:517  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_81:\n        /* \"Contracts/BConst.sol\":934:935  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":927:935  BONE / 2 */\n      dup2\n      tag_162\n      jumpi\n      invalid\n    tag_162:\n      div\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BMath.sol\":4239:4911  function calcInGivenOut(\r... */\n    tag_84:\n        /* \"Contracts/BMath.sol\":4482:4500  uint tokenAmountIn */\n      0x00\n        /* \"Contracts/BMath.sol\":4518:4534  uint weightRatio */\n      dup1\n        /* \"Contracts/BMath.sol\":4537:4572  bdiv(tokenWeightOut, tokenWeightIn) */\n      tag_164\n        /* \"Contracts/BMath.sol\":4542:4556  tokenWeightOut */\n      dup6\n        /* \"Contracts/BMath.sol\":4558:4571  tokenWeightIn */\n      dup9\n        /* \"Contracts/BMath.sol\":4537:4541  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":4537:4572  bdiv(tokenWeightOut, tokenWeightIn) */\n      jump\t// in\n    tag_164:\n        /* \"Contracts/BMath.sol\":4518:4572  uint weightRatio = bdiv(tokenWeightOut, tokenWeightIn) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":4583:4592  uint diff */\n      0x00\n        /* \"Contracts/BMath.sol\":4595:4632  bsub(tokenBalanceOut, tokenAmountOut) */\n      tag_165\n        /* \"Contracts/BMath.sol\":4600:4615  tokenBalanceOut */\n      dup8\n        /* \"Contracts/BMath.sol\":4617:4631  tokenAmountOut */\n      dup7\n        /* \"Contracts/BMath.sol\":4595:4599  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":4595:4632  bsub(tokenBalanceOut, tokenAmountOut) */\n      jump\t// in\n    tag_165:\n        /* \"Contracts/BMath.sol\":4583:4632  uint diff = bsub(tokenBalanceOut, tokenAmountOut) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":4643:4649  uint y */\n      0x00\n        /* \"Contracts/BMath.sol\":4652:4679  bdiv(tokenBalanceOut, diff) */\n      tag_166\n        /* \"Contracts/BMath.sol\":4657:4672  tokenBalanceOut */\n      dup9\n        /* \"Contracts/BMath.sol\":4674:4678  diff */\n      dup4\n        /* \"Contracts/BMath.sol\":4652:4656  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":4652:4679  bdiv(tokenBalanceOut, diff) */\n      jump\t// in\n    tag_166:\n        /* \"Contracts/BMath.sol\":4643:4679  uint y = bdiv(tokenBalanceOut, diff) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":4690:4698  uint foo */\n      0x00\n        /* \"Contracts/BMath.sol\":4701:4721  bpow(y, weightRatio) */\n      tag_167\n        /* \"Contracts/BMath.sol\":4706:4707  y */\n      dup3\n        /* \"Contracts/BMath.sol\":4709:4720  weightRatio */\n      dup6\n        /* \"Contracts/BMath.sol\":4701:4705  bpow */\n      tag_94\n        /* \"Contracts/BMath.sol\":4701:4721  bpow(y, weightRatio) */\n      jump\t// in\n    tag_167:\n        /* \"Contracts/BMath.sol\":4690:4721  uint foo = bpow(y, weightRatio) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":4738:4753  bsub(foo, BONE) */\n      tag_168\n        /* \"Contracts/BMath.sol\":4743:4746  foo */\n      dup2\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":4738:4742  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":4738:4753  bsub(foo, BONE) */\n      jump\t// in\n    tag_168:\n        /* \"Contracts/BMath.sol\":4732:4753  foo = bsub(foo, BONE) */\n      swap1\n      pop\n        /* \"Contracts/BMath.sol\":4780:4799  bsub(BONE, swapFee) */\n      tag_169\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BMath.sol\":4791:4798  swapFee */\n      dup8\n        /* \"Contracts/BMath.sol\":4780:4784  bsub */\n      tag_98\n        /* \"Contracts/BMath.sol\":4780:4799  bsub(BONE, swapFee) */\n      jump\t// in\n    tag_169:\n        /* \"Contracts/BMath.sol\":4764:4799  tokenAmountIn = bsub(BONE, swapFee) */\n      swap5\n      pop\n        /* \"Contracts/BMath.sol\":4826:4872  bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn) */\n      tag_170\n        /* \"Contracts/BMath.sol\":4831:4856  bmul(tokenBalanceIn, foo) */\n      tag_171\n        /* \"Contracts/BMath.sol\":4836:4850  tokenBalanceIn */\n      dup13\n        /* \"Contracts/BMath.sol\":4852:4855  foo */\n      dup4\n        /* \"Contracts/BMath.sol\":4831:4835  bmul */\n      tag_96\n        /* \"Contracts/BMath.sol\":4831:4856  bmul(tokenBalanceIn, foo) */\n      jump\t// in\n    tag_171:\n        /* \"Contracts/BMath.sol\":4858:4871  tokenAmountIn */\n      dup7\n        /* \"Contracts/BMath.sol\":4826:4830  bdiv */\n      tag_88\n        /* \"Contracts/BMath.sol\":4826:4872  bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn) */\n      jump\t// in\n    tag_170:\n        /* \"Contracts/BMath.sol\":4810:4872  tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn) */\n      swap5\n      pop\n        /* \"Contracts/BMath.sol\":4890:4903  tokenAmountIn */\n      dup5\n        /* \"Contracts/BMath.sol\":4883:4903  return tokenAmountIn */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BMath.sol\":4239:4911  function calcInGivenOut(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":1277:1664  function bdiv(uint a, uint b)\r... */\n    tag_88:\n        /* \"Contracts/BNum.sol\":1348:1352  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":1383:1384  0 */\n      dup1\n        /* \"Contracts/BNum.sol\":1378:1379  b */\n      dup3\n        /* \"Contracts/BNum.sol\":1378:1384  b != 0 */\n      eq\n      iszero\n        /* \"Contracts/BNum.sol\":1370:1401  require(b != 0, \"ERR_DIV_ZERO\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4449565f5a45524f0000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"Contracts/BNum.sol\":1412:1419  uint c0 */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":1422:1423  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1422:1430  a * BONE */\n      mul\n        /* \"Contracts/BNum.sol\":1412:1430  uint c0 = a * BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1454:1455  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":1449:1450  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1449:1455  a == 0 */\n      eq\n        /* \"Contracts/BNum.sol\":1449:1473  a == 0 || c0 / a == BONE */\n      dup1\n      tag_174\n      jumpi\n      pop\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":1464:1465  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1459:1461  c0 */\n      dup3\n        /* \"Contracts/BNum.sol\":1459:1465  c0 / a */\n      dup2\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      div\n        /* \"Contracts/BNum.sol\":1459:1473  c0 / a == BONE */\n      eq\n        /* \"Contracts/BNum.sol\":1449:1473  a == 0 || c0 / a == BONE */\n    tag_174:\n        /* \"Contracts/BNum.sol\":1441:1494  require(a == 0 || c0 / a == BONE, \"ERR_DIV_INTERNAL\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4449565f494e5445524e414c00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"Contracts/BNum.sol\":1522:1529  uint c1 */\n      0x00\n        /* \"Contracts/BNum.sol\":1542:1543  2 */\n      0x02\n        /* \"Contracts/BNum.sol\":1538:1539  b */\n      dup5\n        /* \"Contracts/BNum.sol\":1538:1543  b / 2 */\n      dup2\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      div\n        /* \"Contracts/BNum.sol\":1532:1534  c0 */\n      dup3\n        /* \"Contracts/BNum.sol\":1532:1544  c0 + (b / 2) */\n      add\n        /* \"Contracts/BNum.sol\":1522:1544  uint c1 = c0 + (b / 2) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1569:1571  c0 */\n      dup2\n        /* \"Contracts/BNum.sol\":1563:1565  c1 */\n      dup2\n        /* \"Contracts/BNum.sol\":1563:1571  c1 >= c0 */\n      lt\n      iszero\n        /* \"Contracts/BNum.sol\":1555:1592  require(c1 >= c0, \"ERR_DIV_INTERNAL\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4449565f494e5445524e414c00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"Contracts/BNum.sol\":1620:1627  uint c2 */\n      0x00\n        /* \"Contracts/BNum.sol\":1635:1636  b */\n      dup5\n        /* \"Contracts/BNum.sol\":1630:1632  c1 */\n      dup3\n        /* \"Contracts/BNum.sol\":1630:1636  c1 / b */\n      dup2\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      div\n        /* \"Contracts/BNum.sol\":1620:1636  uint c2 = c1 / b */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1654:1656  c2 */\n      dup1\n        /* \"Contracts/BNum.sol\":1647:1656  return c2 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":1277:1664  function bdiv(uint a, uint b)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":329:509  function badd(uint a, uint b)\r... */\n    tag_90:\n        /* \"Contracts/BNum.sol\":400:404  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":422:428  uint c */\n      dup1\n        /* \"Contracts/BNum.sol\":435:436  b */\n      dup3\n        /* \"Contracts/BNum.sol\":431:432  a */\n      dup5\n        /* \"Contracts/BNum.sol\":431:436  a + b */\n      add\n        /* \"Contracts/BNum.sol\":422:436  uint c = a + b */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":460:461  a */\n      dup4\n        /* \"Contracts/BNum.sol\":455:456  c */\n      dup2\n        /* \"Contracts/BNum.sol\":455:461  c >= a */\n      lt\n      iszero\n        /* \"Contracts/BNum.sol\":447:482  require(c >= a, \"ERR_ADD_OVERFLOW\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4144445f4f564552464c4f5700000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"Contracts/BNum.sol\":500:501  c */\n      dup1\n        /* \"Contracts/BNum.sol\":493:501  return c */\n      swap2\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":329:509  function badd(uint a, uint b)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":2167:2722  function bpow(uint base, uint exp)\r... */\n    tag_94:\n        /* \"Contracts/BNum.sol\":2243:2247  uint */\n      0x00\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BNum.sol\":2273:2277  base */\n      dup4\n        /* \"Contracts/BNum.sol\":2273:2294  base >= MIN_BPOW_BASE */\n      lt\n      iszero\n        /* \"Contracts/BNum.sol\":2265:2320  require(base >= MIN_BPOW_BASE, \"ERR_BPOW_BASE_TOO_LOW\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f42504f575f424153455f544f4f5f4c4f570000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BNum.sol\":2339:2343  base */\n      dup4\n        /* \"Contracts/BNum.sol\":2339:2360  base <= MAX_BPOW_BASE */\n      gt\n      iszero\n        /* \"Contracts/BNum.sol\":2331:2387  require(base <= MAX_BPOW_BASE, \"ERR_BPOW_BASE_TOO_HIGH\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f42504f575f424153455f544f4f5f4849474800000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"Contracts/BNum.sol\":2400:2410  uint whole */\n      0x00\n        /* \"Contracts/BNum.sol\":2414:2425  bfloor(exp) */\n      tag_185\n        /* \"Contracts/BNum.sol\":2421:2424  exp */\n      dup4\n        /* \"Contracts/BNum.sol\":2414:2420  bfloor */\n      tag_186\n        /* \"Contracts/BNum.sol\":2414:2425  bfloor(exp) */\n      jump\t// in\n    tag_185:\n        /* \"Contracts/BNum.sol\":2400:2425  uint whole  = bfloor(exp) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2439:2450  uint remain */\n      0x00\n        /* \"Contracts/BNum.sol\":2453:2469  bsub(exp, whole) */\n      tag_187\n        /* \"Contracts/BNum.sol\":2458:2461  exp */\n      dup5\n        /* \"Contracts/BNum.sol\":2463:2468  whole */\n      dup4\n        /* \"Contracts/BNum.sol\":2453:2457  bsub */\n      tag_98\n        /* \"Contracts/BNum.sol\":2453:2469  bsub(exp, whole) */\n      jump\t// in\n    tag_187:\n        /* \"Contracts/BNum.sol\":2439:2469  uint remain = bsub(exp, whole) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2482:2495  uint wholePow */\n      0x00\n        /* \"Contracts/BNum.sol\":2498:2522  bpowi(base, btoi(whole)) */\n      tag_188\n        /* \"Contracts/BNum.sol\":2504:2508  base */\n      dup7\n        /* \"Contracts/BNum.sol\":2510:2521  btoi(whole) */\n      tag_189\n        /* \"Contracts/BNum.sol\":2515:2520  whole */\n      dup6\n        /* \"Contracts/BNum.sol\":2510:2514  btoi */\n      tag_190\n        /* \"Contracts/BNum.sol\":2510:2521  btoi(whole) */\n      jump\t// in\n    tag_189:\n        /* \"Contracts/BNum.sol\":2498:2503  bpowi */\n      tag_191\n        /* \"Contracts/BNum.sol\":2498:2522  bpowi(base, btoi(whole)) */\n      jump\t// in\n    tag_188:\n        /* \"Contracts/BNum.sol\":2482:2522  uint wholePow = bpowi(base, btoi(whole)) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2549:2550  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":2539:2545  remain */\n      dup3\n        /* \"Contracts/BNum.sol\":2539:2550  remain == 0 */\n      eq\n        /* \"Contracts/BNum.sol\":2535:2594  if (remain == 0) {\r... */\n      iszero\n      tag_192\n      jumpi\n        /* \"Contracts/BNum.sol\":2574:2582  wholePow */\n      dup1\n        /* \"Contracts/BNum.sol\":2567:2582  return wholePow */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_182)\n        /* \"Contracts/BNum.sol\":2535:2594  if (remain == 0) {\r... */\n    tag_192:\n        /* \"Contracts/BNum.sol\":2606:2624  uint partialResult */\n      0x00\n        /* \"Contracts/BNum.sol\":2627:2667  bpowApprox(base, remain, BPOW_PRECISION) */\n      tag_193\n        /* \"Contracts/BNum.sol\":2638:2642  base */\n      dup8\n        /* \"Contracts/BNum.sol\":2644:2650  remain */\n      dup5\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"Contracts/BNum.sol\":2627:2637  bpowApprox */\n      tag_195\n        /* \"Contracts/BNum.sol\":2627:2667  bpowApprox(base, remain, BPOW_PRECISION) */\n      jump\t// in\n    tag_193:\n        /* \"Contracts/BNum.sol\":2606:2667  uint partialResult = bpowApprox(base, remain, BPOW_PRECISION) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2685:2714  bmul(wholePow, partialResult) */\n      tag_196\n        /* \"Contracts/BNum.sol\":2690:2698  wholePow */\n      dup3\n        /* \"Contracts/BNum.sol\":2700:2713  partialResult */\n      dup3\n        /* \"Contracts/BNum.sol\":2685:2689  bmul */\n      tag_96\n        /* \"Contracts/BNum.sol\":2685:2714  bmul(wholePow, partialResult) */\n      jump\t// in\n    tag_196:\n        /* \"Contracts/BNum.sol\":2678:2714  return bmul(wholePow, partialResult) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":2167:2722  function bpow(uint base, uint exp)\r... */\n    tag_182:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":958:1269  function bmul(uint a, uint b)\r... */\n    tag_96:\n        /* \"Contracts/BNum.sol\":1029:1033  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":1051:1058  uint c0 */\n      dup1\n        /* \"Contracts/BNum.sol\":1065:1066  b */\n      dup3\n        /* \"Contracts/BNum.sol\":1061:1062  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1061:1066  a * b */\n      mul\n        /* \"Contracts/BNum.sol\":1051:1066  uint c0 = a * b */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1090:1091  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":1085:1086  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1085:1091  a == 0 */\n      eq\n        /* \"Contracts/BNum.sol\":1085:1106  a == 0 || c0 / a == b */\n      dup1\n      tag_198\n      jumpi\n      pop\n        /* \"Contracts/BNum.sol\":1105:1106  b */\n      dup3\n        /* \"Contracts/BNum.sol\":1100:1101  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1095:1097  c0 */\n      dup3\n        /* \"Contracts/BNum.sol\":1095:1101  c0 / a */\n      dup2\n      tag_199\n      jumpi\n      invalid\n    tag_199:\n      div\n        /* \"Contracts/BNum.sol\":1095:1106  c0 / a == b */\n      eq\n        /* \"Contracts/BNum.sol\":1085:1106  a == 0 || c0 / a == b */\n    tag_198:\n        /* \"Contracts/BNum.sol\":1077:1127  require(a == 0 || c0 / a == b, \"ERR_MUL_OVERFLOW\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4d554c5f4f564552464c4f5700000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"Contracts/BNum.sol\":1138:1145  uint c1 */\n      0x00\n        /* \"Contracts/BNum.sol\":1161:1162  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":1154:1162  BONE / 2 */\n      dup2\n      tag_201\n      jumpi\n      invalid\n    tag_201:\n      div\n        /* \"Contracts/BNum.sol\":1148:1150  c0 */\n      dup3\n        /* \"Contracts/BNum.sol\":1148:1163  c0 + (BONE / 2) */\n      add\n        /* \"Contracts/BNum.sol\":1138:1163  uint c1 = c0 + (BONE / 2) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1188:1190  c0 */\n      dup2\n        /* \"Contracts/BNum.sol\":1182:1184  c1 */\n      dup2\n        /* \"Contracts/BNum.sol\":1182:1190  c1 >= c0 */\n      lt\n      iszero\n        /* \"Contracts/BNum.sol\":1174:1211  require(c1 >= c0, \"ERR_MUL_OVERFLOW\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f4d554c5f4f564552464c4f5700000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"Contracts/BNum.sol\":1222:1229  uint c2 */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":1232:1234  c1 */\n      dup3\n        /* \"Contracts/BNum.sol\":1232:1241  c1 / BONE */\n      dup2\n      tag_203\n      jumpi\n      invalid\n    tag_203:\n      div\n        /* \"Contracts/BNum.sol\":1222:1241  uint c2 = c1 / BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1259:1261  c2 */\n      dup1\n        /* \"Contracts/BNum.sol\":1252:1261  return c2 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":958:1269  function bmul(uint a, uint b)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":517:719  function bsub(uint a, uint b)\r... */\n    tag_98:\n        /* \"Contracts/BNum.sol\":588:592  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":611:617  uint c */\n      dup1\n        /* \"Contracts/BNum.sol\":619:628  bool flag */\n      0x00\n        /* \"Contracts/BNum.sol\":632:646  bsubSign(a, b) */\n      tag_205\n        /* \"Contracts/BNum.sol\":641:642  a */\n      dup6\n        /* \"Contracts/BNum.sol\":644:645  b */\n      dup6\n        /* \"Contracts/BNum.sol\":632:640  bsubSign */\n      tag_206\n        /* \"Contracts/BNum.sol\":632:646  bsubSign(a, b) */\n      jump\t// in\n    tag_205:\n        /* \"Contracts/BNum.sol\":610:646  (uint c, bool flag) = bsubSign(a, b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/BNum.sol\":666:670  flag */\n      dup1\n        /* \"Contracts/BNum.sol\":665:670  !flag */\n      iszero\n        /* \"Contracts/BNum.sol\":657:692  require(!flag, \"ERR_SUB_UNDERFLOW\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4552525f5355425f554e444552464c4f57000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"Contracts/BNum.sol\":710:711  c */\n      dup2\n        /* \"Contracts/BNum.sol\":703:711  return c */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":517:719  function bsub(uint a, uint b)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":205:321  function bfloor(uint a)\r... */\n    tag_186:\n        /* \"Contracts/BNum.sol\":270:274  uint */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":299:306  btoi(a) */\n      tag_209\n        /* \"Contracts/BNum.sol\":304:305  a */\n      dup4\n        /* \"Contracts/BNum.sol\":299:303  btoi */\n      tag_190\n        /* \"Contracts/BNum.sol\":299:306  btoi(a) */\n      jump\t// in\n    tag_209:\n        /* \"Contracts/BNum.sol\":299:313  btoi(a) * BONE */\n      mul\n        /* \"Contracts/BNum.sol\":292:313  return btoi(a) * BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":205:321  function bfloor(uint a)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":88:197  function btoi(uint a)\r... */\n    tag_190:\n        /* \"Contracts/BNum.sol\":152:156  uint */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":181:182  a */\n      dup3\n        /* \"Contracts/BNum.sol\":181:189  a / BONE */\n      dup2\n      tag_211\n      jumpi\n      invalid\n    tag_211:\n      div\n        /* \"Contracts/BNum.sol\":174:189  return a / BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":88:197  function btoi(uint a)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":1692:2006  function bpowi(uint a, uint n)\r... */\n    tag_191:\n        /* \"Contracts/BNum.sol\":1764:1768  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":1786:1792  uint z */\n      dup1\n        /* \"Contracts/BNum.sol\":1804:1805  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":1799:1800  2 */\n      0x02\n        /* \"Contracts/BNum.sol\":1795:1796  n */\n      dup5\n        /* \"Contracts/BNum.sol\":1795:1800  n % 2 */\n      dup2\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      mod\n        /* \"Contracts/BNum.sol\":1795:1805  n % 2 != 0 */\n      eq\n      iszero\n        /* \"Contracts/BNum.sol\":1795:1816  n % 2 != 0 ? a : BONE */\n      tag_214\n      jumpi\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":1795:1816  n % 2 != 0 ? a : BONE */\n      jump(tag_215)\n    tag_214:\n        /* \"Contracts/BNum.sol\":1808:1809  a */\n      dup4\n        /* \"Contracts/BNum.sol\":1795:1816  n % 2 != 0 ? a : BONE */\n    tag_215:\n        /* \"Contracts/BNum.sol\":1786:1816  uint z = n % 2 != 0 ? a : BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1839:1840  2 */\n      0x02\n        /* \"Contracts/BNum.sol\":1834:1840  n /= 2 */\n      dup4\n      dup2\n      tag_219\n      jumpi\n      invalid\n    tag_219:\n      div\n      swap3\n      pop\n        /* \"Contracts/BNum.sol\":1829:1980  for (n /= 2; n != 0; n /= 2) {\r... */\n    tag_216:\n        /* \"Contracts/BNum.sol\":1847:1848  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":1842:1843  n */\n      dup4\n        /* \"Contracts/BNum.sol\":1842:1848  n != 0 */\n      eq\n        /* \"Contracts/BNum.sol\":1829:1980  for (n /= 2; n != 0; n /= 2) {\r... */\n      tag_217\n      jumpi\n        /* \"Contracts/BNum.sol\":1877:1887  bmul(a, a) */\n      tag_220\n        /* \"Contracts/BNum.sol\":1882:1883  a */\n      dup5\n        /* \"Contracts/BNum.sol\":1885:1886  a */\n      dup6\n        /* \"Contracts/BNum.sol\":1877:1881  bmul */\n      tag_96\n        /* \"Contracts/BNum.sol\":1877:1887  bmul(a, a) */\n      jump\t// in\n    tag_220:\n        /* \"Contracts/BNum.sol\":1873:1887  a = bmul(a, a) */\n      swap4\n      pop\n        /* \"Contracts/BNum.sol\":1917:1918  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":1912:1913  2 */\n      0x02\n        /* \"Contracts/BNum.sol\":1908:1909  n */\n      dup5\n        /* \"Contracts/BNum.sol\":1908:1913  n % 2 */\n      dup2\n      tag_221\n      jumpi\n      invalid\n    tag_221:\n      mod\n        /* \"Contracts/BNum.sol\":1908:1918  n % 2 != 0 */\n      eq\n        /* \"Contracts/BNum.sol\":1904:1969  if (n % 2 != 0) {\r... */\n      tag_222\n      jumpi\n        /* \"Contracts/BNum.sol\":1943:1953  bmul(z, a) */\n      tag_223\n        /* \"Contracts/BNum.sol\":1948:1949  z */\n      dup2\n        /* \"Contracts/BNum.sol\":1951:1952  a */\n      dup6\n        /* \"Contracts/BNum.sol\":1943:1947  bmul */\n      tag_96\n        /* \"Contracts/BNum.sol\":1943:1953  bmul(z, a) */\n      jump\t// in\n    tag_223:\n        /* \"Contracts/BNum.sol\":1939:1953  z = bmul(z, a) */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":1904:1969  if (n % 2 != 0) {\r... */\n    tag_222:\n        /* \"Contracts/BNum.sol\":1855:1856  2 */\n      0x02\n        /* \"Contracts/BNum.sol\":1850:1856  n /= 2 */\n      dup4\n      dup2\n      tag_224\n      jumpi\n      invalid\n    tag_224:\n      div\n      swap3\n      pop\n        /* \"Contracts/BNum.sol\":1829:1980  for (n /= 2; n != 0; n /= 2) {\r... */\n      jump(tag_216)\n    tag_217:\n        /* \"Contracts/BNum.sol\":1997:1998  z */\n      dup1\n        /* \"Contracts/BNum.sol\":1990:1998  return z */\n      swap2\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":1692:2006  function bpowi(uint a, uint n)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":2730:3810  function bpowApprox(uint base, uint exp, uint precision)\r... */\n    tag_195:\n        /* \"Contracts/BNum.sol\":2828:2832  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":2870:2876  uint a */\n      dup1\n        /* \"Contracts/BNum.sol\":2883:2886  exp */\n      dup4\n        /* \"Contracts/BNum.sol\":2870:2886  uint a     = exp */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2898:2904  uint x */\n      0x00\n        /* \"Contracts/BNum.sol\":2906:2915  bool xneg */\n      dup1\n        /* \"Contracts/BNum.sol\":2920:2940  bsubSign(base, BONE) */\n      tag_226\n        /* \"Contracts/BNum.sol\":2929:2933  base */\n      dup8\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":2920:2928  bsubSign */\n      tag_206\n        /* \"Contracts/BNum.sol\":2920:2940  bsubSign(base, BONE) */\n      jump\t// in\n    tag_226:\n        /* \"Contracts/BNum.sol\":2897:2940  (uint x, bool xneg)  = bsubSign(base, BONE) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/BNum.sol\":2951:2960  uint term */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":2951:2967  uint term = BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":2978:2986  uint sum */\n      0x00\n        /* \"Contracts/BNum.sol\":2991:2995  term */\n      dup2\n        /* \"Contracts/BNum.sol\":2978:2995  uint sum   = term */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":3006:3019  bool negative */\n      0x00\n        /* \"Contracts/BNum.sol\":3022:3027  false */\n      dup1\n        /* \"Contracts/BNum.sol\":3006:3027  bool negative = false */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":3276:3282  uint i */\n      0x00\n        /* \"Contracts/BNum.sol\":3285:3286  1 */\n      0x01\n        /* \"Contracts/BNum.sol\":3276:3286  uint i = 1 */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":3271:3780  for (uint i = 1; term >= precision; i++) {\r... */\n    tag_227:\n        /* \"Contracts/BNum.sol\":3296:3305  precision */\n      dup9\n        /* \"Contracts/BNum.sol\":3288:3292  term */\n      dup5\n        /* \"Contracts/BNum.sol\":3288:3305  term >= precision */\n      lt\n        /* \"Contracts/BNum.sol\":3271:3780  for (uint i = 1; term >= precision; i++) {\r... */\n      tag_228\n      jumpi\n        /* \"Contracts/BNum.sol\":3327:3336  uint bigK */\n      0x00\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":3339:3340  i */\n      dup3\n        /* \"Contracts/BNum.sol\":3339:3347  i * BONE */\n      mul\n        /* \"Contracts/BNum.sol\":3327:3347  uint bigK = i * BONE */\n      swap1\n      pop\n        /* \"Contracts/BNum.sol\":3363:3369  uint c */\n      0x00\n        /* \"Contracts/BNum.sol\":3371:3380  bool cneg */\n      dup1\n        /* \"Contracts/BNum.sol\":3384:3413  bsubSign(a, bsub(bigK, BONE)) */\n      tag_230\n        /* \"Contracts/BNum.sol\":3393:3394  a */\n      dup11\n        /* \"Contracts/BNum.sol\":3396:3412  bsub(bigK, BONE) */\n      tag_231\n        /* \"Contracts/BNum.sol\":3401:3405  bigK */\n      dup6\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BNum.sol\":3396:3400  bsub */\n      tag_98\n        /* \"Contracts/BNum.sol\":3396:3412  bsub(bigK, BONE) */\n      jump\t// in\n    tag_231:\n        /* \"Contracts/BNum.sol\":3384:3392  bsubSign */\n      tag_206\n        /* \"Contracts/BNum.sol\":3384:3413  bsubSign(a, bsub(bigK, BONE)) */\n      jump\t// in\n    tag_230:\n        /* \"Contracts/BNum.sol\":3362:3413  (uint c, bool cneg) = bsubSign(a, bsub(bigK, BONE)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/BNum.sol\":3435:3457  bmul(term, bmul(c, x)) */\n      tag_232\n        /* \"Contracts/BNum.sol\":3440:3444  term */\n      dup8\n        /* \"Contracts/BNum.sol\":3446:3456  bmul(c, x) */\n      tag_233\n        /* \"Contracts/BNum.sol\":3451:3452  c */\n      dup5\n        /* \"Contracts/BNum.sol\":3454:3455  x */\n      dup13\n        /* \"Contracts/BNum.sol\":3446:3450  bmul */\n      tag_96\n        /* \"Contracts/BNum.sol\":3446:3456  bmul(c, x) */\n      jump\t// in\n    tag_233:\n        /* \"Contracts/BNum.sol\":3435:3439  bmul */\n      tag_96\n        /* \"Contracts/BNum.sol\":3435:3457  bmul(term, bmul(c, x)) */\n      jump\t// in\n    tag_232:\n        /* \"Contracts/BNum.sol\":3428:3457  term = bmul(term, bmul(c, x)) */\n      swap7\n      pop\n        /* \"Contracts/BNum.sol\":3479:3495  bdiv(term, bigK) */\n      tag_234\n        /* \"Contracts/BNum.sol\":3484:3488  term */\n      dup8\n        /* \"Contracts/BNum.sol\":3490:3494  bigK */\n      dup5\n        /* \"Contracts/BNum.sol\":3479:3483  bdiv */\n      tag_88\n        /* \"Contracts/BNum.sol\":3479:3495  bdiv(term, bigK) */\n      jump\t// in\n    tag_234:\n        /* \"Contracts/BNum.sol\":3472:3495  term = bdiv(term, bigK) */\n      swap7\n      pop\n        /* \"Contracts/BNum.sol\":3522:3523  0 */\n      0x00\n        /* \"Contracts/BNum.sol\":3514:3518  term */\n      dup8\n        /* \"Contracts/BNum.sol\":3514:3523  term == 0 */\n      eq\n        /* \"Contracts/BNum.sol\":3510:3530  if (term == 0) break */\n      iszero\n      tag_235\n      jumpi\n        /* \"Contracts/BNum.sol\":3525:3530  break */\n      pop\n      pop\n      pop\n      jump(tag_228)\n        /* \"Contracts/BNum.sol\":3510:3530  if (term == 0) break */\n    tag_235:\n        /* \"Contracts/BNum.sol\":3551:3555  xneg */\n      dup8\n        /* \"Contracts/BNum.sol\":3547:3577  if (xneg) negative = !negative */\n      iszero\n      tag_236\n      jumpi\n        /* \"Contracts/BNum.sol\":3569:3577  negative */\n      dup5\n        /* \"Contracts/BNum.sol\":3568:3577  !negative */\n      iszero\n        /* \"Contracts/BNum.sol\":3557:3577  negative = !negative */\n      swap5\n      pop\n        /* \"Contracts/BNum.sol\":3547:3577  if (xneg) negative = !negative */\n    tag_236:\n        /* \"Contracts/BNum.sol\":3596:3600  cneg */\n      dup1\n        /* \"Contracts/BNum.sol\":3592:3622  if (cneg) negative = !negative */\n      iszero\n      tag_237\n      jumpi\n        /* \"Contracts/BNum.sol\":3614:3622  negative */\n      dup5\n        /* \"Contracts/BNum.sol\":3613:3622  !negative */\n      iszero\n        /* \"Contracts/BNum.sol\":3602:3622  negative = !negative */\n      swap5\n      pop\n        /* \"Contracts/BNum.sol\":3592:3622  if (cneg) negative = !negative */\n    tag_237:\n        /* \"Contracts/BNum.sol\":3641:3649  negative */\n      dup5\n        /* \"Contracts/BNum.sol\":3637:3769  if (negative) {\r... */\n      iszero\n      tag_238\n      jumpi\n        /* \"Contracts/BNum.sol\":3676:3691  bsub(sum, term) */\n      tag_239\n        /* \"Contracts/BNum.sol\":3681:3684  sum */\n      dup7\n        /* \"Contracts/BNum.sol\":3686:3690  term */\n      dup9\n        /* \"Contracts/BNum.sol\":3676:3680  bsub */\n      tag_98\n        /* \"Contracts/BNum.sol\":3676:3691  bsub(sum, term) */\n      jump\t// in\n    tag_239:\n        /* \"Contracts/BNum.sol\":3670:3691  sum = bsub(sum, term) */\n      swap6\n      pop\n        /* \"Contracts/BNum.sol\":3637:3769  if (negative) {\r... */\n      jump(tag_240)\n    tag_238:\n        /* \"Contracts/BNum.sol\":3738:3753  badd(sum, term) */\n      tag_241\n        /* \"Contracts/BNum.sol\":3743:3746  sum */\n      dup7\n        /* \"Contracts/BNum.sol\":3748:3752  term */\n      dup9\n        /* \"Contracts/BNum.sol\":3738:3742  badd */\n      tag_90\n        /* \"Contracts/BNum.sol\":3738:3753  badd(sum, term) */\n      jump\t// in\n    tag_241:\n        /* \"Contracts/BNum.sol\":3732:3753  sum = badd(sum, term) */\n      swap6\n      pop\n        /* \"Contracts/BNum.sol\":3637:3769  if (negative) {\r... */\n    tag_240:\n        /* \"Contracts/BNum.sol\":3271:3780  for (uint i = 1; term >= precision; i++) {\r... */\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":3307:3310  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":3271:3780  for (uint i = 1; term >= precision; i++) {\r... */\n      jump(tag_227)\n    tag_228:\n      pop\n        /* \"Contracts/BNum.sol\":3799:3802  sum */\n      dup2\n        /* \"Contracts/BNum.sol\":3792:3802  return sum */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/BNum.sol\":2730:3810  function bpowApprox(uint base, uint exp, uint precision)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/BNum.sol\":727:950  function bsubSign(uint a, uint b)\r... */\n    tag_206:\n        /* \"Contracts/BNum.sol\":802:806  uint */\n      0x00\n        /* \"Contracts/BNum.sol\":808:812  bool */\n      dup1\n        /* \"Contracts/BNum.sol\":839:840  b */\n      dup3\n        /* \"Contracts/BNum.sol\":834:835  a */\n      dup5\n        /* \"Contracts/BNum.sol\":834:840  a >= b */\n      lt\n        /* \"Contracts/BNum.sol\":830:943  if (a >= b) {\r... */\n      tag_243\n      jumpi\n        /* \"Contracts/BNum.sol\":869:870  b */\n      dup3\n        /* \"Contracts/BNum.sol\":865:866  a */\n      dup5\n        /* \"Contracts/BNum.sol\":865:870  a - b */\n      sub\n        /* \"Contracts/BNum.sol\":872:877  false */\n      0x00\n        /* \"Contracts/BNum.sol\":857:878  return (a - b, false) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_242)\n        /* \"Contracts/BNum.sol\":830:943  if (a >= b) {\r... */\n    tag_243:\n        /* \"Contracts/BNum.sol\":923:924  a */\n      dup4\n        /* \"Contracts/BNum.sol\":919:920  b */\n      dup4\n        /* \"Contracts/BNum.sol\":919:924  b - a */\n      sub\n        /* \"Contracts/BNum.sol\":926:930  true */\n      0x01\n        /* \"Contracts/BNum.sol\":911:931  return (b - a, true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/BNum.sol\":727:950  function bsubSign(uint a, uint b)\r... */\n    tag_242:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582043ee0b8b16e95ea7f0a68661ee5cb046e237a994bbf27109946e68f020a9a8b564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA221EE49 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xF8D6AED4 EQ PUSH2 0x609 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xA221EE49 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xBA9530A6 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x555 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8656B653 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x8656B653 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x89298012 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x3FF JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x82F652AD EQ PUSH2 0x249 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x6A2 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BF DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6CD DUP8 DUP7 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6DB DUP3 DUP10 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6F1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6FF DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x70D DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71B DUP3 DUP16 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A PUSH2 0x734 PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x1125 JUMP JUMPDEST DUP12 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x757 DUP3 PUSH2 0x752 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP9 POP DUP9 SWAP9 POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x782 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x793 DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A9 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B7 DUP3 DUP7 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP8 PUSH2 0x7D1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7E4 DUP13 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F2 DUP3 DUP15 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x800 DUP3 DUP9 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x80E DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x81C DUP15 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0x83A DUP2 PUSH2 0x835 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP10 POP DUP10 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x85F DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x87E PUSH2 0x878 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x89D DUP7 PUSH2 0x898 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8AB DUP12 DUP4 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8B9 DUP3 DUP14 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8C7 DUP3 DUP8 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D5 DUP3 DUP14 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E1 DUP2 DUP14 PUSH2 0x1125 JUMP JUMPDEST SWAP8 POP DUP8 SWAP8 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x90D JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91E DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x93E DUP6 PUSH2 0x939 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x94C DUP9 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x95A DUP3 DUP11 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x979 DUP3 PUSH2 0x974 PUSH8 0xDE0B6B3A7640000 DUP9 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x987 DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x995 DUP15 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AE PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x1125 JUMP JUMPDEST DUP12 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D1 DUP3 PUSH2 0x9CC PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP9 POP DUP9 SWAP9 POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xA0B JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA45 DUP8 DUP8 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA53 DUP7 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA88 PUSH8 0xDE0B6B3A7640000 PUSH2 0xA83 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH2 0xA94 DUP3 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 POP DUP5 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC2 DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD8 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE4 DUP6 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAFB DUP11 PUSH2 0xAF6 DUP13 DUP6 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB09 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB1F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2B DUP11 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP6 POP DUP6 SWAP6 POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB51 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB99 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAA DUP6 DUP9 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP8 DUP7 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC6 DUP9 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD4 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0xBE8 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFC PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x1125 JUMP JUMPDEST SWAP5 POP PUSH2 0xC11 PUSH2 0xC0B DUP13 DUP4 PUSH2 0xFE3 JUMP JUMPDEST DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP DUP5 SWAP5 POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F5A45524F0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0xCCA JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP5 DUP3 DUP2 PUSH2 0xCC7 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F494E5445524E414C00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F494E5445524E414C00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 PUSH2 0xDCE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4144445F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F42504F575F424153455F544F4F5F4C4F570000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP4 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F42504F575F424153455F544F4F5F4849474800000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF6D DUP4 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF7B DUP5 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF91 DUP7 PUSH2 0xF8C DUP6 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xFA7 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCA DUP8 DUP5 PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xFC4 JUMPI INVALID JUMPDEST DIV PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0xFD6 DUP3 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x1002 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xFFF JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1088 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 PUSH2 0x1116 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1134 DUP6 DUP6 PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F5355425F554E444552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11CB DUP4 PUSH2 0x11D3 JUMP JUMPDEST MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 PUSH2 0x11E6 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0x11FD JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1212 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x1214 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 DUP2 PUSH2 0x1220 JUMPI INVALID JUMPDEST DIV SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x1269 JUMPI PUSH2 0x1236 DUP5 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0x1244 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1257 JUMPI PUSH2 0x1254 DUP2 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP4 DUP2 PUSH2 0x1261 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH2 0x1224 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x128E DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP9 DUP5 LT PUSH2 0x1364 JUMPI PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x12E4 DUP11 PUSH2 0x12DF DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x12FB DUP8 PUSH2 0x12F6 DUP5 DUP13 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP7 POP PUSH2 0x1307 DUP8 DUP5 PUSH2 0xC24 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP8 EQ ISZERO PUSH2 0x131A JUMPI POP POP POP PUSH2 0x1364 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1325 JUMPI DUP5 ISZERO SWAP5 POP JUMPDEST DUP1 ISZERO PUSH2 0x1330 JUMPI DUP5 ISZERO SWAP5 POP JUMPDEST DUP5 ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1340 DUP7 DUP9 PUSH2 0x1125 JUMP JUMPDEST SWAP6 POP PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x1351 DUP7 DUP9 PUSH2 0xDDD JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12B0 JUMP JUMPDEST POP DUP2 SWAP7 POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x138D JUMPI DUP3 DUP5 SUB PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x1397 JUMP JUMPDEST DUP4 DUP4 SUB PUSH1 0x1 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NUMBER 0xee SIGNEXTEND DUP12 AND 0xe9 0x5e 0xa7 CREATE 0xa6 DUP7 PUSH2 0xEE5C 0xb0 CHAINID 0xe2 CALLDATACOPY 0xa9 SWAP5 0xbb CALLCODE PUSH18 0x9946E68F020A9A8B564736F6C634300050C STOP ORIGIN ",
							"sourceMap": "55:14045:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:14045:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA221EE49 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xF8D6AED4 EQ PUSH2 0x609 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0xA221EE49 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xBA9530A6 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x555 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8656B653 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x8656B653 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x89298012 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x3FF JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5C1BBAF7 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x82F652AD EQ PUSH2 0x249 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F3 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x6A2 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BF DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6CD DUP8 DUP7 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6DB DUP3 DUP10 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6F1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6FF DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x70D DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x71B DUP3 DUP16 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73A PUSH2 0x734 PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x1125 JUMP JUMPDEST DUP12 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x757 DUP3 PUSH2 0x752 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP9 POP DUP9 SWAP9 POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x782 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x793 DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A9 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B7 DUP3 DUP7 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7D6 DUP8 PUSH2 0x7D1 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7E4 DUP13 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F2 DUP3 DUP15 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x800 DUP3 DUP9 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x80E DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x81C DUP15 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0x83A DUP2 PUSH2 0x835 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP10 POP DUP10 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x85F DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x87E PUSH2 0x878 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x89D DUP7 PUSH2 0x898 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8AB DUP12 DUP4 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8B9 DUP3 DUP14 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8C7 DUP3 DUP8 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D5 DUP3 DUP14 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E1 DUP2 DUP14 PUSH2 0x1125 JUMP JUMPDEST SWAP8 POP DUP8 SWAP8 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x90D JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x91E DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x93E DUP6 PUSH2 0x939 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x94C DUP9 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x95A DUP3 DUP11 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x979 DUP3 PUSH2 0x974 PUSH8 0xDE0B6B3A7640000 DUP9 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x987 DUP3 DUP15 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x995 DUP15 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AE PUSH8 0xDE0B6B3A7640000 DUP11 PUSH2 0x1125 JUMP JUMPDEST DUP12 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9D1 DUP3 PUSH2 0x9CC PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP9 POP DUP9 SWAP9 POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xA0B JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA45 DUP8 DUP8 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA53 DUP7 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA61 DUP4 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA88 PUSH8 0xDE0B6B3A7640000 PUSH2 0xA83 PUSH8 0xDE0B6B3A7640000 DUP10 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH2 0xA94 DUP3 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 POP DUP5 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC2 DUP8 DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD8 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE4 DUP6 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAFB DUP11 PUSH2 0xAF6 DUP13 DUP6 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB09 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB1F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2B DUP11 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP6 POP DUP6 SWAP6 POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB51 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xB99 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAA DUP6 DUP9 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP8 DUP7 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC6 DUP9 DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBD4 DUP3 DUP6 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0xBE8 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH2 0xBFC PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x1125 JUMP JUMPDEST SWAP5 POP PUSH2 0xC11 PUSH2 0xC0B DUP13 DUP4 PUSH2 0xFE3 JUMP JUMPDEST DUP7 PUSH2 0xC24 JUMP JUMPDEST SWAP5 POP DUP5 SWAP5 POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F5A45524F0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0xCCA JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP5 DUP3 DUP2 PUSH2 0xCC7 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F494E5445524E414C00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0xD48 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4449565F494E5445524E414C00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 PUSH2 0xDCE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4144445F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F42504F575F424153455F544F4F5F4C4F570000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP4 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F42504F575F424153455F544F4F5F4849474800000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF6D DUP4 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF7B DUP5 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF91 DUP7 PUSH2 0xF8C DUP6 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xFA7 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCA DUP8 DUP5 PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xFC4 JUMPI INVALID JUMPDEST DIV PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP PUSH2 0xFD6 DUP3 DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x1002 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xFFF JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1088 JUMPI INVALID JUMPDEST DIV DUP3 ADD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 PUSH2 0x1116 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1134 DUP6 DUP6 PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4552525F5355425F554E444552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11CB DUP4 PUSH2 0x11D3 JUMP JUMPDEST MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP2 PUSH2 0x11E6 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0x11FD JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x1212 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0x1214 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 DUP2 PUSH2 0x1220 JUMPI INVALID JUMPDEST DIV SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x1269 JUMPI PUSH2 0x1236 DUP5 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 PUSH2 0x1244 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x1257 JUMPI PUSH2 0x1254 DUP2 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP4 DUP2 PUSH2 0x1261 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH2 0x1224 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x128E DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP9 DUP5 LT PUSH2 0x1364 JUMPI PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x12E4 DUP11 PUSH2 0x12DF DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x12FB DUP8 PUSH2 0x12F6 DUP5 DUP13 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0xFE3 JUMP JUMPDEST SWAP7 POP PUSH2 0x1307 DUP8 DUP5 PUSH2 0xC24 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP8 EQ ISZERO PUSH2 0x131A JUMPI POP POP POP PUSH2 0x1364 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1325 JUMPI DUP5 ISZERO SWAP5 POP JUMPDEST DUP1 ISZERO PUSH2 0x1330 JUMPI DUP5 ISZERO SWAP5 POP JUMPDEST DUP5 ISZERO PUSH2 0x1347 JUMPI PUSH2 0x1340 DUP7 DUP9 PUSH2 0x1125 JUMP JUMPDEST SWAP6 POP PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x1351 DUP7 DUP9 PUSH2 0xDDD JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x12B0 JUMP JUMPDEST POP DUP2 SWAP7 POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x138D JUMPI DUP3 DUP5 SUB PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x1397 JUMP JUMPDEST DUP4 DUP4 SUB PUSH1 0x1 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NUMBER 0xee SIGNEXTEND DUP12 AND 0xe9 0x5e 0xa7 CREATE 0xa6 DUP7 PUSH2 0xEE5C 0xb0 CHAINID 0xe2 CALLDATACOPY 0xa9 SWAP5 0xbb CALLCODE PUSH18 0x9946E68F020A9A8B564736F6C634300050C STOP ORIGIN ",
							"sourceMap": "55:14045:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:14045:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:50:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;823:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;415:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8114:1193:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8114:1193:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:53:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12808:1285:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12808:1285:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5929:1167;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5929:1167:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:54:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10426:1263:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10426:1263:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:51:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;942:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;163:121:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1011:509:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1011:509:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;196:42:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2538:683:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2538:683:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;307:50:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;91:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4239:672:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4239:672:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:50:1;572:2;132:6;565:9;524:50;:::o;823:54::-;871:6;132;864:13;;;;;;823:54;:::o;415:45::-;132:6;415:45;:::o;8114:1193:2:-;8358:18;8394:21;8418:32;8423:13;8438:11;8418:4;:32::i;:::-;8394:56;;8461:18;8482:31;8487:10;8499:13;8482:4;:31::i;:::-;8461:52;;8524:14;8541:31;8546:13;8561:10;8541:4;:31::i;:::-;8524:48;;8650:8;8661:28;132:6:1;8672:16:2;8661:4;:28::i;:::-;8650:39;;8701:17;8721:20;8726:9;8737:3;8721:4;:20::i;:::-;8701:40;;8752:22;8777:34;8782:12;8796:14;8777:4;:34::i;:::-;8752:59;;8822:26;8851:39;8856:17;8875:14;8851:4;:39::i;:::-;8822:68;;9143:8;9154:43;9159:28;132:6:1;9170:16:2;9159:4;:28::i;:::-;9189:7;9154:4;:43::i;:::-;9143:54;;9224:44;9229:21;9252:15;132:6:1;9263:3:2;9252:4;:15::i;:::-;9224:4;:44::i;:::-;9208:60;;9286:13;9279:20;;;;;;;;;;8114:1193;;;;;;;;:::o;247:53:1:-;295:5;132:6;288:12;;;;;;247:53;:::o;12808:1285:2:-;13055:17;13146:21;13170:33;13175:14;13191:11;13170:4;:33::i;:::-;13146:57;;13286:8;13297:28;132:6:1;13308:16:2;13297:4;:28::i;:::-;13286:39;;13336:8;13347:18;13352:3;13357:7;13347:4;:18::i;:::-;13336:29;;13377:32;13412:37;13417:14;13433:15;132:6:1;13444:3:2;13433:4;:15::i;:::-;13412:4;:37::i;:::-;13377:72;;13462:23;13488:50;13493:15;13510:27;13488:4;:50::i;:::-;13462:76;;13549:18;13570:41;13575:18;13595:15;13570:4;:41::i;:::-;13549:62;;13691:14;13708:37;13713:13;13728:16;13708:4;:37::i;:::-;13691:54;;13756:18;13777:27;13782:9;13793:10;13777:4;:27::i;:::-;13756:48;;13815:29;13847:31;13852:10;13864:13;13847:4;:31::i;:::-;13815:63;;14003:52;14008:24;14034:20;132:6:1;405:1;14034:4:2;:20::i;:::-;14003:4;:52::i;:::-;13988:67;;14073:12;14066:19;;;;;;;;;;;12808:1285;;;;;;;;:::o;5929:1167::-;6173:18;6457:21;6481:32;6486:13;6501:11;6481:4;:32::i;:::-;6457:56;;6524:8;6535:43;6540:28;132:6:1;6551:16:2;6540:4;:28::i;:::-;6570:7;6535:4;:43::i;:::-;6524:54;;6590:26;6619:36;6624:13;6639:15;132:6:1;6650:3:2;6639:4;:15::i;:::-;6619:4;:36::i;:::-;6590:65;;6668:22;6693:43;6698:14;6714:21;6693:4;:43::i;:::-;6668:68;;6747:17;6767:39;6772:17;6791:14;6767:4;:39::i;:::-;6747:59;;6887:14;6904:36;6909:12;6923:16;6904:4;:36::i;:::-;6887:53;;6951:18;6972:27;6977:9;6988:10;6972:4;:27::i;:::-;6951:48;;7026:31;7031:13;7046:10;7026:4;:31::i;:::-;7010:47;;7075:13;7068:20;;;;;;;;;5929:1167;;;;;;;;:::o;581:54:1:-;629:6;132;622:13;;;;;;581:54;:::o;10426:1263:2:-;10671:19;10708:21;10732:33;10737:14;10753:11;10732:4;:33::i;:::-;10708:57;;10873:29;10905:40;10910:12;10924:20;132:6:1;405:1;10924:4:2;:20::i;:::-;10905:4;:40::i;:::-;10873:72;;10956:18;10977:42;10982:10;10994:24;10977:4;:42::i;:::-;10956:63;;11030:14;11047:31;11052:13;11067:10;11047:4;:31::i;:::-;11030:48;;11151:18;11172:45;11177:9;11188:28;132:6:1;11199:16:2;11188:4;:28::i;:::-;11172:4;:45::i;:::-;11151:66;;11228:23;11254:36;11259:13;11274:15;11254:4;:36::i;:::-;11228:62;;11303:32;11338:41;11343:15;11360:18;11338:4;:41::i;:::-;11303:76;;11516:8;11527:43;11532:28;132:6:1;11543:16:2;11532:4;:28::i;:::-;11562:7;11527:4;:43::i;:::-;11516:54;;11599:50;11604:27;11633:15;132:6:1;11644:3:2;11633:4;:15::i;:::-;11599:4;:50::i;:::-;11582:67;;11667:14;11660:21;;;;;;;;;;10426:1263;;;;;;;;:::o;644:51:1:-;692:3;132:6;685:10;644:51;:::o;942:59::-;996:5;991:1;132:6;984:8;;;;;;983:18;942:59;:::o;163:121:0:-;224:7;255:17;248:24;;163:121;:::o;1011:509:2:-;1223:14;1255:10;1268:35;1273:14;1289:13;1268:4;:35::i;:::-;1255:48;;1314:10;1327:37;1332:15;1349:14;1327:4;:37::i;:::-;1314:50;;1375:10;1388:18;1393:5;1400;1388:4;:18::i;:::-;1375:31;;1417:10;1430:31;132:6:1;1441:19:2;132:6:1;1452:7:2;1441:4;:19::i;:::-;1430:4;:31::i;:::-;1417:44;;1493:18;1498:5;1505;1493:4;:18::i;:::-;1481:30;;;1472:40;;;;;;1011:509;;;;;;;:::o;196:42:1:-;237:1;196:42;:::o;147:::-;188:1;147:42;:::o;704:46::-;745:5;704:46;:::o;2538:683:2:-;2780:19;2817:16;2836:35;2841:13;2856:14;2836:4;:35::i;:::-;2817:54;;2882:15;2900:19;132:6:1;2911:7:2;2900:4;:19::i;:::-;2882:37;;2943:31;2948:13;2963:10;2943:4;:31::i;:::-;2930:44;;2985:6;2994:54;2999:14;3015:32;3020:14;3036:10;3015:4;:32::i;:::-;2994:4;:54::i;:::-;2985:63;;3059:8;3070:20;3075:1;3078:11;3070:4;:20::i;:::-;3059:31;;3101:8;3112:15;132:6:1;3123:3:2;3112:4;:15::i;:::-;3101:26;;3155;3160:15;3177:3;3155:4;:26::i;:::-;3138:43;;3199:14;3192:21;;;;;;;2538:683;;;;;;;;:::o;307:50:1:-;355:2;132:6;348:9;;;;;;307:50;:::o;757:59::-;811:5;132:6;799:1;:8;798:18;757:59;:::o;91:47::-;132:6;91:47;:::o;364:42::-;405:1;364:42;:::o;467:50::-;515:2;132:6;508:9;467:50;:::o;886:49::-;934:1;132:6;927:8;;;;;;886:49;:::o;4239:672:2:-;4482:18;4518:16;4537:35;4542:14;4558:13;4537:4;:35::i;:::-;4518:54;;4583:9;4595:37;4600:15;4617:14;4595:4;:37::i;:::-;4583:49;;4643:6;4652:27;4657:15;4674:4;4652;:27::i;:::-;4643:36;;4690:8;4701:20;4706:1;4709:11;4701:4;:20::i;:::-;4690:31;;4738:15;4743:3;132:6:1;4738:4:2;:15::i;:::-;4732:21;;4780:19;132:6:1;4791:7:2;4780:4;:19::i;:::-;4764:35;;4826:46;4831:25;4836:14;4852:3;4831:4;:25::i;:::-;4858:13;4826:4;:46::i;:::-;4810:62;;4890:13;4883:20;;;;;;4239:672;;;;;;;;:::o;1277:387:3:-;1348:4;1383:1;1378;:6;;1370:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:7;132:6:1;1422:1:3;:8;1412:18;;1454:1;1449;:6;:24;;;;132:6:1;1464:1:3;1459:2;:6;;;;;;:14;1449:24;1441:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:7;1542:1;1538;:5;;;;;;1532:2;:12;1522:22;;1569:2;1563;:8;;1555:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:7;1635:1;1630:2;:6;;;;;;1620:16;;1654:2;1647:9;;;;;1277:387;;;;:::o;329:180::-;400:4;422:6;435:1;431;:5;422:14;;460:1;455;:6;;447:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:1;493:8;;;329:180;;;;:::o;2167:555::-;2243:4;745:5:1;2273:4:3;:21;;2265:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:5:1;132:6;799:1;:8;798:18;2339:4:3;:21;;2331:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:10;2414:11;2421:3;2414:6;:11::i;:::-;2400:25;;2439:11;2453:16;2458:3;2463:5;2453:4;:16::i;:::-;2439:30;;2482:13;2498:24;2504:4;2510:11;2515:5;2510:4;:11::i;:::-;2498:5;:24::i;:::-;2482:40;;2549:1;2539:6;:11;2535:59;;;2574:8;2567:15;;;;;;;2535:59;2606:18;2627:40;2638:4;2644:6;871::1;132;864:13;;;;;;2627:10:3;:40::i;:::-;2606:61;;2685:29;2690:8;2700:13;2685:4;:29::i;:::-;2678:36;;;;;;2167:555;;;;;:::o;958:311::-;1029:4;1051:7;1065:1;1061;:5;1051:15;;1090:1;1085;:6;:21;;;;1105:1;1100;1095:2;:6;;;;;;:11;1085:21;1077:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:7;1161:1;132:6:1;1154:8:3;;;;;;1148:2;:15;1138:25;;1188:2;1182;:8;;1174:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:7;132:6:1;1232:2:3;:9;;;;;;1222:19;;1259:2;1252:9;;;;;958:311;;;;:::o;517:202::-;588:4;611:6;619:9;632:14;641:1;644;632:8;:14::i;:::-;610:36;;;;666:4;665:5;657:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:1;703:8;;;;517:202;;;;:::o;205:116::-;270:4;132:6:1;299:7:3;304:1;299:4;:7::i;:::-;:14;292:21;;205:116;;;:::o;88:109::-;152:4;132:6:1;181:1:3;:8;;;;;;174:15;;88:109;;;:::o;1692:314::-;1764:4;1786:6;1804:1;1799;1795;:5;;;;;;:10;;:21;;132:6:1;1795:21:3;;;1808:1;1795:21;1786:30;;1839:1;1834:6;;;;;;;;;1829:151;1847:1;1842;:6;1829:151;;1877:10;1882:1;1885;1877:4;:10::i;:::-;1873:14;;1917:1;1912;1908;:5;;;;;;:10;1904:65;;1943:10;1948:1;1951;1943:4;:10::i;:::-;1939:14;;1904:65;1855:1;1850:6;;;;;;;;;1829:151;;;1997:1;1990:8;;;1692:314;;;;:::o;2730:1080::-;2828:4;2870:6;2883:3;2870:16;;2898:6;2906:9;2920:20;2929:4;132:6:1;2920:8:3;:20::i;:::-;2897:43;;;;2951:9;132:6:1;2951:16:3;;2978:8;2991:4;2978:17;;3006:13;3022:5;3006:21;;3276:6;3285:1;3276:10;;3271:509;3296:9;3288:4;:17;3271:509;;3327:9;132:6:1;3339:1:3;:8;3327:20;;3363:6;3371:9;3384:29;3393:1;3396:16;3401:4;132:6:1;3396:4:3;:16::i;:::-;3384:8;:29::i;:::-;3362:51;;;;3435:22;3440:4;3446:10;3451:1;3454;3446:4;:10::i;:::-;3435:4;:22::i;:::-;3428:29;;3479:16;3484:4;3490;3479;:16::i;:::-;3472:23;;3522:1;3514:4;:9;3510:20;;;3525:5;;;;;3510:20;3551:4;3547:30;;;3569:8;3568:9;3557:20;;3547:30;3596:4;3592:30;;;3614:8;3613:9;3602:20;;3592:30;3641:8;3637:132;;;3676:15;3681:3;3686:4;3676;:15::i;:::-;3670:21;;3637:132;;;3738:15;3743:3;3748:4;3738;:15::i;:::-;3732:21;;3637:132;3271:509;;;3307:3;;;;;;;3271:509;;;;3799:3;3792:10;;;;;;;;2730:1080;;;;;:::o;727:223::-;802:4;808;839:1;834;:6;830:113;;869:1;865;:5;872;857:21;;;;;;830:113;923:1;919;:5;926:4;911:20;;;;727:223;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1015000",
								"executionCost": "1054",
								"totalCost": "1016054"
							},
							"external": {
								"BONE()": "249",
								"BPOW_PRECISION()": "276",
								"EXIT_FEE()": "271",
								"INIT_POOL_SUPPLY()": "302",
								"MAX_BOUND_TOKENS()": "250",
								"MAX_BPOW_BASE()": "241",
								"MAX_FEE()": "363",
								"MAX_IN_RATIO()": "340",
								"MAX_OUT_RATIO()": "347",
								"MAX_TOTAL_WEIGHT()": "237",
								"MAX_WEIGHT()": "301",
								"MIN_BALANCE()": "275",
								"MIN_BOUND_TOKENS()": "272",
								"MIN_BPOW_BASE()": "294",
								"MIN_FEE()": "342",
								"MIN_WEIGHT()": "273",
								"calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
								"calcSpotPrice(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"getColor()": "346"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "MSTORE"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "POP"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "DUP1"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "CODECOPY"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 14100,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582043ee0b8b16e95ea7f0a68661ee5cb046e237a994bbf27109946e68f020a9a8b564736f6c634300050c0032",
									".code": [
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "LT"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "SHR"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "A221EE49"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "C36596A6"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "C6580D12"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "E4A28A52"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "EC093021"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "F8D6AED4"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "A221EE49"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "B7B800A4"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "BA019DAB"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "BA9530A6"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "BC063E1A"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "8656B653"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "8656B653"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "89298012"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "9381CD2B"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "992E2A92"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "9A3BBE4"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "189D00CA"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "218B5382"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "5C1BBAF7"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "76C7A3C7"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "82F652AD"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 14100,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "JUMPDEST"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "JUMPDEST"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "MLOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP3"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "MSTORE"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "ADD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "MLOAD"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "DUP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SUB"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "RETURN"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP3"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SUB"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "RETURN"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "JUMPDEST"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "JUMPDEST"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "MLOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP3"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "MSTORE"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "ADD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "MLOAD"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "DUP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP2"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SUB"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP1"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "RETURN"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "JUMPDEST"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "JUMPDEST"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "MLOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP3"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "MSTORE"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "ADD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "MLOAD"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "DUP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SUB"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "JUMPDEST"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "JUMPDEST"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP3"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "MSTORE"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "ADD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "MLOAD"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "DUP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP2"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SUB"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP1"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "RETURN"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SUB"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "JUMPDEST"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "JUMPDEST"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "MLOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP3"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "MSTORE"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "MLOAD"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP2"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SUB"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "RETURN"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "RETURN"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "RETURN"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "JUMPDEST"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "JUMPDEST"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "MLOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP3"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "MSTORE"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "ADD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "MLOAD"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP2"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SUB"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP3"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MSTORE"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "RETURN"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "RETURN"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP3"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SUB"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "RETURN"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "JUMPDEST"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "JUMPDEST"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "MLOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP3"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "MSTORE"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "MLOAD"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "DUP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP2"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SUB"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "MUL"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "JUMPDEST"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8415,
											"name": "DUP1"
										},
										{
											"begin": 8418,
											"end": 8450,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 8423,
											"end": 8436,
											"name": "DUP8"
										},
										{
											"begin": 8438,
											"end": 8449,
											"name": "DUP7"
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 8418,
											"end": 8450,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8450,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 8418,
											"end": 8450,
											"name": "JUMPDEST"
										},
										{
											"begin": 8394,
											"end": 8450,
											"name": "SWAP1"
										},
										{
											"begin": 8394,
											"end": 8450,
											"name": "POP"
										},
										{
											"begin": 8461,
											"end": 8479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8513,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8487,
											"end": 8497,
											"name": "DUP8"
										},
										{
											"begin": 8499,
											"end": 8512,
											"name": "DUP7"
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 8482,
											"end": 8513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8482,
											"end": 8513,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8482,
											"end": 8513,
											"name": "JUMPDEST"
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "SWAP1"
										},
										{
											"begin": 8461,
											"end": 8513,
											"name": "POP"
										},
										{
											"begin": 8524,
											"end": 8538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8572,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8546,
											"end": 8559,
											"name": "DUP3"
										},
										{
											"begin": 8561,
											"end": 8571,
											"name": "DUP10"
										},
										{
											"begin": 8541,
											"end": 8545,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 8541,
											"end": 8572,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8541,
											"end": 8572,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8541,
											"end": 8572,
											"name": "JUMPDEST"
										},
										{
											"begin": 8524,
											"end": 8572,
											"name": "SWAP1"
										},
										{
											"begin": 8524,
											"end": 8572,
											"name": "POP"
										},
										{
											"begin": 8650,
											"end": 8658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8689,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8672,
											"end": 8688,
											"name": "DUP6"
										},
										{
											"begin": 8661,
											"end": 8665,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 8661,
											"end": 8689,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8661,
											"end": 8689,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8661,
											"end": 8689,
											"name": "JUMPDEST"
										},
										{
											"begin": 8650,
											"end": 8689,
											"name": "SWAP1"
										},
										{
											"begin": 8650,
											"end": 8689,
											"name": "POP"
										},
										{
											"begin": 8701,
											"end": 8718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8741,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8726,
											"end": 8735,
											"name": "DUP4"
										},
										{
											"begin": 8737,
											"end": 8740,
											"name": "DUP4"
										},
										{
											"begin": 8721,
											"end": 8725,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8721,
											"end": 8741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8721,
											"end": 8741,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8721,
											"end": 8741,
											"name": "JUMPDEST"
										},
										{
											"begin": 8701,
											"end": 8741,
											"name": "SWAP1"
										},
										{
											"begin": 8701,
											"end": 8741,
											"name": "POP"
										},
										{
											"begin": 8752,
											"end": 8774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8811,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8782,
											"end": 8794,
											"name": "DUP3"
										},
										{
											"begin": 8796,
											"end": 8810,
											"name": "DUP15"
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8777,
											"end": 8811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8811,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 8777,
											"end": 8811,
											"name": "JUMPDEST"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "SWAP1"
										},
										{
											"begin": 8752,
											"end": 8811,
											"name": "POP"
										},
										{
											"begin": 8822,
											"end": 8848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8890,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8856,
											"end": 8873,
											"name": "DUP3"
										},
										{
											"begin": 8875,
											"end": 8889,
											"name": "DUP16"
										},
										{
											"begin": 8851,
											"end": 8855,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 8851,
											"end": 8890,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8851,
											"end": 8890,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 8851,
											"end": 8890,
											"name": "JUMPDEST"
										},
										{
											"begin": 8822,
											"end": 8890,
											"name": "SWAP1"
										},
										{
											"begin": 8822,
											"end": 8890,
											"name": "POP"
										},
										{
											"begin": 9143,
											"end": 9151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9197,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9159,
											"end": 9187,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "DUP11"
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9159,
											"end": 9187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9159,
											"end": 9187,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9159,
											"end": 9187,
											"name": "JUMPDEST"
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP12"
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 9154,
											"end": 9197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9154,
											"end": 9197,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9154,
											"end": 9197,
											"name": "JUMPDEST"
										},
										{
											"begin": 9143,
											"end": 9197,
											"name": "SWAP1"
										},
										{
											"begin": 9143,
											"end": 9197,
											"name": "POP"
										},
										{
											"begin": 9224,
											"end": 9268,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 9229,
											"end": 9250,
											"name": "DUP3"
										},
										{
											"begin": 9252,
											"end": 9267,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9263,
											"end": 9266,
											"name": "DUP5"
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9252,
											"end": 9267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9252,
											"end": 9267,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 9252,
											"end": 9267,
											"name": "JUMPDEST"
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 9224,
											"end": 9268,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9224,
											"end": 9268,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 9224,
											"end": 9268,
											"name": "JUMPDEST"
										},
										{
											"begin": 9208,
											"end": 9268,
											"name": "SWAP9"
										},
										{
											"begin": 9208,
											"end": 9268,
											"name": "POP"
										},
										{
											"begin": 9286,
											"end": 9299,
											"name": "DUP9"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "SWAP9"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 9279,
											"end": 9299,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP7"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "SWAP6"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "POP"
										},
										{
											"begin": 8114,
											"end": 9307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPI"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "INVALID"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DIV"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "JUMPDEST"
										},
										{
											"begin": 13055,
											"end": 13072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13167,
											"name": "DUP1"
										},
										{
											"begin": 13170,
											"end": 13203,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13175,
											"end": 13189,
											"name": "DUP8"
										},
										{
											"begin": 13191,
											"end": 13202,
											"name": "DUP7"
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13170,
											"end": 13203,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13170,
											"end": 13203,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 13170,
											"end": 13203,
											"name": "JUMPDEST"
										},
										{
											"begin": 13146,
											"end": 13203,
											"name": "SWAP1"
										},
										{
											"begin": 13146,
											"end": 13203,
											"name": "POP"
										},
										{
											"begin": 13286,
											"end": 13294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13297,
											"end": 13325,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 13308,
											"end": 13324,
											"name": "DUP4"
										},
										{
											"begin": 13297,
											"end": 13301,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13297,
											"end": 13325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13297,
											"end": 13325,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 13297,
											"end": 13325,
											"name": "JUMPDEST"
										},
										{
											"begin": 13286,
											"end": 13325,
											"name": "SWAP1"
										},
										{
											"begin": 13286,
											"end": 13325,
											"name": "POP"
										},
										{
											"begin": 13336,
											"end": 13344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 13352,
											"end": 13355,
											"name": "DUP3"
										},
										{
											"begin": 13357,
											"end": 13364,
											"name": "DUP7"
										},
										{
											"begin": 13347,
											"end": 13351,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "JUMPDEST"
										},
										{
											"begin": 13336,
											"end": 13365,
											"name": "SWAP1"
										},
										{
											"begin": 13336,
											"end": 13365,
											"name": "POP"
										},
										{
											"begin": 13377,
											"end": 13409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13412,
											"end": 13449,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13417,
											"end": 13431,
											"name": "DUP8"
										},
										{
											"begin": 13433,
											"end": 13448,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 13444,
											"end": 13447,
											"name": "DUP6"
										},
										{
											"begin": 13433,
											"end": 13437,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13433,
											"end": 13448,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13433,
											"end": 13448,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 13433,
											"end": 13448,
											"name": "JUMPDEST"
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13412,
											"end": 13449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13412,
											"end": 13449,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13412,
											"end": 13449,
											"name": "JUMPDEST"
										},
										{
											"begin": 13377,
											"end": 13449,
											"name": "SWAP1"
										},
										{
											"begin": 13377,
											"end": 13449,
											"name": "POP"
										},
										{
											"begin": 13462,
											"end": 13485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13538,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13493,
											"end": 13508,
											"name": "DUP13"
										},
										{
											"begin": 13510,
											"end": 13537,
											"name": "DUP4"
										},
										{
											"begin": 13488,
											"end": 13492,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13488,
											"end": 13538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13488,
											"end": 13538,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13488,
											"end": 13538,
											"name": "JUMPDEST"
										},
										{
											"begin": 13462,
											"end": 13538,
											"name": "SWAP1"
										},
										{
											"begin": 13462,
											"end": 13538,
											"name": "POP"
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 13575,
											"end": 13593,
											"name": "DUP3"
										},
										{
											"begin": 13595,
											"end": 13610,
											"name": "DUP15"
										},
										{
											"begin": 13570,
											"end": 13574,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "JUMPDEST"
										},
										{
											"begin": 13549,
											"end": 13611,
											"name": "SWAP1"
										},
										{
											"begin": 13549,
											"end": 13611,
											"name": "POP"
										},
										{
											"begin": 13691,
											"end": 13705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13708,
											"end": 13745,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "DUP3"
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "DUP9"
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13708,
											"end": 13745,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13708,
											"end": 13745,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 13708,
											"end": 13745,
											"name": "JUMPDEST"
										},
										{
											"begin": 13691,
											"end": 13745,
											"name": "SWAP1"
										},
										{
											"begin": 13691,
											"end": 13745,
											"name": "POP"
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13804,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 13782,
											"end": 13791,
											"name": "DUP3"
										},
										{
											"begin": 13793,
											"end": 13803,
											"name": "DUP15"
										},
										{
											"begin": 13777,
											"end": 13781,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13777,
											"end": 13804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13804,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 13777,
											"end": 13804,
											"name": "JUMPDEST"
										},
										{
											"begin": 13756,
											"end": 13804,
											"name": "SWAP1"
										},
										{
											"begin": 13756,
											"end": 13804,
											"name": "POP"
										},
										{
											"begin": 13815,
											"end": 13844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13847,
											"end": 13878,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13852,
											"end": 13862,
											"name": "DUP15"
										},
										{
											"begin": 13864,
											"end": 13877,
											"name": "DUP4"
										},
										{
											"begin": 13847,
											"end": 13851,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13847,
											"end": 13878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13847,
											"end": 13878,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13847,
											"end": 13878,
											"name": "JUMPDEST"
										},
										{
											"begin": 13815,
											"end": 13878,
											"name": "SWAP1"
										},
										{
											"begin": 13815,
											"end": 13878,
											"name": "POP"
										},
										{
											"begin": 14003,
											"end": 14055,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14008,
											"end": 14032,
											"name": "DUP2"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "JUMPDEST"
										},
										{
											"begin": 14003,
											"end": 14007,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14003,
											"end": 14055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14003,
											"end": 14055,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14003,
											"end": 14055,
											"name": "JUMPDEST"
										},
										{
											"begin": 13988,
											"end": 14055,
											"name": "SWAP10"
										},
										{
											"begin": 13988,
											"end": 14055,
											"name": "POP"
										},
										{
											"begin": 14073,
											"end": 14085,
											"name": "DUP10"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "SWAP10"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 14066,
											"end": 14085,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP7"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "SWAP6"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "POP"
										},
										{
											"begin": 12808,
											"end": 14093,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "JUMPDEST"
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6478,
											"name": "DUP1"
										},
										{
											"begin": 6481,
											"end": 6513,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6486,
											"end": 6499,
											"name": "DUP8"
										},
										{
											"begin": 6501,
											"end": 6512,
											"name": "DUP7"
										},
										{
											"begin": 6481,
											"end": 6485,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6481,
											"end": 6513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6481,
											"end": 6513,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6481,
											"end": 6513,
											"name": "JUMPDEST"
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "SWAP1"
										},
										{
											"begin": 6457,
											"end": 6513,
											"name": "POP"
										},
										{
											"begin": 6524,
											"end": 6532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6578,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 6540,
											"end": 6568,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "DUP5"
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 6540,
											"end": 6568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6540,
											"end": 6568,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6540,
											"end": 6568,
											"name": "JUMPDEST"
										},
										{
											"begin": 6570,
											"end": 6577,
											"name": "DUP6"
										},
										{
											"begin": 6535,
											"end": 6539,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6535,
											"end": 6578,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6535,
											"end": 6578,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 6535,
											"end": 6578,
											"name": "JUMPDEST"
										},
										{
											"begin": 6524,
											"end": 6578,
											"name": "SWAP1"
										},
										{
											"begin": 6524,
											"end": 6578,
											"name": "POP"
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6619,
											"end": 6655,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "DUP7"
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6650,
											"end": 6653,
											"name": "DUP6"
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 6639,
											"end": 6654,
											"name": "JUMPDEST"
										},
										{
											"begin": 6619,
											"end": 6623,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6619,
											"end": 6655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6619,
											"end": 6655,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 6619,
											"end": 6655,
											"name": "JUMPDEST"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "SWAP1"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "POP"
										},
										{
											"begin": 6668,
											"end": 6690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6736,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "DUP12"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP4"
										},
										{
											"begin": 6693,
											"end": 6697,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 6693,
											"end": 6736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6693,
											"end": 6736,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 6693,
											"end": 6736,
											"name": "JUMPDEST"
										},
										{
											"begin": 6668,
											"end": 6736,
											"name": "SWAP1"
										},
										{
											"begin": 6668,
											"end": 6736,
											"name": "POP"
										},
										{
											"begin": 6747,
											"end": 6764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6806,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 6772,
											"end": 6789,
											"name": "DUP3"
										},
										{
											"begin": 6791,
											"end": 6805,
											"name": "DUP14"
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6767,
											"end": 6806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6767,
											"end": 6806,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 6767,
											"end": 6806,
											"name": "JUMPDEST"
										},
										{
											"begin": 6747,
											"end": 6806,
											"name": "SWAP1"
										},
										{
											"begin": 6747,
											"end": 6806,
											"name": "POP"
										},
										{
											"begin": 6887,
											"end": 6901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6940,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "DUP3"
										},
										{
											"begin": 6923,
											"end": 6939,
											"name": "DUP8"
										},
										{
											"begin": 6904,
											"end": 6908,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 6904,
											"end": 6940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6904,
											"end": 6940,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 6904,
											"end": 6940,
											"name": "JUMPDEST"
										},
										{
											"begin": 6887,
											"end": 6940,
											"name": "SWAP1"
										},
										{
											"begin": 6887,
											"end": 6940,
											"name": "POP"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 6977,
											"end": 6986,
											"name": "DUP3"
										},
										{
											"begin": 6988,
											"end": 6998,
											"name": "DUP14"
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "JUMPDEST"
										},
										{
											"begin": 6951,
											"end": 6999,
											"name": "SWAP1"
										},
										{
											"begin": 6951,
											"end": 6999,
											"name": "POP"
										},
										{
											"begin": 7026,
											"end": 7057,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 7031,
											"end": 7044,
											"name": "DUP2"
										},
										{
											"begin": 7046,
											"end": 7056,
											"name": "DUP14"
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 7026,
											"end": 7057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7057,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 7026,
											"end": 7057,
											"name": "JUMPDEST"
										},
										{
											"begin": 7010,
											"end": 7057,
											"name": "SWAP8"
										},
										{
											"begin": 7010,
											"end": 7057,
											"name": "POP"
										},
										{
											"begin": 7075,
											"end": 7088,
											"name": "DUP8"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "SWAP8"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 7068,
											"end": 7088,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP7"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "SWAP6"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 5929,
											"end": 7096,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"value": "E8D4A51000"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "INVALID"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "JUMPDEST"
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10708,
											"end": 10729,
											"name": "DUP1"
										},
										{
											"begin": 10732,
											"end": 10765,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 10737,
											"end": 10751,
											"name": "DUP8"
										},
										{
											"begin": 10753,
											"end": 10764,
											"name": "DUP7"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 10732,
											"end": 10765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10765,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 10732,
											"end": 10765,
											"name": "JUMPDEST"
										},
										{
											"begin": 10708,
											"end": 10765,
											"name": "SWAP1"
										},
										{
											"begin": 10708,
											"end": 10765,
											"name": "POP"
										},
										{
											"begin": 10873,
											"end": 10902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 10910,
											"end": 10922,
											"name": "DUP6"
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10924,
											"end": 10928,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "JUMPDEST"
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 10905,
											"end": 10945,
											"name": "JUMPDEST"
										},
										{
											"begin": 10873,
											"end": 10945,
											"name": "SWAP1"
										},
										{
											"begin": 10873,
											"end": 10945,
											"name": "POP"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 11019,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "DUP9"
										},
										{
											"begin": 10994,
											"end": 11018,
											"name": "DUP4"
										},
										{
											"begin": 10977,
											"end": 10981,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10977,
											"end": 11019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10977,
											"end": 11019,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 10977,
											"end": 11019,
											"name": "JUMPDEST"
										},
										{
											"begin": 10956,
											"end": 11019,
											"name": "SWAP1"
										},
										{
											"begin": 10956,
											"end": 11019,
											"name": "POP"
										},
										{
											"begin": 11030,
											"end": 11044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11047,
											"end": 11078,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 11052,
											"end": 11065,
											"name": "DUP3"
										},
										{
											"begin": 11067,
											"end": 11077,
											"name": "DUP11"
										},
										{
											"begin": 11047,
											"end": 11051,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11047,
											"end": 11078,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11047,
											"end": 11078,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 11047,
											"end": 11078,
											"name": "JUMPDEST"
										},
										{
											"begin": 11030,
											"end": 11078,
											"name": "SWAP1"
										},
										{
											"begin": 11030,
											"end": 11078,
											"name": "POP"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11217,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 11177,
											"end": 11186,
											"name": "DUP3"
										},
										{
											"begin": 11188,
											"end": 11216,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11199,
											"end": 11215,
											"name": "DUP9"
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11188,
											"end": 11216,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11188,
											"end": 11216,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 11188,
											"end": 11216,
											"name": "JUMPDEST"
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 11172,
											"end": 11217,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11172,
											"end": 11217,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 11172,
											"end": 11217,
											"name": "JUMPDEST"
										},
										{
											"begin": 11151,
											"end": 11217,
											"name": "SWAP1"
										},
										{
											"begin": 11151,
											"end": 11217,
											"name": "POP"
										},
										{
											"begin": 11228,
											"end": 11251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11290,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11259,
											"end": 11272,
											"name": "DUP3"
										},
										{
											"begin": 11274,
											"end": 11289,
											"name": "DUP15"
										},
										{
											"begin": 11254,
											"end": 11258,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 11254,
											"end": 11290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11254,
											"end": 11290,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 11254,
											"end": 11290,
											"name": "JUMPDEST"
										},
										{
											"begin": 11228,
											"end": 11290,
											"name": "SWAP1"
										},
										{
											"begin": 11228,
											"end": 11290,
											"name": "POP"
										},
										{
											"begin": 11303,
											"end": 11335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11379,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 11343,
											"end": 11358,
											"name": "DUP15"
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "DUP4"
										},
										{
											"begin": 11338,
											"end": 11342,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 11338,
											"end": 11379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11379,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 11338,
											"end": 11379,
											"name": "JUMPDEST"
										},
										{
											"begin": 11303,
											"end": 11379,
											"name": "SWAP1"
										},
										{
											"begin": 11303,
											"end": 11379,
											"name": "POP"
										},
										{
											"begin": 11516,
											"end": 11524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11527,
											"end": 11570,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 11532,
											"end": 11560,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11543,
											"end": 11559,
											"name": "DUP11"
										},
										{
											"begin": 11532,
											"end": 11536,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 11532,
											"end": 11560,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11532,
											"end": 11560,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 11532,
											"end": 11560,
											"name": "JUMPDEST"
										},
										{
											"begin": 11562,
											"end": 11569,
											"name": "DUP12"
										},
										{
											"begin": 11527,
											"end": 11531,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 11527,
											"end": 11570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11527,
											"end": 11570,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 11527,
											"end": 11570,
											"name": "JUMPDEST"
										},
										{
											"begin": 11516,
											"end": 11570,
											"name": "SWAP1"
										},
										{
											"begin": 11516,
											"end": 11570,
											"name": "POP"
										},
										{
											"begin": 11599,
											"end": 11649,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11604,
											"end": 11631,
											"name": "DUP3"
										},
										{
											"begin": 11633,
											"end": 11648,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11644,
											"end": 11647,
											"name": "DUP5"
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 11633,
											"end": 11648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11633,
											"end": 11648,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 11633,
											"end": 11648,
											"name": "JUMPDEST"
										},
										{
											"begin": 11599,
											"end": 11603,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 11599,
											"end": 11649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11599,
											"end": 11649,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 11599,
											"end": 11649,
											"name": "JUMPDEST"
										},
										{
											"begin": 11582,
											"end": 11649,
											"name": "SWAP9"
										},
										{
											"begin": 11582,
											"end": 11649,
											"name": "POP"
										},
										{
											"begin": 11667,
											"end": 11681,
											"name": "DUP9"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "SWAP9"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 11660,
											"end": 11681,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP7"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "SWAP6"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "POP"
										},
										{
											"begin": 10426,
											"end": 11689,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "INVALID"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DIV"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1265,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 1303,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 1273,
											"end": 1287,
											"name": "DUP8"
										},
										{
											"begin": 1289,
											"end": 1302,
											"name": "DUP8"
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1268,
											"end": 1303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1303,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 1268,
											"end": 1303,
											"name": "JUMPDEST"
										},
										{
											"begin": 1255,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1255,
											"end": 1303,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1364,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "DUP7"
										},
										{
											"begin": 1349,
											"end": 1363,
											"name": "DUP7"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1327,
											"end": 1364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1327,
											"end": 1364,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 1327,
											"end": 1364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1364,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1364,
											"name": "POP"
										},
										{
											"begin": 1375,
											"end": 1385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "DUP4"
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "DUP4"
										},
										{
											"begin": 1388,
											"end": 1392,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "JUMPDEST"
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1406,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1461,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1441,
											"end": 1460,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP10"
										},
										{
											"begin": 1441,
											"end": 1445,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1441,
											"end": 1460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1460,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 1441,
											"end": 1460,
											"name": "JUMPDEST"
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1430,
											"end": 1461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1430,
											"end": 1461,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 1430,
											"end": 1461,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1417,
											"end": 1461,
											"name": "POP"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP3"
										},
										{
											"begin": 1505,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "JUMPDEST"
										},
										{
											"begin": 1481,
											"end": 1511,
											"name": "SWAP5"
										},
										{
											"begin": 1481,
											"end": 1511,
											"name": "POP"
										},
										{
											"begin": 1481,
											"end": 1511,
											"name": "DUP5"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "SWAP5"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1512,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP6"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "SWAP5"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1520,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 188,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "JUMPDEST"
										},
										{
											"begin": 2780,
											"end": 2799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2833,
											"name": "DUP1"
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 2841,
											"end": 2854,
											"name": "DUP8"
										},
										{
											"begin": 2856,
											"end": 2870,
											"name": "DUP7"
										},
										{
											"begin": 2836,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "JUMPDEST"
										},
										{
											"begin": 2817,
											"end": 2871,
											"name": "SWAP1"
										},
										{
											"begin": 2817,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2919,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP6"
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2900,
											"end": 2919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2900,
											"end": 2919,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 2900,
											"end": 2919,
											"name": "JUMPDEST"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "SWAP1"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "POP"
										},
										{
											"begin": 2943,
											"end": 2974,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "DUP6"
										},
										{
											"begin": 2963,
											"end": 2973,
											"name": "DUP3"
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2943,
											"end": 2974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2943,
											"end": 2974,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 2943,
											"end": 2974,
											"name": "JUMPDEST"
										},
										{
											"begin": 2930,
											"end": 2974,
											"name": "SWAP1"
										},
										{
											"begin": 2930,
											"end": 2974,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3048,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2999,
											"end": 3013,
											"name": "DUP11"
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 3020,
											"end": 3034,
											"name": "DUP13"
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "DUP6"
										},
										{
											"begin": 3015,
											"end": 3019,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "JUMPDEST"
										},
										{
											"begin": 2994,
											"end": 2998,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2994,
											"end": 3048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3048,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2994,
											"end": 3048,
											"name": "JUMPDEST"
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3048,
											"name": "POP"
										},
										{
											"begin": 3059,
											"end": 3067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "DUP3"
										},
										{
											"begin": 3078,
											"end": 3089,
											"name": "DUP6"
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "JUMPDEST"
										},
										{
											"begin": 3059,
											"end": 3090,
											"name": "SWAP1"
										},
										{
											"begin": 3059,
											"end": 3090,
											"name": "POP"
										},
										{
											"begin": 3101,
											"end": 3109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP4"
										},
										{
											"begin": 3112,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "JUMPDEST"
										},
										{
											"begin": 3101,
											"end": 3127,
											"name": "SWAP1"
										},
										{
											"begin": 3101,
											"end": 3127,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3160,
											"end": 3175,
											"name": "DUP11"
										},
										{
											"begin": 3177,
											"end": 3180,
											"name": "DUP3"
										},
										{
											"begin": 3155,
											"end": 3159,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3155,
											"end": 3181,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 3155,
											"end": 3181,
											"name": "JUMPDEST"
										},
										{
											"begin": 3138,
											"end": 3181,
											"name": "SWAP6"
										},
										{
											"begin": 3138,
											"end": 3181,
											"name": "POP"
										},
										{
											"begin": 3199,
											"end": 3213,
											"name": "DUP6"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "SWAP6"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 3192,
											"end": 3213,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP7"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "SWAP6"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "POP"
										},
										{
											"begin": 2538,
											"end": 3221,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "MUL"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "INVALID"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "JUMPDEST"
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4537,
											"end": 4572,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 4542,
											"end": 4556,
											"name": "DUP6"
										},
										{
											"begin": 4558,
											"end": 4571,
											"name": "DUP9"
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4537,
											"end": 4572,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4537,
											"end": 4572,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 4537,
											"end": 4572,
											"name": "JUMPDEST"
										},
										{
											"begin": 4518,
											"end": 4572,
											"name": "SWAP1"
										},
										{
											"begin": 4518,
											"end": 4572,
											"name": "POP"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4632,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 4600,
											"end": 4615,
											"name": "DUP8"
										},
										{
											"begin": 4617,
											"end": 4631,
											"name": "DUP7"
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 4595,
											"end": 4632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4632,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 4595,
											"end": 4632,
											"name": "JUMPDEST"
										},
										{
											"begin": 4583,
											"end": 4632,
											"name": "SWAP1"
										},
										{
											"begin": 4583,
											"end": 4632,
											"name": "POP"
										},
										{
											"begin": 4643,
											"end": 4649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4679,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 4657,
											"end": 4672,
											"name": "DUP9"
										},
										{
											"begin": 4674,
											"end": 4678,
											"name": "DUP4"
										},
										{
											"begin": 4652,
											"end": 4656,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4652,
											"end": 4679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4652,
											"end": 4679,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4652,
											"end": 4679,
											"name": "JUMPDEST"
										},
										{
											"begin": 4643,
											"end": 4679,
											"name": "SWAP1"
										},
										{
											"begin": 4643,
											"end": 4679,
											"name": "POP"
										},
										{
											"begin": 4690,
											"end": 4698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 4706,
											"end": 4707,
											"name": "DUP3"
										},
										{
											"begin": 4709,
											"end": 4720,
											"name": "DUP6"
										},
										{
											"begin": 4701,
											"end": 4705,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 4701,
											"end": 4721,
											"name": "JUMPDEST"
										},
										{
											"begin": 4690,
											"end": 4721,
											"name": "SWAP1"
										},
										{
											"begin": 4690,
											"end": 4721,
											"name": "POP"
										},
										{
											"begin": 4738,
											"end": 4753,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "DUP2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 4738,
											"end": 4753,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4738,
											"end": 4753,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 4738,
											"end": 4753,
											"name": "JUMPDEST"
										},
										{
											"begin": 4732,
											"end": 4753,
											"name": "SWAP1"
										},
										{
											"begin": 4732,
											"end": 4753,
											"name": "POP"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "DUP8"
										},
										{
											"begin": 4780,
											"end": 4784,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST"
										},
										{
											"begin": 4764,
											"end": 4799,
											"name": "SWAP5"
										},
										{
											"begin": 4764,
											"end": 4799,
											"name": "POP"
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4836,
											"end": 4850,
											"name": "DUP13"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP4"
										},
										{
											"begin": 4831,
											"end": 4835,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "DUP7"
										},
										{
											"begin": 4826,
											"end": 4830,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "JUMPDEST"
										},
										{
											"begin": 4810,
											"end": 4872,
											"name": "SWAP5"
										},
										{
											"begin": 4810,
											"end": 4872,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4903,
											"name": "DUP5"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "SWAP5"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP7"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "SWAP6"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4239,
											"end": 4911,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "JUMPDEST"
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP1"
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "DUP3"
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "EQ"
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "ISZERO"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "JUMPI"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "SUB"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "4552525F4449565F5A45524F0000000000000000000000000000000000000000"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "SWAP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "SWAP2"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "SUB"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "REVERT"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1412,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1430,
											"name": "MUL"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "SWAP1"
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "DUP5"
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "EQ"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "JUMPI"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP5"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "DUP3"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP2"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "JUMPI"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "INVALID"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "JUMPDEST"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DIV"
										},
										{
											"begin": 1459,
											"end": 1473,
											"name": "EQ"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 1449,
											"end": 1473,
											"name": "JUMPDEST"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "JUMPI"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "4552525F4449565F494E5445524E414C00000000000000000000000000000000"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "SWAP1"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "REVERT"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 1441,
											"end": 1494,
											"name": "JUMPDEST"
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP5"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "DUP2"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "JUMPI"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "INVALID"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "JUMPDEST"
										},
										{
											"begin": 1538,
											"end": 1543,
											"name": "DIV"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1532,
											"end": 1544,
											"name": "ADD"
										},
										{
											"begin": 1522,
											"end": 1544,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1544,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1565,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1571,
											"name": "LT"
										},
										{
											"begin": 1563,
											"end": 1571,
											"name": "ISZERO"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "JUMPI"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "4552525F4449565F494E5445524E414C00000000000000000000000000000000"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "REVERT"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1555,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP5"
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "DUP3"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "DUP2"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "JUMPI"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "INVALID"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 1636,
											"name": "DIV"
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "SWAP1"
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "DUP1"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "SWAP4"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "SWAP3"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "SWAP2"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1277,
											"end": 1664,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "ADD"
										},
										{
											"begin": 422,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 422,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP4"
										},
										{
											"begin": 455,
											"end": 456,
											"name": "DUP2"
										},
										{
											"begin": 455,
											"end": 461,
											"name": "LT"
										},
										{
											"begin": 455,
											"end": 461,
											"name": "ISZERO"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "JUMPI"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "4552525F4144445F4F564552464C4F5700000000000000000000000000000000"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "REVERT"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 447,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 500,
											"end": 501,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 501,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 501,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "SWAP3"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "JUMPDEST"
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "DUP4"
										},
										{
											"begin": 2273,
											"end": 2294,
											"name": "LT"
										},
										{
											"begin": 2273,
											"end": 2294,
											"name": "ISZERO"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "JUMPI"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MLOAD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP1"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP1"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP3"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "SUB"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP3"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP1"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "4552525F42504F575F424153455F544F4F5F4C4F570000000000000000000000"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "SWAP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "MLOAD"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "DUP1"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "SWAP2"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "SUB"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "REVERT"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 2265,
											"end": 2320,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "DUP4"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "GT"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP3"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP3"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "4552525F42504F575F424153455F544F4F5F4849474800000000000000000000"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "ADD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "POP"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "REVERT"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 2331,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 2400,
											"end": 2410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 2421,
											"end": 2424,
											"name": "DUP4"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "JUMPDEST"
										},
										{
											"begin": 2400,
											"end": 2425,
											"name": "SWAP1"
										},
										{
											"begin": 2400,
											"end": 2425,
											"name": "POP"
										},
										{
											"begin": 2439,
											"end": 2450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2458,
											"end": 2461,
											"name": "DUP5"
										},
										{
											"begin": 2463,
											"end": 2468,
											"name": "DUP4"
										},
										{
											"begin": 2453,
											"end": 2457,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "JUMPDEST"
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "SWAP1"
										},
										{
											"begin": 2439,
											"end": 2469,
											"name": "POP"
										},
										{
											"begin": 2482,
											"end": 2495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2522,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 2504,
											"end": 2508,
											"name": "DUP7"
										},
										{
											"begin": 2510,
											"end": 2521,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "DUP6"
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 2510,
											"end": 2521,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2521,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 2510,
											"end": 2521,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 2498,
											"end": 2522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2522,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 2498,
											"end": 2522,
											"name": "JUMPDEST"
										},
										{
											"begin": 2482,
											"end": 2522,
											"name": "SWAP1"
										},
										{
											"begin": 2482,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP3"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "EQ"
										},
										{
											"begin": 2535,
											"end": 2594,
											"name": "ISZERO"
										},
										{
											"begin": 2535,
											"end": 2594,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2535,
											"end": 2594,
											"name": "JUMPI"
										},
										{
											"begin": 2574,
											"end": 2582,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "SWAP4"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "JUMP"
										},
										{
											"begin": 2535,
											"end": 2594,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 2535,
											"end": 2594,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2667,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "DUP8"
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "DUP5"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 2627,
											"end": 2637,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 2627,
											"end": 2667,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2667,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 2627,
											"end": 2667,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 2667,
											"name": "SWAP1"
										},
										{
											"begin": 2606,
											"end": 2667,
											"name": "POP"
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 2690,
											"end": 2698,
											"name": "DUP3"
										},
										{
											"begin": 2700,
											"end": 2713,
											"name": "DUP3"
										},
										{
											"begin": 2685,
											"end": 2689,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "JUMPDEST"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "SWAP5"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2678,
											"end": 2714,
											"name": "POP"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "JUMPDEST"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "SWAP3"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "SWAP2"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2167,
											"end": 2722,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "JUMPDEST"
										},
										{
											"begin": 1029,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP3"
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "DUP5"
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "MUL"
										},
										{
											"begin": 1051,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP5"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "EQ"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "DUP1"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPI"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "POP"
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "DUP3"
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "DUP5"
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "INVALID"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DIV"
										},
										{
											"begin": 1095,
											"end": 1106,
											"name": "EQ"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "JUMPI"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MLOAD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP3"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "SUB"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP3"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "MLOAD"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "SUB"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "REVERT"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "JUMPDEST"
										},
										{
											"begin": 1138,
											"end": 1145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "DUP2"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "JUMPI"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "INVALID"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1162,
											"name": "DIV"
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "DUP3"
										},
										{
											"begin": 1148,
											"end": 1163,
											"name": "ADD"
										},
										{
											"begin": 1138,
											"end": 1163,
											"name": "SWAP1"
										},
										{
											"begin": 1138,
											"end": 1163,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "LT"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "ISZERO"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "JUMPI"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MLOAD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SUB"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "4552525F4D554C5F4F564552464C4F5700000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MLOAD"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SUB"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "REVERT"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "JUMPDEST"
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "DUP3"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "JUMPI"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "INVALID"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "JUMPDEST"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DIV"
										},
										{
											"begin": 1222,
											"end": 1241,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1241,
											"name": "POP"
										},
										{
											"begin": 1259,
											"end": 1261,
											"name": "DUP1"
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "SWAP4"
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "POP"
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "POP"
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "POP"
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "SWAP3"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "SWAP2"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 958,
											"end": 1269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 588,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 619,
											"end": 628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 632,
											"end": 646,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "DUP6"
										},
										{
											"begin": 644,
											"end": 645,
											"name": "DUP6"
										},
										{
											"begin": 632,
											"end": 640,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 632,
											"end": 646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 646,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 632,
											"end": 646,
											"name": "JUMPDEST"
										},
										{
											"begin": 610,
											"end": 646,
											"name": "SWAP2"
										},
										{
											"begin": 610,
											"end": 646,
											"name": "POP"
										},
										{
											"begin": 610,
											"end": 646,
											"name": "SWAP2"
										},
										{
											"begin": 610,
											"end": 646,
											"name": "POP"
										},
										{
											"begin": 666,
											"end": 670,
											"name": "DUP1"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "ISZERO"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "JUMPI"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MLOAD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "SUB"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "4552525F5355425F554E444552464C4F57000000000000000000000000000000"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "SWAP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "MLOAD"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "SWAP2"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "SUB"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "REVERT"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 657,
											"end": 692,
											"name": "JUMPDEST"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP2"
										},
										{
											"begin": 703,
											"end": 711,
											"name": "SWAP3"
										},
										{
											"begin": 703,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "SWAP3"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "SWAP2"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "POP"
										},
										{
											"begin": 517,
											"end": 719,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 299,
											"end": 306,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP4"
										},
										{
											"begin": 299,
											"end": 303,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 299,
											"end": 306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 299,
											"end": 306,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 299,
											"end": 306,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 313,
											"name": "MUL"
										},
										{
											"begin": 292,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 292,
											"end": 313,
											"name": "POP"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 205,
											"end": 321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "JUMPDEST"
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 181,
											"end": 182,
											"name": "DUP3"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "INVALID"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 181,
											"end": 189,
											"name": "DIV"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "SWAP2"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 197,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1764,
											"end": 1768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "DUP1"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP5"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "JUMPI"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "INVALID"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "JUMPDEST"
										},
										{
											"begin": 1795,
											"end": 1800,
											"name": "MOD"
										},
										{
											"begin": 1795,
											"end": 1805,
											"name": "EQ"
										},
										{
											"begin": 1795,
											"end": 1805,
											"name": "ISZERO"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "JUMP"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "DUP4"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP4"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "JUMPI"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "INVALID"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "JUMPDEST"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DIV"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "SWAP3"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "POP"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "JUMPDEST"
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "DUP4"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "EQ"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "JUMPI"
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "DUP5"
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "DUP6"
										},
										{
											"begin": 1877,
											"end": 1881,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 1877,
											"end": 1887,
											"name": "JUMPDEST"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "SWAP4"
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "POP"
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "DUP5"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP2"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "JUMPI"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "INVALID"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "JUMPDEST"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "MOD"
										},
										{
											"begin": 1908,
											"end": 1918,
											"name": "EQ"
										},
										{
											"begin": 1904,
											"end": 1969,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 1904,
											"end": 1969,
											"name": "JUMPI"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "DUP2"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP6"
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "JUMPDEST"
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1969,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 1904,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP4"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "JUMPI"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "INVALID"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DIV"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "SWAP3"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "POP"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "JUMP"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 1829,
											"end": 1980,
											"name": "JUMPDEST"
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "DUP1"
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "SWAP2"
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "POP"
										},
										{
											"begin": 1990,
											"end": 1998,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "SWAP3"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "SWAP2"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2006,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "JUMPDEST"
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "DUP1"
										},
										{
											"begin": 2883,
											"end": 2886,
											"name": "DUP4"
										},
										{
											"begin": 2870,
											"end": 2886,
											"name": "SWAP1"
										},
										{
											"begin": 2870,
											"end": 2886,
											"name": "POP"
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2915,
											"name": "DUP1"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "DUP8"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2920,
											"end": 2928,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "JUMPDEST"
										},
										{
											"begin": 2897,
											"end": 2940,
											"name": "SWAP2"
										},
										{
											"begin": 2897,
											"end": 2940,
											"name": "POP"
										},
										{
											"begin": 2897,
											"end": 2940,
											"name": "SWAP2"
										},
										{
											"begin": 2897,
											"end": 2940,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2967,
											"name": "POP"
										},
										{
											"begin": 2978,
											"end": 2986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 2995,
											"name": "DUP2"
										},
										{
											"begin": 2978,
											"end": 2995,
											"name": "SWAP1"
										},
										{
											"begin": 2978,
											"end": 2995,
											"name": "POP"
										},
										{
											"begin": 3006,
											"end": 3019,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3027,
											"name": "DUP1"
										},
										{
											"begin": 3006,
											"end": 3027,
											"name": "SWAP1"
										},
										{
											"begin": 3006,
											"end": 3027,
											"name": "POP"
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3276,
											"end": 3286,
											"name": "SWAP1"
										},
										{
											"begin": 3276,
											"end": 3286,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3305,
											"name": "DUP9"
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "DUP5"
										},
										{
											"begin": 3288,
											"end": 3305,
											"name": "LT"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "JUMPI"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3347,
											"name": "MUL"
										},
										{
											"begin": 3327,
											"end": 3347,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3347,
											"name": "POP"
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "DUP11"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 3401,
											"end": 3405,
											"name": "DUP6"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "JUMPDEST"
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "JUMPDEST"
										},
										{
											"begin": 3362,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3362,
											"end": 3413,
											"name": "POP"
										},
										{
											"begin": 3362,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3362,
											"end": 3413,
											"name": "POP"
										},
										{
											"begin": 3435,
											"end": 3457,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP8"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP5"
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "DUP13"
										},
										{
											"begin": 3446,
											"end": 3450,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "JUMPDEST"
										},
										{
											"begin": 3435,
											"end": 3439,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3435,
											"end": 3457,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3435,
											"end": 3457,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 3435,
											"end": 3457,
											"name": "JUMPDEST"
										},
										{
											"begin": 3428,
											"end": 3457,
											"name": "SWAP7"
										},
										{
											"begin": 3428,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "DUP8"
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "DUP5"
										},
										{
											"begin": 3479,
											"end": 3483,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "JUMPDEST"
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "SWAP7"
										},
										{
											"begin": 3472,
											"end": 3495,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3523,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "DUP8"
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "EQ"
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "ISZERO"
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "JUMPI"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "POP"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "JUMP"
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "JUMPDEST"
										},
										{
											"begin": 3551,
											"end": 3555,
											"name": "DUP8"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "ISZERO"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "JUMPI"
										},
										{
											"begin": 3569,
											"end": 3577,
											"name": "DUP5"
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "ISZERO"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "SWAP5"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "POP"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "JUMPDEST"
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "DUP1"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "ISZERO"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPI"
										},
										{
											"begin": 3614,
											"end": 3622,
											"name": "DUP5"
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "ISZERO"
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "SWAP5"
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "POP"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 3592,
											"end": 3622,
											"name": "JUMPDEST"
										},
										{
											"begin": 3641,
											"end": 3649,
											"name": "DUP5"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "ISZERO"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "JUMPI"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 3681,
											"end": 3684,
											"name": "DUP7"
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "DUP9"
										},
										{
											"begin": 3676,
											"end": 3680,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "JUMPDEST"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP6"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "POP"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "JUMP"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "JUMPDEST"
										},
										{
											"begin": 3738,
											"end": 3753,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP7"
										},
										{
											"begin": 3748,
											"end": 3752,
											"name": "DUP9"
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3738,
											"end": 3753,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 3753,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 3738,
											"end": 3753,
											"name": "JUMPDEST"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "SWAP6"
										},
										{
											"begin": 3732,
											"end": 3753,
											"name": "POP"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 3637,
											"end": 3769,
											"name": "JUMPDEST"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "POP"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "DUP1"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "DUP1"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "ADD"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "SWAP2"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "JUMP"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "JUMPDEST"
										},
										{
											"begin": 3271,
											"end": 3780,
											"name": "POP"
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP2"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "SWAP7"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "SWAP4"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "SWAP3"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "POP"
										},
										{
											"begin": 2730,
											"end": 3810,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 808,
											"end": 812,
											"name": "DUP1"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP3"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "DUP5"
										},
										{
											"begin": 834,
											"end": 840,
											"name": "LT"
										},
										{
											"begin": 830,
											"end": 943,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 830,
											"end": 943,
											"name": "JUMPI"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "DUP3"
										},
										{
											"begin": 865,
											"end": 866,
											"name": "DUP5"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SWAP2"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "JUMP"
										},
										{
											"begin": 830,
											"end": 943,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 830,
											"end": 943,
											"name": "JUMPDEST"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP4"
										},
										{
											"begin": 919,
											"end": 920,
											"name": "DUP4"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SUB"
										},
										{
											"begin": 926,
											"end": 930,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 911,
											"end": 931,
											"name": "SWAP2"
										},
										{
											"begin": 911,
											"end": 931,
											"name": "POP"
										},
										{
											"begin": 911,
											"end": 931,
											"name": "SWAP2"
										},
										{
											"begin": 911,
											"end": 931,
											"name": "POP"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "JUMPDEST"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "SWAP3"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "SWAP3"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 727,
											"end": 950,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONE()": "c36596a6",
							"BPOW_PRECISION()": "189d00ca",
							"EXIT_FEE()": "c6580d12",
							"INIT_POOL_SUPPLY()": "9381cd2b",
							"MAX_BOUND_TOKENS()": "b0e0d136",
							"MAX_BPOW_BASE()": "bc694ea2",
							"MAX_FEE()": "bc063e1a",
							"MAX_IN_RATIO()": "ec093021",
							"MAX_OUT_RATIO()": "992e2a92",
							"MAX_TOTAL_WEIGHT()": "09a3bbe4",
							"MAX_WEIGHT()": "e4a28a52",
							"MIN_BALANCE()": "867378c5",
							"MIN_BOUND_TOKENS()": "b7b800a4",
							"MIN_BPOW_BASE()": "ba019dab",
							"MIN_FEE()": "76c7a3c7",
							"MIN_WEIGHT()": "218b5382",
							"calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)": "f8d6aed4",
							"calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)": "ba9530a6",
							"calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)": "82f652ad",
							"calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)": "8656b653",
							"calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)": "5c1bbaf7",
							"calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)": "89298012",
							"calcSpotPrice(uint256,uint256,uint256,uint256,uint256)": "a221ee49",
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcInGivenOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcOutGivenIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolInGivenSingleOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcPoolOutGivenSingleIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleInGivenPoolOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSingleOutGivenPoolIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountOut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalanceIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalanceOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenWeightOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"calcSpotPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"spotPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcInGivenOut                                                                            // // aI = tokenAmountIn                                                                        // // bO = tokenBalanceOut               /  /     bO      \\\\    (wO / wI)      \\\\                 // // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                // // aO = tokenAmountOut    aI =        \\\\  \\\\ ( bO - aO ) /                   /                 // // wI = tokenWeightIn           --------------------------------------------                 // // wO = tokenWeightOut                          ( 1 - sF )                                   // // sF = swapFee                                                                              //*********************************************************************************************\"},\"calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcOutGivenIn                                                                            // // aO = tokenAmountOut                                                                       // // bO = tokenBalanceOut                                                                      // // bI = tokenBalanceIn              /      /            bI             \\\\    (wI / wO) \\\\      // // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     // // wI = tokenWeightIn               \\\\      \\\\ ( bI + ( aI * ( 1 - sF )) /              /      // // wO = tokenWeightOut                                                                       // // sF = swapFee                                                                              //*********************************************************************************************\"},\"calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcPoolInGivenSingleOut                                                                  // // pAi = poolAmountIn               // /               tAo             \\\\\\\\     / wO \\\\     \\\\   // // bO = tokenBalanceOut            // | bO - -------------------------- |\\\\   | ---- |     \\\\  // // tAo = tokenAmountOut      pS - ||   \\\\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\\\ tW /  * pS | // // ps = poolSupply                 \\\\\\\\ -----------------------------------/                /  // // wO = tokenWeightOut  pAi =       \\\\\\\\               bO                 /                /   // // tW = totalWeight           -------------------------------------------------------------  // // sF = swapFee                                        ( 1 - eF )                            // // eF = exitFee                                                                              //*********************************************************************************************\"},\"calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcPoolOutGivenSingleIn                                                                  // // pAo = poolAmountOut         /                                              \\\\              // // tAi = tokenAmountIn        ///      /     //    wI \\\\      \\\\\\\\       \\\\     wI \\\\             // // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\\\    --  \\\\            // // tW = totalWeight     pAo=||  \\\\      \\\\     \\\\\\\\    tW /      //         | ^ tW   | * pS - pS // // tBi = tokenBalanceIn      \\\\\\\\  ------------------------------------- /        /            // // pS = poolSupply            \\\\\\\\                    tBi               /        /             // // sF = swapFee                \\\\                                              /              //*********************************************************************************************\"},\"calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcSingleInGivenPoolOut                                                                  // // tAi = tokenAmountIn              //(pS + pAo)\\\\     /    1    \\\\\\\\                           // // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                // // pAo = poolAmountOut              \\\\\\\\    pS    /     \\\\(wI / tW)//                           // // bI = balanceIn          tAi =  --------------------------------------------               // // wI = weightIn                              /      wI  \\\\                                   // // tW = totalWeight                          |  1 - ----  |  * sF                            // // sF = swapFee                               \\\\      tW  /                                   //*********************************************************************************************\"},\"calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcSingleOutGivenPoolIn                                                                  // // tAo = tokenAmountOut            /      /                                             \\\\\\\\   // // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\\\     /    1    \\\\      \\\\\\\\  // // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || // // ps = poolSupply                \\\\      \\\\\\\\          pS           /     \\\\(wO / tW)/      //  // // wI = tokenWeightIn      tAo =   \\\\      \\\\                                             //   // // tW = totalWeight                    /     /      wO \\\\       \\\\                             // // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            // // eF = exitFee                        \\\\     \\\\      tW /       /                             //*********************************************************************************************\"},\"calcSpotPrice(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"******************************************************************************************** // calcSpotPrice                                                                             // // sP = spotPrice                                                                            // // bI = tokenBalanceIn                ( bI / wI )         1                                  // // bO = tokenBalanceOut         sP =  -----------  *  ----------                             // // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             // // wO = tokenWeightOut                                                                       // // sF = swapFee                                                                              //*********************************************************************************************\"}}}},\"settings\":{\"compilationTarget\":{\"Contracts/BMath.sol\":\"BMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]},\"Contracts/BConst.sol\":{\"keccak256\":\"0xc09e1b6426216e6fc1246376f2796ff3e176036bc7639e584cf365aedebd0083\",\"urls\":[\"bzz-raw://d813f692c759a83e62614caf0bde6ce976dd1614af0197739ff4183621284b32\",\"dweb:/ipfs/QmdMoeU8gQ1RYk5XDhbpatzFKbqUHNSkCt5KyhBQVWHhcv\"]},\"Contracts/BMath.sol\":{\"keccak256\":\"0xffd7e298d71685e08ca0c69947e48daa6bc306b851e94e45571867cacc9ea85b\",\"urls\":[\"bzz-raw://49767d333e98a0b2175c1ea3c5ceee319c8a4a66b8425e67744e1886b63fd792\",\"dweb:/ipfs/QmfZC81Lo8iyTrBnfM48qGZaihNJKmHteX2mjj6V5seEbd\"]},\"Contracts/BNum.sol\":{\"keccak256\":\"0xb202d7e4df259922cd473b65caaf4ed622715b4cdaed24d532968eaa5c3c7f46\",\"urls\":[\"bzz-raw://46ec88582356707ec82a6655746e6619b4f1076f77a6a4167f0c2ea9a7dd59ce\",\"dweb:/ipfs/Qmb3hkBCfx5RQaoTHDhGAuhRoZDh1JVWVKhbg85dnBVC4z\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"calcInGivenOut(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcInGivenOut                                                                            // // aI = tokenAmountIn                                                                        // // bO = tokenBalanceOut               /  /     bO      \\    (wO / wI)      \\                 // // bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                // // aO = tokenAmountOut    aI =        \\  \\ ( bO - aO ) /                   /                 // // wI = tokenWeightIn           --------------------------------------------                 // // wO = tokenWeightOut                          ( 1 - sF )                                   // // sF = swapFee                                                                              //*********************************************************************************************"
							},
							"calcOutGivenIn(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcOutGivenIn                                                                            // // aO = tokenAmountOut                                                                       // // bO = tokenBalanceOut                                                                      // // bI = tokenBalanceIn              /      /            bI             \\    (wI / wO) \\      // // aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     // // wI = tokenWeightIn               \\      \\ ( bI + ( aI * ( 1 - sF )) /              /      // // wO = tokenWeightOut                                                                       // // sF = swapFee                                                                              //*********************************************************************************************"
							},
							"calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcPoolInGivenSingleOut                                                                  // // pAi = poolAmountIn               // /               tAo             \\\\     / wO \\     \\   // // bO = tokenBalanceOut            // | bO - -------------------------- |\\   | ---- |     \\  // // tAo = tokenAmountOut      pS - ||   \\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\ tW /  * pS | // // ps = poolSupply                 \\\\ -----------------------------------/                /  // // wO = tokenWeightOut  pAi =       \\\\               bO                 /                /   // // tW = totalWeight           -------------------------------------------------------------  // // sF = swapFee                                        ( 1 - eF )                            // // eF = exitFee                                                                              //*********************************************************************************************"
							},
							"calcPoolOutGivenSingleIn(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcPoolOutGivenSingleIn                                                                  // // pAo = poolAmountOut         /                                              \\              // // tAi = tokenAmountIn        ///      /     //    wI \\      \\\\       \\     wI \\             // // wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\    --  \\            // // tW = totalWeight     pAo=||  \\      \\     \\\\    tW /      //         | ^ tW   | * pS - pS // // tBi = tokenBalanceIn      \\\\  ------------------------------------- /        /            // // pS = poolSupply            \\\\                    tBi               /        /             // // sF = swapFee                \\                                              /              //*********************************************************************************************"
							},
							"calcSingleInGivenPoolOut(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcSingleInGivenPoolOut                                                                  // // tAi = tokenAmountIn              //(pS + pAo)\\     /    1    \\\\                           // // pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                // // pAo = poolAmountOut              \\\\    pS    /     \\(wI / tW)//                           // // bI = balanceIn          tAi =  --------------------------------------------               // // wI = weightIn                              /      wI  \\                                   // // tW = totalWeight                          |  1 - ----  |  * sF                            // // sF = swapFee                               \\      tW  /                                   //*********************************************************************************************"
							},
							"calcSingleOutGivenPoolIn(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcSingleOutGivenPoolIn                                                                  // // tAo = tokenAmountOut            /      /                                             \\\\   // // bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\     /    1    \\      \\\\  // // pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || // // ps = poolSupply                \\      \\\\          pS           /     \\(wO / tW)/      //  // // wI = tokenWeightIn      tAo =   \\      \\                                             //   // // tW = totalWeight                    /     /      wO \\       \\                             // // sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            // // eF = exitFee                        \\     \\      tW /       /                             //*********************************************************************************************"
							},
							"calcSpotPrice(uint256,uint256,uint256,uint256,uint256)": {
								"notice": "******************************************************************************************** // calcSpotPrice                                                                             // // sP = spotPrice                                                                            // // bI = tokenBalanceIn                ( bI / wI )         1                                  // // bO = tokenBalanceOut         sP =  -----------  *  ----------                             // // wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             // // wO = tokenWeightOut                                                                       // // sF = swapFee                                                                              //*********************************************************************************************"
							}
						}
					}
				}
			},
			"Contracts/BNum.sol": {
				"BNum": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "BONE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BPOW_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EXIT_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_POOL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_IN_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_OUT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_TOTAL_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BOUND_TOKENS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_BPOW_BASE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MIN_WEIGHT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getColor",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Contracts/BNum.sol\":55:3815  contract BNum is BConst {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Contracts/BNum.sol\":55:3815  contract BNum is BConst {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/BNum.sol\":55:3815  contract BNum is BConst {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Contracts/BNum.sol\":55:3815  contract BNum is BConst {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0e0d136\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbc694ea2\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbc694ea2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc36596a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6580d12\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4a28a52\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec093021\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xb0e0d136\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb7b800a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xba019dab\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x867378c5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x867378c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9381cd2b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x992e2a92\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a86139b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x09a3bbe4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x189d00ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x218b5382\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x76c7a3c7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_11:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_12:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_13:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_14:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_15:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_16:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_17:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_18:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_19:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n    tag_24:\n        /* \"Contracts/BConst.sol\":572:574  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":565:574  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":524:574  uint public constant MAX_TOTAL_WEIGHT  = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n    tag_26:\n        /* \"Contracts/BConst.sol\":871:877  10**10 */\n      0x02540be400\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":864:877  BONE / 10**10 */\n      dup2\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      div\n        /* \"Contracts/BConst.sol\":823:877  uint public constant BPOW_PRECISION    = BONE / 10**10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n    tag_28:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":415:460  uint public constant MIN_WEIGHT        = BONE */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n    tag_30:\n        /* \"Contracts/BConst.sol\":295:300  10**6 */\n      0x0f4240\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":288:300  BONE / 10**6 */\n      dup2\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      div\n        /* \"Contracts/BConst.sol\":247:300  uint public constant MIN_FEE           = BONE / 10**6 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n    tag_32:\n        /* \"Contracts/BConst.sol\":629:635  10**12 */\n      0xe8d4a51000\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":622:635  BONE / 10**12 */\n      dup2\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      div\n        /* \"Contracts/BConst.sol\":581:635  uint public constant MIN_BALANCE       = BONE / 10**12 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n    tag_34:\n        /* \"Contracts/BConst.sol\":692:695  100 */\n      0x64\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":685:695  BONE * 100 */\n      mul\n        /* \"Contracts/BConst.sol\":644:695  uint public constant INIT_POOL_SUPPLY  = BONE * 100 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n    tag_36:\n        /* \"Contracts/BConst.sol\":996:1001  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":991:992  3 */\n      0x03\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":984:992  BONE / 3 */\n      dup2\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      div\n        /* \"Contracts/BConst.sol\":983:1001  (BONE / 3) + 1 wei */\n      add\n        /* \"Contracts/BConst.sol\":942:1001  uint public constant MAX_OUT_RATIO     = (BONE / 3) + 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n    tag_38:\n        /* \"Contracts/BColor.sol\":224:231  bytes32 */\n      0x00\n        /* \"Contracts/BColor.sol\":255:272  bytes32(\"BRONZE\") */\n      0x42524f4e5a450000000000000000000000000000000000000000000000000000\n        /* \"Contracts/BColor.sol\":248:272  return bytes32(\"BRONZE\") */\n      swap1\n      pop\n        /* \"Contracts/BColor.sol\":163:284  function getColor()\r... */\n      swap1\n      jump\t// out\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n    tag_40:\n        /* \"Contracts/BConst.sol\":237:238  8 */\n      0x08\n        /* \"Contracts/BConst.sol\":196:238  uint public constant MAX_BOUND_TOKENS  = 8 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n    tag_42:\n        /* \"Contracts/BConst.sol\":188:189  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":147:189  uint public constant MIN_BOUND_TOKENS  = 2 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n    tag_44:\n        /* \"Contracts/BConst.sol\":745:750  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":704:750  uint public constant MIN_BPOW_BASE     = 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n    tag_46:\n        /* \"Contracts/BConst.sol\":355:357  10 */\n      0x0a\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":348:357  BONE / 10 */\n      dup2\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"Contracts/BConst.sol\":307:357  uint public constant MAX_FEE           = BONE / 10 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n    tag_48:\n        /* \"Contracts/BConst.sol\":811:816  1 wei */\n      0x01\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":799:800  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":799:807  2 * BONE */\n      mul\n        /* \"Contracts/BConst.sol\":798:816  (2 * BONE) - 1 wei */\n      sub\n        /* \"Contracts/BConst.sol\":757:816  uint public constant MAX_BPOW_BASE     = (2 * BONE) - 1 wei */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n    tag_50:\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":91:138  uint public constant BONE              = 10**18 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n    tag_52:\n        /* \"Contracts/BConst.sol\":405:406  0 */\n      0x00\n        /* \"Contracts/BConst.sol\":364:406  uint public constant EXIT_FEE          = 0 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n    tag_54:\n        /* \"Contracts/BConst.sol\":515:517  50 */\n      0x32\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":508:517  BONE * 50 */\n      mul\n        /* \"Contracts/BConst.sol\":467:517  uint public constant MAX_WEIGHT        = BONE * 50 */\n      dup2\n      jump\t// out\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n    tag_56:\n        /* \"Contracts/BConst.sol\":934:935  2 */\n      0x02\n        /* \"Contracts/BConst.sol\":132:138  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Contracts/BConst.sol\":927:935  BONE / 2 */\n      dup2\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      div\n        /* \"Contracts/BConst.sol\":886:935  uint public constant MAX_IN_RATIO      = BONE / 2 */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158201ee1e9bcd28e0ed8660f5d48558e4f4bb341614429ce03d9ebe5bfd6dcd3fc2564736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610467806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a723158201ee1e9bcd28e0ed8660f5d48558e4f4bb341614429ce03d9ebe5bfd6dcd3fc2564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1e 0xe1 0xe9 0xbc 0xd2 DUP15 0xe 0xd8 PUSH7 0xF5D48558E4F4B 0xb3 COINBASE PUSH2 0x4429 0xce SUB 0xd9 0xeb 0xe5 0xbf 0xd6 0xdc 0xd3 0xfc 0x25 PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "55:3760:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:3760:3;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b0e0d136116100a2578063bc694ea211610071578063bc694ea214610278578063c36596a614610296578063c6580d12146102b4578063e4a28a52146102d2578063ec093021146102f05761010b565b8063b0e0d13614610200578063b7b800a41461021e578063ba019dab1461023c578063bc063e1a1461025a5761010b565b8063867378c5116100de578063867378c5146101885780639381cd2b146101a6578063992e2a92146101c45780639a86139b146101e25761010b565b806309a3bbe414610110578063189d00ca1461012e578063218b53821461014c57806376c7a3c71461016a575b600080fd5b61011861030e565b6040518082815260200191505060405180910390f35b61013661031d565b6040518082815260200191505060405180910390f35b610154610337565b6040518082815260200191505060405180910390f35b610172610343565b6040518082815260200191505060405180910390f35b61019061035b565b6040518082815260200191505060405180910390f35b6101ae610375565b6040518082815260200191505060405180910390f35b6101cc610384565b6040518082815260200191505060405180910390f35b6101ea61039d565b6040518082815260200191505060405180910390f35b6102086103c5565b6040518082815260200191505060405180910390f35b6102266103ca565b6040518082815260200191505060405180910390f35b6102446103cf565b6040518082815260200191505060405180910390f35b6102626103d4565b6040518082815260200191505060405180910390f35b6102806103ea565b6040518082815260200191505060405180910390f35b61029e6103fc565b6040518082815260200191505060405180910390f35b6102bc610408565b6040518082815260200191505060405180910390f35b6102da61040d565b6040518082815260200191505060405180910390f35b6102f861041c565b6040518082815260200191505060405180910390f35b6032670de0b6b3a76400000281565b6402540be400670de0b6b3a76400008161033357fe5b0481565b670de0b6b3a764000081565b620f4240670de0b6b3a76400008161035757fe5b0481565b64e8d4a51000670de0b6b3a76400008161037157fe5b0481565b6064670de0b6b3a76400000281565b60016003670de0b6b3a76400008161039857fe5b040181565b60007f42524f4e5a450000000000000000000000000000000000000000000000000000905090565b600881565b600281565b600181565b600a670de0b6b3a7640000816103e657fe5b0481565b6001670de0b6b3a76400006002020381565b670de0b6b3a764000081565b600081565b6032670de0b6b3a76400000281565b6002670de0b6b3a76400008161042e57fe5b048156fea265627a7a723158201ee1e9bcd28e0ed8660f5d48558e4f4bb341614429ce03d9ebe5bfd6dcd3fc2564736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0E0D136 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBC694EA2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC694EA2 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC36596A6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC6580D12 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xE4A28A52 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xEC093021 EQ PUSH2 0x2F0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0xB0E0D136 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB7B800A4 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xBA019DAB EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x25A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x9381CD2B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x992E2A92 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x9A86139B EQ PUSH2 0x1E2 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x9A3BBE4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x189D00CA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x218B5382 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x76C7A3C7 EQ PUSH2 0x16A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x333 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH3 0xF4240 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x357 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x371 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x398 JUMPI INVALID JUMPDEST DIV ADD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x42524F4E5A450000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3E6 JUMPI INVALID JUMPDEST DIV DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 MUL SUB DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH8 0xDE0B6B3A7640000 MUL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x42E JUMPI INVALID JUMPDEST DIV DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1e 0xe1 0xe9 0xbc 0xd2 DUP15 0xe 0xd8 PUSH7 0xF5D48558E4F4B 0xb3 COINBASE PUSH2 0x4429 0xce SUB 0xd9 0xeb 0xe5 0xbf 0xd6 0xdc 0xd3 0xfc 0x25 PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "55:3760:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:3760:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:50:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;823:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;415:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;644:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;942:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;163:121:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;196:42:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;307:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;91:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:50;572:2;132:6;565:9;524:50;:::o;823:54::-;871:6;132;864:13;;;;;;823:54;:::o;415:45::-;132:6;415:45;:::o;247:53::-;295:5;132:6;288:12;;;;;;247:53;:::o;581:54::-;629:6;132;622:13;;;;;;581:54;:::o;644:51::-;692:3;132:6;685:10;644:51;:::o;942:59::-;996:5;991:1;132:6;984:8;;;;;;983:18;942:59;:::o;163:121:0:-;224:7;255:17;248:24;;163:121;:::o;196:42:1:-;237:1;196:42;:::o;147:::-;188:1;147:42;:::o;704:46::-;745:5;704:46;:::o;307:50::-;355:2;132:6;348:9;;;;;;307:50;:::o;757:59::-;811:5;132:6;799:1;:8;798:18;757:59;:::o;91:47::-;132:6;91:47;:::o;364:42::-;405:1;364:42;:::o;467:50::-;515:2;132:6;508:9;467:50;:::o;886:49::-;934:1;132:6;927:8;;;;;;886:49;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225400",
								"executionCost": "269",
								"totalCost": "225669"
							},
							"external": {
								"BONE()": "249",
								"BPOW_PRECISION()": "276",
								"EXIT_FEE()": "271",
								"INIT_POOL_SUPPLY()": "258",
								"MAX_BOUND_TOKENS()": "228",
								"MAX_BPOW_BASE()": "241",
								"MAX_FEE()": "319",
								"MAX_IN_RATIO()": "340",
								"MAX_OUT_RATIO()": "303",
								"MAX_TOTAL_WEIGHT()": "237",
								"MAX_WEIGHT()": "301",
								"MIN_BALANCE()": "253",
								"MIN_BOUND_TOKENS()": "250",
								"MIN_BPOW_BASE()": "272",
								"MIN_FEE()": "320",
								"MIN_WEIGHT()": "273",
								"getColor()": "302"
							},
							"internal": {
								"badd(uint256,uint256)": "infinite",
								"bdiv(uint256,uint256)": "infinite",
								"bfloor(uint256)": "infinite",
								"bmul(uint256,uint256)": "infinite",
								"bpow(uint256,uint256)": "infinite",
								"bpowApprox(uint256,uint256,uint256)": "infinite",
								"bpowi(uint256,uint256)": "infinite",
								"bsub(uint256,uint256)": "infinite",
								"bsubSign(uint256,uint256)": "infinite",
								"btoi(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "MSTORE"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "POP"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "DUP1"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "CODECOPY"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 3815,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201ee1e9bcd28e0ed8660f5d48558e4f4bb341614429ce03d9ebe5bfd6dcd3fc2564736f6c634300050c0032",
									".code": [
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "LT"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "SHR"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "BC694EA2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "C36596A6"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "C6580D12"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "E4A28A52"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "EC093021"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "B0E0D136"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "B7B800A4"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "BA019DAB"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "BC063E1A"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "GT"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "867378C5"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "9381CD2B"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "992E2A92"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "9A86139B"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "9A3BBE4"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "189D00CA"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "218B5382"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "76C7A3C7"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPI"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 3815,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP3"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SUB"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "RETURN"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP3"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SUB"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "RETURN"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "ADD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "MLOAD"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "RETURN"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MSTORE"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SUB"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "RETURN"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SUB"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "RETURN"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "RETURN"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP3"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MSTORE"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ADD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "POP"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "MLOAD"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SUB"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "SWAP1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "RETURN"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP3"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MSTORE"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ADD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "MLOAD"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "RETURN"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "MLOAD"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "SWAP1"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "RETURN"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP3"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SUB"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "RETURN"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "MLOAD"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "RETURN"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP3"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 572,
											"end": 574,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "MUL"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "2540BE400"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPI"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "INVALID"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 300,
											"name": "DIV"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 247,
											"end": 300,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"value": "E8D4A51000"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "INVALID"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 635,
											"name": "DIV"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 581,
											"end": 635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPI"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "INVALID"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DIV"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 1001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 272,
											"name": "PUSH",
											"value": "42524F4E5A450000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 163,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 238,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 238,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 188,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 147,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "MUL"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SUB"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "DUP2"
										},
										{
											"begin": 91,
											"end": 138,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "MUL"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 132,
											"end": 138,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "INVALID"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 935,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONE()": "c36596a6",
							"BPOW_PRECISION()": "189d00ca",
							"EXIT_FEE()": "c6580d12",
							"INIT_POOL_SUPPLY()": "9381cd2b",
							"MAX_BOUND_TOKENS()": "b0e0d136",
							"MAX_BPOW_BASE()": "bc694ea2",
							"MAX_FEE()": "bc063e1a",
							"MAX_IN_RATIO()": "ec093021",
							"MAX_OUT_RATIO()": "992e2a92",
							"MAX_TOTAL_WEIGHT()": "09a3bbe4",
							"MAX_WEIGHT()": "e4a28a52",
							"MIN_BALANCE()": "867378c5",
							"MIN_BOUND_TOKENS()": "b7b800a4",
							"MIN_BPOW_BASE()": "ba019dab",
							"MIN_FEE()": "76c7a3c7",
							"MIN_WEIGHT()": "218b5382",
							"getColor()": "9a86139b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BPOW_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXIT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_POOL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_IN_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_OUT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_TOTAL_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BOUND_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_BPOW_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WEIGHT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Contracts/BNum.sol\":\"BNum\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/BColor.sol\":{\"keccak256\":\"0x47e6dfdf55fbb5f781d4422882964b5026a9d3ae6d9c36bf5b909bf8ffac840b\",\"urls\":[\"bzz-raw://37a685b44a7507058abd4602e5132f1001ec67799521f4c3db83d787a11d31f9\",\"dweb:/ipfs/QmaFje2c9F35ws5Na6n8BRur2RXDGopZeUiFJy1ywwH5EV\"]},\"Contracts/BConst.sol\":{\"keccak256\":\"0xc09e1b6426216e6fc1246376f2796ff3e176036bc7639e584cf365aedebd0083\",\"urls\":[\"bzz-raw://d813f692c759a83e62614caf0bde6ce976dd1614af0197739ff4183621284b32\",\"dweb:/ipfs/QmdMoeU8gQ1RYk5XDhbpatzFKbqUHNSkCt5KyhBQVWHhcv\"]},\"Contracts/BNum.sol\":{\"keccak256\":\"0xb202d7e4df259922cd473b65caaf4ed622715b4cdaed24d532968eaa5c3c7f46\",\"urls\":[\"bzz-raw://46ec88582356707ec82a6655746e6619b4f1076f77a6a4167f0c2ea9a7dd59ce\",\"dweb:/ipfs/Qmb3hkBCfx5RQaoTHDhGAuhRoZDh1JVWVKhbg85dnBVC4z\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Contracts/BColor.sol": {
				"ast": {
					"absolutePath": "Contracts/BColor.sol",
					"exportedSymbols": {
						"BBronze": [
							20
						],
						"BColor": [
							7
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "BColor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getColor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "113:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:9:0"
									},
									"scope": 7,
									"src": "52:70:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "29:96:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "BColor",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 7,
										"src": "149:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BColor_$7",
											"typeString": "contract BColor"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "149:6:0"
								}
							],
							"contractDependencies": [
								7
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20,
								7
							],
							"name": "BBronze",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "233:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "42524f4e5a45",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "263:8:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
																"typeString": "literal_string \"BRONZE\""
															},
															"value": "BRONZE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_4163e3f7a99fc80b57ec838b307c7a27558a888bb048d8e4d5cc03e3134dee47",
																"typeString": "literal_string \"BRONZE\""
															}
														],
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "255:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "255:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 13,
												"id": 17,
												"nodeType": "Return",
												"src": "248:24:0"
											}
										]
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getColor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:9:0"
									},
									"scope": 20,
									"src": "163:121:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "129:158:0"
						}
					],
					"src": "2:287:0"
				},
				"id": 0
			},
			"Contracts/BConst.sol": {
				"ast": {
					"absolutePath": "Contracts/BConst.sol",
					"exportedSymbols": {
						"BConst": [
							108
						]
					},
					"id": 109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "4:23:1"
						},
						{
							"absolutePath": "Contracts/BColor.sol",
							"file": "./BColor.sol",
							"id": 23,
							"nodeType": "ImportDirective",
							"scope": 109,
							"sourceUnit": 21,
							"src": "31:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 24,
										"name": "BBronze",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 20,
										"src": "76:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BBronze_$20",
											"typeString": "contract BBronze"
										}
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "76:7:1"
								}
							],
							"contractDependencies": [
								7,
								20
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								20,
								7
							],
							"name": "BConst",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 30,
									"name": "BONE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "91:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "91:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 27,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "132:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "136:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "132:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 33,
									"name": "MIN_BOUND_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "147:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "147:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "188:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 36,
									"name": "MAX_BOUND_TOKENS",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "196:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "196:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "38",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "237:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 43,
									"name": "MIN_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "247:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "247:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 42,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 38,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "288:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 39,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "295:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "36",
												"id": 40,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "299:1:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "295:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "288:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 48,
									"name": "MAX_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "307:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "307:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 45,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "348:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "355:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "348:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 51,
									"name": "EXIT_FEE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "364:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "364:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "405:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 54,
									"name": "MIN_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "415:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "415:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 53,
										"name": "BONE",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 30,
										"src": "456:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 59,
									"name": "MAX_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "467:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "467:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 56,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "508:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "515:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"src": "508:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 64,
									"name": "MAX_TOTAL_WEIGHT",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "524:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "524:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 61,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "565:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "572:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"src": "565:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 71,
									"name": "MIN_BALANCE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "581:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "581:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 66,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "622:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											},
											"id": 69,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "629:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3132",
												"id": 68,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "633:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12_by_1",
													"typeString": "int_const 12"
												},
												"value": "12"
											},
											"src": "629:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000_by_1",
												"typeString": "int_const 1000000000000"
											}
										},
										"src": "622:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 76,
									"name": "INIT_POOL_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "644:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "644:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 73,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "685:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313030",
											"id": 74,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "692:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "685:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 79,
									"name": "MIN_BPOW_BASE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "704:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "704:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "745:5:1",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 87,
									"name": "MAX_BPOW_BASE",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "757:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "757:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "799:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "803:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 84,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "798:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "811:5:1",
											"subdenomination": "wei",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "798:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 94,
									"name": "BPOW_PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "823:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "823:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 89,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "864:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"id": 92,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 90,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "871:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 91,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "875:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"src": "871:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											}
										},
										"src": "864:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 99,
									"name": "MAX_IN_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "886:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "886:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 96,
											"name": "BONE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 30,
											"src": "927:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 97,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "934:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "927:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 107,
									"name": "MAX_OUT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "942:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 100,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "942:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "984:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "984:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 104,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "983:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 105,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "996:5:1",
											"subdenomination": "wei",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "983:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 109,
							"src": "57:948:1"
						}
					],
					"src": "4:1003:1"
				},
				"id": 1
			},
			"Contracts/BMath.sol": {
				"ast": {
					"absolutePath": "Contracts/BMath.sol",
					"exportedSymbols": {
						"BMath": [
							679
						]
					},
					"id": 680,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "4:23:2"
						},
						{
							"absolutePath": "Contracts/BNum.sol",
							"file": "./BNum.sol",
							"id": 111,
							"nodeType": "ImportDirective",
							"scope": 680,
							"sourceUnit": 1153,
							"src": "31:20:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 112,
										"name": "BBronze",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 20,
										"src": "73:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BBronze_$20",
											"typeString": "contract BBronze"
										}
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "73:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 114,
										"name": "BConst",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 108,
										"src": "82:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BConst_$108",
											"typeString": "contract BConst"
										}
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "82:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 116,
										"name": "BNum",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1152,
										"src": "90:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BNum_$1152",
											"typeString": "contract BNum"
										}
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "90:4:2"
								}
							],
							"contractDependencies": [
								7,
								20,
								108,
								1152
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 679,
							"linearizedBaseContracts": [
								679,
								1152,
								108,
								20,
								7
							],
							"name": "BMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1244:276:2",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"name": "numer",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "1255:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 135,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1273:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 136,
															"name": "tokenWeightIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "1289:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 134,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1268:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1255:48:2"
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "denom",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "1314:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 139,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1314:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 142,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1332:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 143,
															"name": "tokenWeightOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1349:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1327:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1327:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:50:2"
											},
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "1375:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1375:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 149,
															"name": "numer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1393:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 150,
															"name": "denom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1400:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 148,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1388:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1375:31:2"
											},
											{
												"assignments": [
													154
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"name": "scale",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "1417:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 153,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1417:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 156,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1435:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 158,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1446:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 159,
																	"name": "swapFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1452:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 157,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1441:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1441:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 155,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1430:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1417:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 163,
																"name": "spotPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1481:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 165,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "1498:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 166,
																		"name": "scale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "1505:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 164,
																	"name": "bmul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1493:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1493:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1481:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 169,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1480:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 170,
												"nodeType": "Return",
												"src": "1472:40:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcSpotPrice                                                                             //\n// sP = spotPrice                                                                            //\n// bI = tokenBalanceIn                ( bI / wI )         1                                  //\n// bO = tokenBalanceOut         sP =  -----------  *  ----------                             //\n// wI = tokenWeightIn                 ( bO / wO )     ( 1 - sF )                             //\n// wO = tokenWeightOut                                                                       //\n// sF = swapFee                                                                              //*********************************************************************************************",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcSpotPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "tokenBalanceIn",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1044:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "tokenWeightIn",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1074:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"name": "tokenBalanceOut",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1103:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1103:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "tokenWeightOut",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1134:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1134:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1164:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1164:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1033:150:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "spotPrice",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1223:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1222:16:2"
									},
									"scope": 679,
									"src": "1011:509:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2806:415:2",
										"statements": [
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"name": "weightRatio",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "2817:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 189,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "tokenWeightIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2841:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 193,
															"name": "tokenWeightOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2856:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 191,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2836:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2817:54:2"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"name": "adjustedIn",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "2882:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 196,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2905:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2900:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2900:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2882:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "adjustedIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2930:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 205,
																"name": "tokenAmountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "2948:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 206,
																"name": "adjustedIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2963:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 204,
															"name": "bmul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "2943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2943:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2930:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2930:44:2"
											},
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"name": "y",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "2985:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 210,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2985:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 213,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2999:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "tokenBalanceIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "3020:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 216,
																	"name": "adjustedIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "3036:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 214,
																"name": "badd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "3015:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3015:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2994:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:63:2"
											},
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"name": "foo",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "3059:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3059:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 223,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3075:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 224,
															"name": "weightRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3078:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 222,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3070:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3059:31:2"
											},
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"name": "bar",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "3101:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3101:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 230,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "3117:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 231,
															"name": "foo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3123:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "3112:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3112:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3101:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 234,
														"name": "tokenAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "3138:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 236,
																"name": "tokenBalanceOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "3160:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 237,
																"name": "bar",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3177:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 235,
															"name": "bmul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "3155:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3155:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3138:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3138:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"name": "tokenAmountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "3199:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 242,
												"nodeType": "Return",
												"src": "3192:21:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcOutGivenIn                                                                            //\n// aO = tokenAmountOut                                                                       //\n// bO = tokenBalanceOut                                                                      //\n// bI = tokenBalanceIn              /      /            bI             \\    (wI / wO) \\      //\n// aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //\n// wI = tokenWeightIn               \\      \\ ( bI + ( aI * ( 1 - sF )) /              /      //\n// wO = tokenWeightOut                                                                       //\n// sF = swapFee                                                                              //*********************************************************************************************",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcOutGivenIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "tokenBalanceIn",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2572:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2572:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "tokenWeightIn",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2602:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2602:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"name": "tokenBalanceOut",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2631:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"name": "tokenWeightOut",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2662:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"name": "tokenAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2692:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2692:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2721:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2721:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2561:179:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"name": "tokenAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2780:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2780:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:21:2"
									},
									"scope": 679,
									"src": "2538:683:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4507:404:2",
										"statements": [
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"name": "weightRatio",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "4518:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4518:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 264,
															"name": "tokenWeightOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4542:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 265,
															"name": "tokenWeightIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4558:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "4537:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4537:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4518:54:2"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"name": "diff",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "4583:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4583:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 271,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "4600:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 272,
															"name": "tokenAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4617:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "4595:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:49:2"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"name": "y",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "4643:6:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4643:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 278,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "4657:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 279,
															"name": "diff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4674:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "4652:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:36:2"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"name": "foo",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "4690:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4690:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4706:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "weightRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "4709:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4701:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4701:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4690:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 289,
														"name": "foo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4732:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 291,
																"name": "foo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "4743:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 292,
																"name": "BONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "4748:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 290,
															"name": "bsub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "4738:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4738:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4732:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4732:21:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "tokenAmountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4764:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 298,
																"name": "BONE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "4785:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 299,
																"name": "swapFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "4791:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 297,
															"name": "bsub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "4780:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4780:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4764:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "4764:35:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 303,
														"name": "tokenAmountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4810:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 306,
																		"name": "tokenBalanceIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "4836:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 307,
																		"name": "foo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "4852:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 305,
																	"name": "bmul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "4831:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4831:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 309,
																"name": "tokenAmountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "4858:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 304,
															"name": "bdiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "4826:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4826:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4810:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "4810:62:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 313,
													"name": "tokenAmountIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "4890:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 314,
												"nodeType": "Return",
												"src": "4883:20:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcInGivenOut                                                                            //\n// aI = tokenAmountIn                                                                        //\n// bO = tokenBalanceOut               /  /     bO      \\    (wO / wI)      \\                 //\n// bI = tokenBalanceIn          bI * |  | ------------  | ^            - 1  |                //\n// aO = tokenAmountOut    aI =        \\  \\ ( bO - aO ) /                   /                 //\n// wI = tokenWeightIn           --------------------------------------------                 //\n// wO = tokenWeightOut                          ( 1 - sF )                                   //\n// sF = swapFee                                                                              //*********************************************************************************************",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcInGivenOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"name": "tokenBalanceIn",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4273:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4273:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"name": "tokenWeightIn",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4303:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4303:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"name": "tokenBalanceOut",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4332:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4332:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"name": "tokenWeightOut",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4363:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "tokenAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4393:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4393:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4423:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4423:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4262:180:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"name": "tokenAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4482:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4481:20:2"
									},
									"scope": 679,
									"src": "4239:672:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "6198:898:2",
										"statements": [
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"name": "normalizedWeight",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6457:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6457:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 336,
															"name": "tokenWeightIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6486:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "totalWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6501:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "6481:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6481:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6457:56:2"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"name": "zaz",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6524:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 344,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "6545:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 345,
																	"name": "normalizedWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "6551:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 343,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "6540:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6540:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 347,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6570:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "6535:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6535:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:54:2"
											},
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"name": "tokenAmountInAfterFee",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6590:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 350,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6590:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 353,
															"name": "tokenAmountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "6624:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 355,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "6644:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 356,
																	"name": "zaz",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "6650:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 354,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "6639:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6639:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "6619:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6619:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6590:65:2"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"name": "newTokenBalanceIn",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6668:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6668:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 363,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "6698:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 364,
															"name": "tokenAmountInAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6714:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "badd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "6693:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6693:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6668:68:2"
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"name": "tokenInRatio",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6747:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6747:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 370,
															"name": "newTokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6772:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "6791:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "6767:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6767:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6747:59:2"
											},
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"name": "poolRatio",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6887:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6887:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "tokenInRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6909:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "normalizedWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6923:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "6904:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6904:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6887:53:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"name": "newPoolSupply",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6951:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6951:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 384,
															"name": "poolRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "6977:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 385,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6988:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "6972:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6972:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6951:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 388,
														"name": "poolAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7010:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 390,
																"name": "newPoolSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "7031:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 391,
																"name": "poolSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "7046:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 389,
															"name": "bsub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7026:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7026:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7010:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "7010:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 395,
													"name": "poolAmountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 331,
													"src": "7075:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 332,
												"id": 396,
												"nodeType": "Return",
												"src": "7068:20:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcPoolOutGivenSingleIn                                                                  //\n// pAo = poolAmountOut         /                                              \\              //\n// tAi = tokenAmountIn        ///      /     //    wI \\      \\\\       \\     wI \\             //\n// wI = tokenWeightIn        //| tAi *| 1 - || 1 - --  | * sF || + tBi \\    --  \\            //\n// tW = totalWeight     pAo=||  \\      \\     \\\\    tW /      //         | ^ tW   | * pS - pS //\n// tBi = tokenBalanceIn      \\\\  ------------------------------------- /        /            //\n// pS = poolSupply            \\\\                    tBi               /        /             //\n// sF = swapFee                \\                                              /              //*********************************************************************************************",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcPoolOutGivenSingleIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"name": "tokenBalanceIn",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "5973:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5973:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "tokenWeightIn",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6003:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6003:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"name": "poolSupply",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6032:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6032:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "totalWeight",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6058:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6058:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"name": "tokenAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6085:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6085:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6114:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5962:171:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "poolAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6173:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6172:20:2"
									},
									"scope": 679,
									"src": "5929:1167:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "8383:924:2",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"name": "normalizedWeight",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8394:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 415,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8394:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 418,
															"name": "tokenWeightIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "8423:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 419,
															"name": "totalWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8438:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8418:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8394:56:2"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"name": "newPoolSupply",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8461:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8461:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 425,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8487:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 426,
															"name": "poolAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "8499:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 424,
														"name": "badd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "8482:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8482:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8461:52:2"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"name": "poolRatio",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8524:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 432,
															"name": "newPoolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "8546:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 433,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8561:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8541:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8541:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8524:48:2"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"name": "boo",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8650:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8650:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 439,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "8666:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "normalizedWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "8672:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8661:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8661:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8650:39:2"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"name": "tokenInRatio",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8701:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8701:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "poolRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "8726:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "boo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "8737:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "8721:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8721:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8701:40:2"
											},
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"name": "newTokenBalanceIn",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8752:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 450,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8752:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 453,
															"name": "tokenInRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "8782:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 454,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8796:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "8777:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8777:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8752:59:2"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"name": "tokenAmountInAfterFee",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "8822:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8822:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 460,
															"name": "newTokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8856:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 461,
															"name": "tokenBalanceIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "8875:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "8851:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8822:68:2"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"name": "zar",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "9143:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9143:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 468,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "9164:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 469,
																	"name": "normalizedWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "9170:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 467,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "9159:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9159:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "9189:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9154:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9154:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9143:54:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "tokenAmountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "9208:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 476,
																"name": "tokenAmountInAfterFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "9229:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 478,
																		"name": "BONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "9257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 479,
																		"name": "zar",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "9263:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 477,
																	"name": "bsub",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9252:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9252:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 475,
															"name": "bdiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9224:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9224:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9208:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "9208:60:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 484,
													"name": "tokenAmountIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "9286:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 485,
												"nodeType": "Return",
												"src": "9279:20:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcSingleInGivenPoolOut                                                                  //\n// tAi = tokenAmountIn              //(pS + pAo)\\     /    1    \\\\                           //\n// pS = poolSupply                 || ---------  | ^ | --------- || * bI - bI                //\n// pAo = poolAmountOut              \\\\    pS    /     \\(wI / tW)//                           //\n// bI = balanceIn          tAi =  --------------------------------------------               //\n// wI = weightIn                              /      wI  \\                                   //\n// tW = totalWeight                          |  1 - ----  |  * sF                            //\n// sF = swapFee                               \\      tW  /                                   //*********************************************************************************************",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcSingleInGivenPoolOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "tokenBalanceIn",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8158:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8158:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"name": "tokenWeightIn",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8188:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8188:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"name": "poolSupply",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8217:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8217:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"name": "totalWeight",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8243:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8243:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"name": "poolAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8270:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8270:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8299:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8299:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8147:171:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"name": "tokenAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "8358:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8358:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8357:20:2"
									},
									"scope": 679,
									"src": "8114:1193:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "10697:992:2",
										"statements": [
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"name": "normalizedWeight",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "10708:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10708:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 507,
															"name": "tokenWeightOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "10737:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 508,
															"name": "totalWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "10753:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "10732:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10732:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10708:57:2"
											},
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"name": "poolAmountInAfterExitFee",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "10873:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 511,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10873:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 514,
															"name": "poolAmountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "10910:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 516,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "10929:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 517,
																	"name": "EXIT_FEE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "10935:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 515,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "10924:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10924:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "10905:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10905:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10873:72:2"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"name": "newPoolSupply",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "10956:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10956:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 524,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "10982:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "poolAmountInAfterExitFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "10994:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10977:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10977:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10956:63:2"
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"name": "poolRatio",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "11030:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 528,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11030:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 531,
															"name": "newPoolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11052:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11067:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "11047:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11030:48:2"
											},
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"name": "tokenOutRatio",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "11151:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 535,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11151:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 538,
															"name": "poolRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "11177:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 540,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "11193:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 541,
																	"name": "normalizedWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "11199:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 539,
																"name": "bdiv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "11188:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11188:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "11172:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11172:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11151:66:2"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"name": "newTokenBalanceOut",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "11228:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 545,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 548,
															"name": "tokenOutRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "11259:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 549,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "11274:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 547,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "11254:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11254:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11228:62:2"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"name": "tokenAmountOutBeforeSwapFee",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "11303:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11303:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 555,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "11343:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "newTokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "11360:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "11338:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11303:76:2"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"name": "zaz",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "11516:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11516:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 568,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 563,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "11537:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 564,
																	"name": "normalizedWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "11543:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 562,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "11532:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11532:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 566,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "11562:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "11527:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11527:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11516:54:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 569,
														"name": "tokenAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "11582:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 571,
																"name": "tokenAmountOutBeforeSwapFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "11604:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 573,
																		"name": "BONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "11638:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 574,
																		"name": "zaz",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "11644:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 572,
																	"name": "bsub",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "11633:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11633:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 570,
															"name": "bmul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "11599:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11599:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11582:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "11582:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 579,
													"name": "tokenAmountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "11667:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 580,
												"nodeType": "Return",
												"src": "11660:21:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcSingleOutGivenPoolIn                                                                  //\n// tAo = tokenAmountOut            /      /                                             \\\\   //\n// bO = tokenBalanceOut           /      // pS - (pAi * (1 - eF)) \\     /    1    \\      \\\\  //\n// pAi = poolAmountIn            | bO - || ----------------------- | ^ | --------- | * b0 || //\n// ps = poolSupply                \\      \\\\          pS           /     \\(wO / tW)/      //  //\n// wI = tokenWeightIn      tAo =   \\      \\                                             //   //\n// tW = totalWeight                    /     /      wO \\       \\                             //\n// sF = swapFee                    *  | 1 - |  1 - ---- | * sF  |                            //\n// eF = exitFee                        \\     \\      tW /       /                             //*********************************************************************************************",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcSingleOutGivenPoolIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "tokenBalanceOut",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10470:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"name": "tokenWeightOut",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10501:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10501:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"name": "poolSupply",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10531:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10531:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"name": "totalWeight",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10557:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10557:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"name": "poolAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10584:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10584:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10612:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10612:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10459:172:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"name": "tokenAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "10671:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10671:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10670:21:2"
									},
									"scope": 679,
									"src": "10426:1263:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "13079:1014:2",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"name": "normalizedWeight",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13146:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13146:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 602,
															"name": "tokenWeightOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "13175:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "totalWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "13191:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "13170:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13170:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13146:57:2"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"name": "zoo",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13286:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13286:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 609,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "13302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 610,
															"name": "normalizedWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "13308:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "13297:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13297:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13286:39:2"
											},
											{
												"assignments": [
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 614,
														"name": "zar",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13336:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 613,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13336:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 616,
															"name": "zoo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "13352:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 617,
															"name": "swapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "13357:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "13347:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13347:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13336:29:2"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"name": "tokenAmountOutBeforeSwapFee",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13377:32:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 620,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13377:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 623,
															"name": "tokenAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "13417:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 625,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "13438:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 626,
																	"name": "zar",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "13444:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 624,
																"name": "bsub",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "13433:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13433:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "13412:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13412:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13377:72:2"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"name": "newTokenBalanceOut",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13462:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13462:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 633,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13493:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 634,
															"name": "tokenAmountOutBeforeSwapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "13510:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "13488:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13488:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13462:76:2"
											},
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"name": "tokenOutRatio",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13549:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13549:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 640,
															"name": "newTokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "13575:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 641,
															"name": "tokenBalanceOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13595:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "bdiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "13570:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13570:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13549:62:2"
											},
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"name": "poolRatio",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13691:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 644,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13691:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "tokenOutRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "13713:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 648,
															"name": "normalizedWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "13728:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "bpow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "13708:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13708:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13691:54:2"
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"name": "newPoolSupply",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13756:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 651,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 654,
															"name": "poolRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "13782:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 655,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "13793:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 653,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "13777:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13777:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13756:48:2"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"name": "poolAmountInAfterExitFee",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13815:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13815:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 661,
															"name": "poolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "13852:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "newPoolSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "13864:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "13847:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13847:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13815:63:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 665,
														"name": "poolAmountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "13988:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 667,
																"name": "poolAmountInAfterExitFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "14008:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 669,
																		"name": "BONE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "14039:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 670,
																		"name": "EXIT_FEE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "14045:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "bsub",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "14034:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14034:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 666,
															"name": "bdiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "14003:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14003:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13988:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "13988:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 675,
													"name": "poolAmountIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "14073:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 676,
												"nodeType": "Return",
												"src": "14066:19:2"
											}
										]
									},
									"documentation": "********************************************************************************************\n// calcPoolInGivenSingleOut                                                                  //\n// pAi = poolAmountIn               // /               tAo             \\\\     / wO \\     \\   //\n// bO = tokenBalanceOut            // | bO - -------------------------- |\\   | ---- |     \\  //\n// tAo = tokenAmountOut      pS - ||   \\     1 - ((1 - (tO / tW)) * sF)/  | ^ \\ tW /  * pS | //\n// ps = poolSupply                 \\\\ -----------------------------------/                /  //\n// wO = tokenWeightOut  pAi =       \\\\               bO                 /                /   //\n// tW = totalWeight           -------------------------------------------------------------  //\n// sF = swapFee                                        ( 1 - eF )                            //\n// eF = exitFee                                                                              //*********************************************************************************************",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcPoolInGivenSingleOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "tokenBalanceOut",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12852:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"name": "tokenWeightOut",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12883:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12883:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"name": "poolSupply",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12913:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"name": "totalWeight",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12939:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12939:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"name": "tokenAmountOut",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12966:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12966:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"name": "swapFee",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "12996:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12996:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12841:174:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "poolAmountIn",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "13055:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13055:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13054:19:2"
									},
									"scope": 679,
									"src": "12808:1285:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 680,
							"src": "55:14045:2"
						}
					],
					"src": "4:14098:2"
				},
				"id": 2
			},
			"Contracts/BNum.sol": {
				"ast": {
					"absolutePath": "Contracts/BNum.sol",
					"exportedSymbols": {
						"BNum": [
							1152
						]
					},
					"id": 1153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 681,
							"literals": [
								"solidity",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:3"
						},
						{
							"absolutePath": "Contracts/BConst.sol",
							"file": "./BConst.sol",
							"id": 682,
							"nodeType": "ImportDirective",
							"scope": 1153,
							"sourceUnit": 109,
							"src": "29:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 683,
										"name": "BConst",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 108,
										"src": "72:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BConst_$108",
											"typeString": "contract BConst"
										}
									},
									"id": 684,
									"nodeType": "InheritanceSpecifier",
									"src": "72:6:3"
								}
							],
							"contractDependencies": [
								7,
								20,
								108
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1152,
							"linearizedBaseContracts": [
								1152,
								108,
								20,
								7
							],
							"name": "BNum",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "163:34:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 691,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "181:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 692,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "185:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "181:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 690,
												"id": 694,
												"nodeType": "Return",
												"src": "174:15:3"
											}
										]
									},
									"documentation": null,
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "btoi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "102:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "102:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "101:8:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "152:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "152:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "151:6:3"
									},
									"scope": 1152,
									"src": "88:109:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "281:40:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 704,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "304:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 703,
															"name": "btoi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "299:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "299:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 706,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "309:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "299:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 708,
												"nodeType": "Return",
												"src": "292:21:3"
											}
										]
									},
									"documentation": null,
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bfloor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "221:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "220:8:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "269:6:3"
									},
									"scope": 1152,
									"src": "205:116:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "411:98:3",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "422:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 719,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "422:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 721,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "431:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 722,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "435:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "431:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "422:14:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 726,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "455:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 727,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "460:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "455:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4144445f4f564552464c4f57",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "463:18:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c",
																"typeString": "literal_string \"ERR_ADD_OVERFLOW\""
															},
															"value": "ERR_ADD_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de342110f18fc973afca32abdc8a7df5b7ed8442b65372631902c416e6d73b0c",
																"typeString": "literal_string \"ERR_ADD_OVERFLOW\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "447:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "447:35:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 732,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "500:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 733,
												"nodeType": "Return",
												"src": "493:8:3"
											}
										]
									},
									"documentation": null,
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "badd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "343:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "351:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "342:16:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:6:3"
									},
									"scope": 1152,
									"src": "329:180:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "599:120:3",
										"statements": [
											{
												"assignments": [
													745,
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "611:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 744,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "611:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 747,
														"name": "flag",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "619:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 746,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "619:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 749,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "641:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 750,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "644:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "bsubSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "632:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "632:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "610:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "665:5:3",
															"subExpression": {
																"argumentTypes": null,
																"id": 754,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "666:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f5355425f554e444552464c4f57",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "672:19:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687",
																"typeString": "literal_string \"ERR_SUB_UNDERFLOW\""
															},
															"value": "ERR_SUB_UNDERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dac2cbcd49a571b8a3e692e2763650776bed03103610305e021243e4b192a687",
																"typeString": "literal_string \"ERR_SUB_UNDERFLOW\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "657:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "657:35:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 759,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "710:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 760,
												"nodeType": "Return",
												"src": "703:8:3"
											}
										]
									},
									"documentation": null,
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bsub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "531:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "531:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "539:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:16:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "588:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "587:6:3"
									},
									"scope": 1152,
									"src": "517:202:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "819:131:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "834:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "834:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "896:47:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 783,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "919:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 784,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "923:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "919:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "74727565",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "926:4:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "918:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"functionReturnParameters": 772,
															"id": 788,
															"nodeType": "Return",
															"src": "911:20:3"
														}
													]
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "830:113:3",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "842:48:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 776,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "865:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 777,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "869:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "865:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "872:5:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "864:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "857:21:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bsubSign",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "745:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "753:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "753:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:16:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "802:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "802:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "808:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:12:3"
									},
									"scope": 1152,
									"src": "727:223:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "1040:229:3",
										"statements": [
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"name": "c0",
														"nodeType": "VariableDeclaration",
														"scope": 844,
														"src": "1051:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1051:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1061:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 804,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1065:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1061:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1051:15:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 808,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1085:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1090:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1085:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 811,
																		"name": "c0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "1095:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 812,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "1100:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1095:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "1105:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1095:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1085:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4d554c5f4f564552464c4f57",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1108:18:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															},
															"value": "ERR_MUL_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "1077:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1077:50:3"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"name": "c1",
														"nodeType": "VariableDeclaration",
														"scope": 844,
														"src": "1138:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 820,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1138:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 822,
														"name": "c0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1148:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1154:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1161:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1154:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 826,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1153:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1148:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:25:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 830,
																"name": "c1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "1182:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 831,
																"name": "c0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1188:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1182:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4d554c5f4f564552464c4f57",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1192:18:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															},
															"value": "ERR_MUL_OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa158ef700dfe53f1ea66be55a14e10c48fd667bb2e5b5d00214c58598497d7c",
																"typeString": "literal_string \"ERR_MUL_OVERFLOW\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "1174:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1174:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "1174:37:3"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"name": "c2",
														"nodeType": "VariableDeclaration",
														"scope": 844,
														"src": "1222:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 836,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1222:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 838,
														"name": "c1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "1232:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 839,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1237:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1232:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1222:19:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 842,
													"name": "c2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 837,
													"src": "1259:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 800,
												"id": 843,
												"nodeType": "Return",
												"src": "1252:9:3"
											}
										]
									},
									"documentation": null,
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bmul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "972:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "972:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "980:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "971:16:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1029:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1029:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:6:3"
									},
									"scope": 1152,
									"src": "958:311:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "1359:305:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "1378:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1383:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1378:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f5a45524f",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1386:14:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11",
																"typeString": "literal_string \"ERR_DIV_ZERO\""
															},
															"value": "ERR_DIV_ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b991f14436c8a6c8e4a1be4516702e33284b5463d2b720d5d2b1084f857b5d11",
																"typeString": "literal_string \"ERR_DIV_ZERO\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "1370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1370:31:3"
											},
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"name": "c0",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1412:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 861,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1412:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 863,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "1422:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 864,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1426:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1412:18:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 868,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1449:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1454:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1449:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 871,
																		"name": "c0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "1459:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 872,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "1464:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1459:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1469:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1459:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f494e5445524e414c",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:18:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															},
															"value": "ERR_DIV_INTERNAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "1441:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "1441:53:3"
											},
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"name": "c1",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1522:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 880,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1522:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 882,
														"name": "c0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "1532:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 883,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "1538:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1542:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1538:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 886,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1532:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1522:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 890,
																"name": "c1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1563:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 891,
																"name": "c0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "1569:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1563:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f4449565f494e5445524e414c",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1573:18:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															},
															"value": "ERR_DIV_INTERNAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb2cd205e4c8c10985e7a8998fb4ecbc62c821542a86b1082a507fd8e2bac71",
																"typeString": "literal_string \"ERR_DIV_INTERNAL\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "1555:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1555:37:3"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"name": "c2",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1620:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1620:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 898,
														"name": "c1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1630:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 899,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "1635:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1630:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1620:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 902,
													"name": "c2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 897,
													"src": "1654:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 853,
												"id": 903,
												"nodeType": "Return",
												"src": "1647:9:3"
											}
										]
									},
									"documentation": null,
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1291:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1299:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1299:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1290:16:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1348:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1348:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1347:6:3"
									},
									"scope": 1152,
									"src": "1277:387:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "1775:231:3",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"name": "z",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "1786:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 914,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1786:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 916,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "1795:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1799:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1795:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1804:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1795:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 922,
														"name": "BONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1812:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1795:21:3",
													"trueExpression": {
														"argumentTypes": null,
														"id": 921,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "1808:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1786:30:3"
											},
											{
												"body": {
													"id": 957,
													"nodeType": "Block",
													"src": "1858:122:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 936,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1873:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 938,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "1882:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 939,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "1885:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 937,
																		"name": "bmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "1877:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1877:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1873:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "1873:14:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 943,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "1908:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1912:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1908:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1917:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1908:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 956,
															"nodeType": "IfStatement",
															"src": "1904:65:3",
															"trueBody": {
																"id": 955,
																"nodeType": "Block",
																"src": "1920:49:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 948,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "1939:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 950,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 915,
																						"src": "1948:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 951,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 907,
																						"src": "1951:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 949,
																					"name": "bmul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "1943:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1943:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1939:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 954,
																		"nodeType": "ExpressionStatement",
																		"src": "1939:14:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 929,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "1842:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1847:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1842:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 925,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1834:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1839:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1834:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ExpressionStatement",
													"src": "1834:6:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 932,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1850:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1850:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"nodeType": "ExpressionStatement",
													"src": "1850:6:3"
												},
												"nodeType": "ForStatement",
												"src": "1829:151:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 959,
													"name": "z",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "1997:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 960,
												"nodeType": "Return",
												"src": "1990:8:3"
											}
										]
									},
									"documentation": null,
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpowi",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1707:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1707:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1715:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1715:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1706:16:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1764:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1764:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1763:6:3"
									},
									"scope": 1152,
									"src": "1692:314:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2254:468:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 972,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2273:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 973,
																"name": "MIN_BPOW_BASE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "2281:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2273:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f42504f575f424153455f544f4f5f4c4f57",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:23:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_LOW\""
															},
															"value": "ERR_BPOW_BASE_TOO_LOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3c6d86eb18220ce6fabad4730713483274140acdfd45cb0464b732f664f22a2",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_LOW\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "2265:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "2265:55:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 979,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2339:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 980,
																"name": "MAX_BPOW_BASE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "2347:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2339:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552525f42504f575f424153455f544f4f5f48494748",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2362:24:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_HIGH\""
															},
															"value": "ERR_BPOW_BASE_TOO_HIGH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fae8d286b68d43b79d9a68b43f60ff4a50d029bf671f8f7bc816beced90009f1",
																"typeString": "literal_string \"ERR_BPOW_BASE_TOO_HIGH\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1170,
															1171
														],
														"referencedDeclaration": 1171,
														"src": "2331:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "2331:56:3"
											},
											{
												"assignments": [
													986
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"name": "whole",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "2400:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 985,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2400:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 988,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "2421:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "bfloor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "2414:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2400:25:3"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"name": "remain",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "2439:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2439:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 994,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "2458:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 995,
															"name": "whole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2463:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "bsub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "2453:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2439:30:3"
											},
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"name": "wholePow",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "2482:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 998,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2482:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1001,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2504:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "whole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "2515:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1002,
																"name": "btoi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2510:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2510:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "bpowi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2498:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2482:40:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1007,
														"name": "remain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2539:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2549:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2539:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "2535:59:3",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "2552:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1010,
																"name": "wholePow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2574:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 970,
															"id": 1011,
															"nodeType": "Return",
															"src": "2567:15:3"
														}
													]
												}
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"name": "partialResult",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "2606:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2606:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2638:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1018,
															"name": "remain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2644:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1019,
															"name": "BPOW_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2652:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "bpowApprox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "2627:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2606:61:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1023,
															"name": "wholePow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "2690:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1024,
															"name": "partialResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "2700:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "bmul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "2685:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2685:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 970,
												"id": 1026,
												"nodeType": "Return",
												"src": "2678:36:3"
											}
										]
									},
									"documentation": null,
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"name": "base",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2181:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2181:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"name": "exp",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2192:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2192:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2180:21:3"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2243:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2243:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2242:6:3"
									},
									"scope": 1152,
									"src": "2167:555:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2839:971:3",
										"statements": [
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2870:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1039,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"argumentTypes": null,
													"id": 1041,
													"name": "exp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1032,
													"src": "2883:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2870:16:3"
											},
											{
												"assignments": [
													1044,
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2898:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2898:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1046,
														"name": "xneg",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2906:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1045,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2906:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2929:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1049,
															"name": "BONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "bsubSign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "2920:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2920:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2897:43:3"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"name": "term",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2951:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2951:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"argumentTypes": null,
													"id": 1054,
													"name": "BONE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2963:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2951:16:3"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"name": "sum",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2978:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2978:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"argumentTypes": null,
													"id": 1058,
													"name": "term",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1053,
													"src": "2991:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2978:17:3"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"name": "negative",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "3006:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1060,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3006:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3022:5:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:21:3"
											},
											{
												"body": {
													"id": 1146,
													"nodeType": "Block",
													"src": "3312:468:3",
													"statements": [
														{
															"assignments": [
																1075
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1075,
																	"name": "bigK",
																	"nodeType": "VariableDeclaration",
																	"scope": 1146,
																	"src": "3327:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3327:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1079,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1076,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "3339:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1077,
																	"name": "BONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "3343:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3339:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3327:20:3"
														},
														{
															"assignments": [
																1081,
																1083
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1081,
																	"name": "c",
																	"nodeType": "VariableDeclaration",
																	"scope": 1146,
																	"src": "3363:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3363:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1083,
																	"name": "cneg",
																	"nodeType": "VariableDeclaration",
																	"scope": 1146,
																	"src": "3371:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1082,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3371:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1091,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1085,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "3393:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1087,
																				"name": "bigK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1075,
																				"src": "3401:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1088,
																				"name": "BONE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "3407:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1086,
																			"name": "bsub",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "3396:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3396:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1084,
																	"name": "bsubSign",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "3384:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3384:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,bool)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3362:51:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1092,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3428:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1094,
																			"name": "term",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "3440:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1096,
																					"name": "c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "3451:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1097,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1044,
																					"src": "3454:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1095,
																				"name": "bmul",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "3446:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3446:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1093,
																		"name": "bmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "3435:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3435:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3428:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "3428:29:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1102,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3472:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1104,
																			"name": "term",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "3484:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1105,
																			"name": "bigK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1075,
																			"src": "3490:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1103,
																		"name": "bdiv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "3479:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3479:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3472:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1108,
															"nodeType": "ExpressionStatement",
															"src": "3472:23:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1109,
																	"name": "term",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3514:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3522:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3514:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1113,
															"nodeType": "IfStatement",
															"src": "3510:20:3",
															"trueBody": {
																"id": 1112,
																"nodeType": "Break",
																"src": "3525:5:3"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 1114,
																"name": "xneg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "3551:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1120,
															"nodeType": "IfStatement",
															"src": "3547:30:3",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1115,
																		"name": "negative",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "3557:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3568:9:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1116,
																			"name": "negative",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "3569:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3557:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1119,
																"nodeType": "ExpressionStatement",
																"src": "3557:20:3"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 1121,
																"name": "cneg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "3596:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1127,
															"nodeType": "IfStatement",
															"src": "3592:30:3",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1122,
																		"name": "negative",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "3602:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3613:9:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1123,
																			"name": "negative",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "3614:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3602:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1126,
																"nodeType": "ExpressionStatement",
																"src": "3602:20:3"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 1128,
																"name": "negative",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "3641:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1144,
																"nodeType": "Block",
																"src": "3713:56:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1137,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "3732:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1139,
																						"name": "sum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "3743:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 1140,
																						"name": "term",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "3748:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1138,
																					"name": "badd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 735,
																					"src": "3738:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3738:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3732:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1143,
																		"nodeType": "ExpressionStatement",
																		"src": "3732:21:3"
																	}
																]
															},
															"id": 1145,
															"nodeType": "IfStatement",
															"src": "3637:132:3",
															"trueBody": {
																"id": 1136,
																"nodeType": "Block",
																"src": "3651:56:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1129,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "3670:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1131,
																						"name": "sum",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "3681:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"id": 1132,
																						"name": "term",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "3686:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1130,
																					"name": "bsub",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 762,
																					"src": "3676:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3676:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3670:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1135,
																		"nodeType": "ExpressionStatement",
																		"src": "3670:21:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1068,
														"name": "term",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3288:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1069,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "3296:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3288:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"initializationExpression": {
													"assignments": [
														1065
													],
													"declarations": [
														{
															"constant": false,
															"id": 1065,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1147,
															"src": "3276:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1064,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3276:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1067,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3285:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3276:10:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3307:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 1071,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "3307:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1073,
													"nodeType": "ExpressionStatement",
													"src": "3307:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3271:509:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1148,
													"name": "sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1057,
													"src": "3799:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1149,
												"nodeType": "Return",
												"src": "3792:10:3"
											}
										]
									},
									"documentation": null,
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bpowApprox",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"name": "base",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2750:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2750:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"name": "exp",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2761:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2761:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"name": "precision",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2771:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2749:37:3"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2828:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2828:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2827:6:3"
									},
									"scope": 1152,
									"src": "2730:1080:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1153,
							"src": "55:3760:3"
						}
					],
					"src": "2:3815:3"
				},
				"id": 3
			}
		}
	}
}